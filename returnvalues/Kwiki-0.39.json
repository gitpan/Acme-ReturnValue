[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub process {\n    my $hub = $self->load_hub(@_);\n    $hub->registry->load;\n    $hub->add_hooks;\n    $hub->pre_process;\n    my $html = $hub->process;\n    if (defined $html) {\n        $hub->headers->print;\n        $self->utf8_encode($html);\n        exists $ENV{MOD_PERL}\n          ? Apache->request->print($html)\n          : print $html;\n    }\n    close STDOUT unless $self->using_debug;\n    $hub->post_process;\n    return $self;\n}",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki.pm",
      "package" : "Kwiki"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub AUTOLOAD {\n    our $AUTOLOAD;\n    my ($method) = $AUTOLOAD =~ /::(\\w+)$/;\n    return if $method eq 'DESTROY';\n    $self->browser_detect(HTTP::BrowserDetect->new)\n      unless $self->browser_detect;\n    $self->browser_detect->$method(@_);\n}",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/BrowserDetect.pm",
      "package" : "Kwiki::BrowserDetect"
   },
   {
      "PPI" : "PPI::Statement::Include",
      "bad" : "use Spoon::ContentObject -Base",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/ContentObject.pm",
      "package" : "Kwiki::ContentObject"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub usage {\n    warn <<END . $self->command_usage(\"  kwiki -%-20s # %s\\n\");\n}",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Command.pm",
      "package" : "Kwiki::Command"
   },
   {
      "PPI" : "PPI::Statement::Package",
      "bad" : "package Kwiki::Users",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Users.pm",
      "package" : "Kwiki::Users"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "conf css_path => [ 'css' ]",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/CSS.pm",
      "package" : "Kwiki::CSS"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "const pane_template => 'status_pane.html'",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Status.pm",
      "package" : "Kwiki::Status"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub new_preference {\n    $self->hub->preferences->new_preference(scalar(caller), @_);\n}",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Plugin.pm",
      "package" : "Kwiki::Plugin"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub set_default_page_name {\n    my $page_name = shift;\n    $page_name = '' if $page_name and $page_name =~ /[^$ALPHANUM]/;\n    $page_name ||= $self->hub->config->main_page;\n}",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/CGI.pm",
      "package" : "Kwiki::CGI"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub display {\n    my $page = $self->pages->current;\n    return $self->redirect('')\n      unless $page;\n    my $page_title = $page->title;\n    my $page_uri = $page->uri;\n    return $self->redirect(\"action=edit;page_name=$page_uri\")\n      if not($page->exists) and $self->have_plugin('edit');\n    my $script = $self->config->script_name;\n    my $screen_title = $self->hub->have_plugin('search')\n    ? \"<a href=\\\"$script?action=search;search_term=$page_uri\\\">$page_title</a>\"\n    : $page_title;\n    eval {\n        $page->content;\n    };\n    if ($@) {\n        my $main_page = $self->config->main_page;\n        die $@ if $page->title eq $main_page;\n        return $self->redirect($main_page);\n    }\n    $self->render_screen(\n        screen_title => $screen_title,\n        page_html => $page->to_html,\n    );\n}",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Display.pm",
      "package" : "Kwiki::Display"
   },
   {
      "PPI" : "PPI::Statement::Package",
      "bad" : "package Kwiki::Formatter",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Formatter.pm",
      "package" : "Kwiki::Formatter"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "const prefix => 'Kwiki-'",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Cookie.pm",
      "package" : "Kwiki::Cookie"
   },
   {
      "PPI" : "PPI::Statement::Package",
      "bad" : "package Kwiki::Edit",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Edit.pm",
      "package" : "Kwiki::Edit"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub action {\n    $self->cgi->action || 'display';\n}",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Hub.pm",
      "package" : "Kwiki::Hub"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub clear_files {\n    $self->files([]);\n}",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/WebFile.pm",
      "package" : "Kwiki::WebFile"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub pulldown {\n    my $i = 1;\n    my @choices = @{$self->choices};\n    my @values = grep {$i++ % 2} @choices;\n    my $value = $self->value;\n    CGI::popup_menu(\n        -name => $self->owner_id . '__' . $self->id,\n        -values => \\@values,\n        -default => $value,\n        -labels => { @choices },\n        -override => 1,\n    );\n}",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Preferences.pm",
      "package" : "Kwiki::Preferences"
   },
   {
      "PPI" : "PPI::Statement::Package",
      "bad" : "package Kwiki::Pages",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Pages.pm",
      "package" : "Kwiki::Pages"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "const pane_unit => 'widget'",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Widgets.pm",
      "package" : "Kwiki::Widgets"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub warn_config {\n    <<END . shift;\n}",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Installer.pm",
      "package" : "Kwiki::Installer"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub show {\n    my $unit = shift;\n    my $action = $self->hub->action;\n    my $show = $unit->{show_for};\n    if (defined $show) {\n        for (ref($show) ? (@$show) : ($show)) {\n            return 1 if $_ eq $action;\n        }\n        return 0;\n    }\n    my $omit = $unit->{omit_for};\n    if (defined $omit) {\n        for (ref($omit) ? (@$omit) : ($omit)) {\n            return 0 if $_ eq $action;\n        }\n        return 1;\n    }\n    my $pref = $unit->{show_if_preference};\n    if (defined $pref) {\n        return $self->preferences->$pref->value;\n    }\n    \n    return 1;\n}",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Pane.pm",
      "package" : "Kwiki::Pane"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "field 'id'",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Base.pm",
      "package" : "Kwiki::Base"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "const class_title => 'Kwiki Files'",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Files.pm",
      "package" : "Kwiki::Files"
   },
   {
      "PPI" : "PPI::Statement::Include",
      "bad" : "use Spoon::Template -Base",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Template.pm",
      "package" : "Kwiki::Template"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub resolve_install_path {\n    sprintf shift, $self->theme_id;\n}",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Theme.pm",
      "package" : "Kwiki::Theme"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub order {\n    @{$self->config->toolbar_order};\n}",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Toolbar.pm",
      "package" : "Kwiki::Toolbar"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "conf javascript_path => [ 'javascript' ]",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Javascript.pm",
      "package" : "Kwiki::Javascript"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub usage {\n    die \"Don't use Kwiki::Icons directly. Use a subclass of it.\";\n}",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Icons.pm",
      "package" : "Kwiki::Icons"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub revision_numbers {\n    my $page = shift;\n    [map $_->{revision_id}, @{$self->history($page)}];\n}",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Archive.pm",
      "package" : "Kwiki::Archive"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub get_packed_files {\n    my @return;\n    my @packed = super;\n    while (my ($name, $content) = splice(@packed, 0, 2)) {\n        if ($name =~ /^(plugins|config\\.yaml)$/) {\n            next if -f $name;\n        }\n        push @return, $name, $content;\n    }\n    @return;\n}",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Config.pm",
      "package" : "Kwiki::Config"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub missing_prerequisite {\n    my ($class_id, $prereq) = @_;\n    my $class_name = $self->lookup->{classes}{$class_id};\n    die \"Missing prerequisite plugin '$prereq' for $class_name\\n\";\n}",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Registry.pm",
      "package" : "Kwiki::Registry"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "const class_title => 'Basic Theme'",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Theme/Basic.pm",
      "package" : "Kwiki::Theme::Basic"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "conf template_path => [ './template/tt2' ]",
      "file" : "/var/tmp/arv_qCmZ3L/Kwiki-0.39/lib/Kwiki/Template/TT2.pm",
      "package" : "Kwiki::Template::TT2"
   }
]
