[
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "FILTER_ONLY \n    all   => sub {%attributes = ()},\n\n    code => sub {\n        1 while s/(                   # Save\n                    (?<!$sigil)       # Not preceeded by a sigil\n                    \\#                # Start of a comment.\n                    [^\\n]*            # Not a newline, not an attribute,\n                    (?: $sigil (?!$sec_sigil) [^\\n]*)*\n                                      # using standard unrolling.\n                  ) ($sigil) ($sec_sigil) ($name)\n                 /$1$2<$3>$4/xg;\n    },\n\n    code  => sub {\n        s{(?:                    # Declaration using 'has',\n            \\bhas \\s*                       # Must start with \"has\"\n             (?:                            # Either \n                      ($has_attribute)      #   a single ttribute, stored in $1.\n               |                            # or\n              [(] \\s* ($has_attribute (?: \\s* , \\s* $has_attribute)*) \\s* [)]\n                                            #   an attribute list, stored in $2.\n             )\n             (?: \\s* (?:is \\s+)? ($trait))? # Optional trait - stored in $3.\n             \\s* ;                          # Terminated by semi-colon.\n          ) |                    # or actual usage.\n           ($use_attribute)                 # It's in $4.\n         }\n         {$4 ? use_attribute ($4) : declare_attribute ($1 || $2, $3)}egx;\n    },\n\n    quotelike => sub {\n        if (m {^([\"`/]|q[qrx]\\s*\\S|[sm]\\s*[^\\s'])(.*)(\\S)$}s) {\n            $_ = $1 . interpolate ($2) . $3\n        }\n    },\n\n\n    code => sub {\n        s<^(\\s*) method (\\s+ [a-zA-Z_]\\w* \\s*     # sub name\n            (?:\\([^)]*\\) \\s*)?                    # Optional prototype\n            \\{)                                   # Opening of block\n         ><$1 sub $2 my \\$self = shift;>mgx;\n    },\n\n    code => sub {\n        my $destroy = <<'        --';\n\n        my $destroy_attributes = destroy_attributes;\n\n        $destroy  =~ s/DESTROY_ATTRIBUTES/$destroy_attributes/;\n        $destroy  =~ s/^ {8}//gm;\n\n        $_ .= $destroy;\n    },\n\n    code => sub {\n        1 while s/(                   # Save\n                    (?<!$sigil)       # Not preceeded by a sigil\n                    \\#                # Start of a comment.\n                    [^\\n]*            # Not a newline, not an attribute,\n                    (?: $sigil (?!<$sec_sigil>) [^\\n]*)*\n                                      # using standard unrolling.\n                  ) ($sigil) <($sec_sigil)> ($name)\n                 /$1$2$3$4/xg;\n    },",
      "file" : "/var/tmp/arv_VMc9Z4/Lexical-Attributes-2009121601/lib/Lexical/Attributes.pm",
      "package" : "Lexical::Attributes"
   }
]
