[
   {
      "PPI" : "PPI::Statement::Package",
      "bad" : "package main",
      "file" : "/var/tmp/arv_RwYiQ_/DBIx-Informix-Perform-0.01/Perform.pm",
      "package" : "DBIx::Informix::Perform"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub generate_per\n{\n    my $db = shift;\n    my $table_name = shift;\n\n    $DB = open_db($db);\n    if (0)\t\t\t\n    { \n\tlocal ($DB->{'RaiseError'},$DB->{'PrintError'}) = (1, 0);\n\tmy $tblh = eval {$DB->table_info('', '%', $table_name, 'TABLE') };\n\t$tblh ||=    eval { $DB->table_info('', \"'%'\", $table_name, 'TABLE')};\n\tmy $tblrows = $tblh->fetchall_arrayref({}); \n\tmy @tblrows = grep { $_->{'TABLE_NAME'} eq $table_name ||\n\t\t\t\t $_->{'relname'} eq $table_name}    @$tblrows;\n\tif (@tblrows > 1) {\n\t    print STDERR \"Please select one table the following:\\n\";\n\t    foreach (@tblrows) {\n\t\tprint STDERR \"   \", $_->{'TABLE_NAME'}, $/;\n\t    }\n\t    return undef;\n\t}\n    }\n\n    my $colh;\n    {\n\tlocal ($DB->{'RaiseError'},$DB->{'PrintError'}) = (1, 0);\n\t$colh = eval {$DB->column_info('', '%', $table_name, '%')}  ||\n\t    eval {$DB->column_info('', \"'%'\", $table_name, \"'%'\")};\n    }\n    my $colrows = $colh->fetchall_arrayref({});\t\n    my @colrows = @$colrows;\n    my $maxlen = 0;\t\t\n    grep { my $l = length($_->{'COLUMN_NAME'});\n\t   $l > $maxlen && ($maxlen = $l) }\n      @colrows;\n    my $defsize = 75 - $maxlen;\n    my $buf = \"database $db\\n\\nscreen\\n{\\n\";\n    my $fxxx = \"f000\";\t\t\n    my $ax = \"a0\";\t\t\n    my $b = \"b\";\t\t\n    my @attrs;\t\t\t\n    foreach my $col (@colrows) {\n\tmy ($cname, $size, $type)  =\n\t    @$col{'COLUMN_NAME', 'COLUMN_SIZE', 'DATA_TYPE'};\n\tif (!defined($size) || $size < 0) {\n\t    if ($type =~ /char/i) {\n\t\t$size = ($$col{'atttypmod'} && $$col{'atttypmod'} - 4)  ||\n\t\t    $defsize;\n\t    }\n\t    elsif ($type =~ /date/i) {\n\t\t$size = 10;\t\n\t    }\n\t    elsif ($type =~ /bool/i) {\n\t\t$size = 1;\n\t    }\n\t    else {\n\t\t$size = $defsize;\n\t    }\n\t}\n\tmy $fieldname =\n\t    $size >= 4 ? $fxxx++ :\n\t\t$size >= 2 ? $ax++ :\n\t\t    $b++;\n\tmy $fnpadding = ' ' x ($size - length($fieldname));\n\tmy $cnpadding = ' ' x ($maxlen - length($cname));\n\t$buf .=  \" $cname:$cnpadding\" . \" [\" . $fieldname . $fnpadding . \"]\\n\";\n\tpush (@attrs,  \"    $fieldname = $table_name.$cname;\\n\");\n    }\t\t\t\t\n    $buf .= \"}\\nend\\n\\n\";\n    $buf .= \"tables\\n\\t$table_name\\n\\n\";\n    $buf .= \"attributes\\n\" . join('', @attrs) . \"\\nend\\n\\n\";\n    return $buf;\n}",
      "file" : "/var/tmp/arv_RwYiQ_/DBIx-Informix-Perform-0.01/Perform/DoTable.pm",
      "package" : "DBIx::Informix::Perform::DoTable"
   }
]
