[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub filter_dest_devices {\n    my $self = shift;\n    my $devs = shift;\n    my $policy = $self->{policy};\n    my $state  = $self->{state};\n\n    my %sdevs = map { $_ => 1 } @{$state->{source_devs}},\n        @{$state->{completed_devs}}, $state->{sdev_current};\n    my @devs  = grep { ! $sdevs{$_->id} } @$devs;\n\n    my @ddevs = ();\n    for my $dev (@devs) {\n        next unless $dev->should_get_new_files;\n        my $id = $dev->id;\n        my $hostid = $dev->hostid;\n\n        if (@{$policy->{to_devices}}) {\n            next unless grep { $_ == $id } @{$policy->{to_devices}};\n        }\n        if (@{$policy->{to_hosts}}) {\n            next unless grep { $_ == $hostid } @{$policy->{to_hosts}};\n        }\n        if (@{$policy->{not_to_devices}}) {\n            next if grep { $_ == $id } @{$policy->{not_to_devices}};\n        }\n        if (@{$policy->{not_to_hosts}}) {\n            next if grep { $_ == $hostid } @{$policy->{not_to_hosts}};\n        }\n        if ($policy->{to_percent_used}) {\n            my $full = $dev->percent_full * 100;\n            next unless defined $full;\n            next unless $full > $policy->{to_percent_used};\n        }\n        if ($policy->{to_percent_free}) {\n            my $free = $dev->percent_free * 100;\n            next unless $free; \n            next unless $free > $policy->{to_percent_free};\n        }\n        if ($policy->{to_space_used}) {\n            my $used = $dev->mb_used;\n            next unless $used && $used > $policy->{to_space_used};\n        }\n        if ($policy->{to_space_free}) {\n            my $free = $dev->mb_free;\n            next unless $free && $free > $policy->{to_space_free};\n        }\n        push @ddevs, $id;\n    }\n\n    return \\@ddevs;\n}",
      "file" : "/var/tmp/arv_T5Oemg/MogileFS-Server-2.67/lib/MogileFS/Rebalance.pm",
      "package" : "MogileFS::Rebalance"
   }
]
