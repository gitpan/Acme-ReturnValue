[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub backward ($$)\n{\n\tmy ($color, $space) = @_;\n\n\tif ($color == &BLACK) {\n\t\treturn blackward($space);\n\t} elsif ($color == &WHITE) {\n\t\treturn whiteward($space);\n\t} else {\n\t\tcroak 'Invalid color';\n\t}\n}",
      "file" : "/var/tmp/arv_TmD257/Games-Chess-Referee-0.003/lib/Games/Chess/Rules.pm",
      "package" : "Games::Chess::Rules"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub can_capture ($$$)\n{\n\treturn can_occupy(@_);\n}",
      "file" : "/var/tmp/arv_TmD257/Games-Chess-Referee-0.003/lib/Games/Chess/Piece/General.pm",
      "package" : "Games::Chess::Piece::General"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub can_capture ($$$)\n{\n\treturn can_move(@_);\n}",
      "file" : "/var/tmp/arv_TmD257/Games-Chess-Referee-0.003/lib/Games/Chess/Piece/Pawn.pm",
      "package" : "Games::Chess::Piece::Pawn"
   }
]
