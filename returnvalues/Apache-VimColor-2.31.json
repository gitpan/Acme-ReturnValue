[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub handler\n{\n\tmy $req = shift;\n\tmy $filename = $req->filename ();\n\tmy $filename_without_path = basename ($filename);\n\tmy $options = get_config ($req);\n\tmy $download = 0;\n\tmy $mtime;\n\tmy $vim;\n\tmy $cache_entry;\n\tmy $elems;\n\tmy $output = '';\n\n\tif (!-e $filename or -z $filename)\n\t{\n\t\treturn (NOT_FOUND);\n\t}\n\n\tif (!-r $filename)\n\t{\n\t\treturn (FORBIDDEN);\n\t}\n\n\t$mtime = (stat ($filename))[9] or return (SERVER_ERROR);\n\n\tif ($req->args ())\n\t{\n\t\tmy %args = $req->args ();\n\n\t\tif (exists ($args{'download'})\n\t\t\t\tand ($options->{'allow_dl'}))\n\t\t{\n\t\t\t$download = 1;\n\t\t}\n\t}\n\n\t$req->content_type ($download ? 'text/perl-script' : 'text/html');\n\t$req->set_last_modified ($mtime);\n\t$req->set_etag ();\n\n\tif ($req->header_only ())\n\t{\n\t\treturn (OK);\n\t}\n\n\tif ($download)\n\t{\n\t\treturn ($req->sendfile ($filename));\n\t}\n\n\t$req->print (<<HEADER);\n\t$req->print ($options->{'cssfile'} ? qq(\\t\\t<link rel=\"stylesheet\" type=\"text/css\" href=\") . $options->{'cssfile'} . qq(\" />\\n) : <<HEADER);\n\t$req->print (<<HEADER);\n\t$req->print (qq(\\t\\t<h1>Source of <code>$filename_without_path</code>)\n\t. ($options->{'allow_dl'} ? ' (<a href=\"' . $req->uri () . '?download\">download</a>)' : '') . \"</h1>\\n\");\n\n\t$req->print (qq(\\t\\t<div class=\"fixed\">\\n));\n\n\tif (defined ($options->{'cache'}))\n\t{\n\t\t$cache_entry = $options->{'cache'}->get ($filename);\n\n\t\tif (defined ($cache_entry))\n\t\t{\n\t\t\tif ($cache_entry->[0] != $mtime)\n\t\t\t{\n\t\t\t\t$cache_entry->[0] = $mtime;\n\t\t\t\t$cache_entry->[1] = [];\n\t\t\t}\n\n\t\t\t$elems = $cache_entry->[1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$cache_entry = [$mtime, []];\n\t\t\t$elems = $cache_entry->[1];\n\t\t}\n\t}\n\telse\n\t{\n\t\t$elems = [];\n\t}\n\n\tif (scalar (@$elems) == 0)\n\t{\n\t\tmy $tmp;\n\n\t\t$vim = new Text::VimColor (file => $filename);\n\t\t$tmp = $vim->marked ();\n\n\t\tfor (my $i = 0; $i < scalar (@$tmp); $i++)\n\t\t{\n\t\t\tpush (@$elems, [$tmp->[$i][0], $tmp->[$i][1]]);\n\t\t}\n\n\t\tif (defined ($options->{'cache'}))\n\t\t{\n\t\t\t$options->{'cache'}->set ($filename, $cache_entry);\n\t\t}\n\t}\n\n\tfor (my $i = 0; $i < scalar (@$elems); $i++)\n\t{\n\t\tmy $type  = $elems->[$i][0];\n\t\tmy $value = $elems->[$i][1];\n\n\t\t$value = escape_tabs ($value, $options->{'tabstop'});\n\t\t$value = escape_html ($value);\n\n\t\tif ($type)\n\t\t{\n\t\t\t$output .= qq(<span class=\"$type\">$value</span>);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$output .= $value;\n\t\t}\n\t}\n\n\tif ($req->dir_config ('LineNumbers') and ($req->dir_config ('LineNumbers') =~ m/^(yes|on|true)$/i))\n\t{\n\t\tmy $linenumber = 1;\n\t\t$output =~ s#^#sprintf (q(<span class=\"linenumber\">%7u </span>), $linenumber++)#gem;\n\t}\n\t$req->print ($output);\n\n\t$req->print (\"\\t\\t</div>\\n\");\n\t$req->print (<<FOOTER);\n\n\treturn (OK);\n}",
      "file" : "/var/tmp/arv_FvZHgy/Apache-VimColor-2.31/VimColor.pm",
      "package" : "Apache::VimColor"
   }
]
