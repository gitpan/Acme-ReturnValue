[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub marcparse {\n    my ($strref, %args) = @_;\n    my $warning = $args{'warning'} || sub {\n        my ($msg) = @_;\n        print STDERR \"WARNING: $msg\\n\";\n    };\n    my $error = $args{'error'} || sub {\n        my ($msg) = @_;\n        die \"marcloop: error: $msg\\n\";\n    };\n    my %drop = %{ $args{'drop'} || {} };\n    my %only = %{ $args{'only'} || {} };\n    my $bibid;\n    if ($$strref !~ /\n        \\A\n                # bytes description\n                # ----- -------------------------------------------\n        (\\d{5}) # 00-04 rec length\n        (....)  # 05-08 rec status, rec type, bib level, type of control\n        (.)     # 09    character coding\n        (..)    # 10-11 indicator count, subfield code count\n        (\\d{5}) # 12-16 base address = length of leader + directory\n        (.{7})  # 17-23 other stuff\n    /x) {\n        $error->(\"Not a USMARC record: pathological leader\");\n    }\n    my ($reclen, $baseaddr) = ($1, $5);\n    if ($reclen != length $$strref) {\n        $error->(\"Incorrect record length\");\n    }\n    my $leader    = substr($$strref, 0, 24);\n    my $directory = substr($$strref, 24, $baseaddr - 24);\n    if (length($directory) % 12 != 1) {\n        $error->(\"Directory length not a multiple of 12 bytes\");\n    }\n    if (substr($directory, -1, 1) ne FIELD_TERMINATOR) {\n        $error->(\"Directory not terminated\");\n    }\n    my ($field, @fields);\n    while ($directory =~ /(...)(....)(.....)/gc) {\n        my ($tag, $len, $ofs) = ($1, $2, $3);\n        next if $drop{$tag} || (%only && !$only{$tag});\n        my $value = substr($$strref, $baseaddr + $ofs, $len);\n        if (substr($value, -1) ne FIELD_TERMINATOR) {\n            $error->(\"Field $tag not terminated\");\n        }\n        $value = substr($value, 0, -1);\n        if ($tag lt '010') {\n            push @fields, [ $tag, \\$value ];\n            if ($tag eq '001') {\n                $bibid = $value;\n            }\n        }\n        else {\n            my ($i1, $i2) = ($value =~ /\\G(.)(.)/gc);\n            my @subfields;\n            pos($value) = 2;  \n            while ($value =~ /\\G(?:\\x1f([^\\x1d-\\x1f])([^\\x1d-\\x1f]*))/gc) {\n                my $subval = $2;\n                push @subfields, [ $1, \\$subval ];\n            }\n            if (@subfields == 0) {\n                $error->(\"Empty field '$tag'\");\n            }\n            push @fields, [ $tag, \\$value, undef, $i1, $i2, @subfields ];\n        }\n    }\n    return ($leader, \\@fields);\n}",
      "file" : "/var/tmp/arv_1jRQwP/MARC-Loop-0.01/lib/MARC/Loop.pm",
      "package" : "MARC::Loop"
   }
]
