[
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "coerce Interval, from HashRef, via {\n    my $req = [keys %$_]->[0];\n    my $args = $_->{$req};\n\n    my $name = class_name($req);\n    Class::MOP::load_class($name);\n    return $name->new($args);\n}",
      "file" : "/var/tmp/arv_TLEWxO/AnyEvent-Retry-0.03/lib/AnyEvent/Retry/Types.pm",
      "package" : "AnyEvent::Retry::Types"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "around 'next' => sub {\n    my ($orig, $self) = @_;\n    $self->_inc_counter;\n    my $counter = $self->counter;\n    my $result  = $self->$orig($counter);\n    return ($result, $self->counter) if wantarray;\n    return $result;\n}",
      "file" : "/var/tmp/arv_TLEWxO/AnyEvent-Retry-0.03/lib/AnyEvent/Retry/Interval.pm",
      "package" : "AnyEvent::Retry::Interval"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "requires 'reset'",
      "file" : "/var/tmp/arv_TLEWxO/AnyEvent-Retry-0.03/lib/AnyEvent/Retry/Interval/API.pm",
      "package" : "AnyEvent::Retry::Interval::API"
   }
]
