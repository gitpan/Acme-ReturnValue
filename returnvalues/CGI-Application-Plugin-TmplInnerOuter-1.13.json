[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub _tmplsetget_code {\n   my $self = shift;\n\n   my($code,$name);\n\n   for my $val (@_){\n      if( defined $val){\n         if ($val=~/^\\w+\\.html$/){{\n            $name = $val;\n         }\n         else {\n            $code =$val;\n         }\n      }\n   }\n   $name ||= $self->tmpl_outer_name;\n\n   if(defined $code){\n      $self->{_tmplsetget_code}->{$name} = $code;\n      return $code;\n   }\n   elsif ( defined $name ){\n      \n      if( my $code = $self->{_tmplsetget_code}->{$name} ){\n         return $code;\n      }\n      else {\n           return; \n      }\n   }\n   croak('no name or code provided');\n}\n\n\n\nsub __main_html {\n   my $self = shift; \n  \n  return  q{<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \n      \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n      <html>\n      <head>\n      <title><TMPL_VAR NAME=TITLE></title>\n      <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/>\n      </head>\n      <body>\n      <TMPL_VAR NAME=BODY>\n      </body>\n      </html>};\n}\n\nsub tmpl_output {\n\tmy $self = shift;\n   $self->_feed_vars_all;  \n   $self->_feed_merge;   \n   return $self->tmpl_outer->output;\n}\n\nsub _feed_vars_all {\n   my $self = shift;\n   $self->_feed_vars( $self->tmpl_inner );   \n   $self->_feed_vars( $self->tmpl_outer );   \n   return 1;\n}\n\nsub _feed_merge {\n\tmy $self = shift;\n   $self->tmpl_outer->param( BODY => $self->tmpl_inner->output );\n   return 1;\n}\n\n\nsub tmpl_var {\n   my $self = shift;\n   $self->{_tmpl_vars} ||={};\n\n   if ( @_ ){\n      my %vars = @_;\n      for ( keys %vars ){      \n         my $key = $_; \n         my $val = $vars{$key}; \n         defined $val or next;\n         $self->{_tmpl_vars}->{$key} = $val; \n      };\n   }\n   $self->{_tmpl_vars};\n}\n\n\nsub _feed_vars {\n   my $self = shift;\n   my $tmpl = shift;\n   defined $tmpl or confess('missing arg');\n   debug('start');\n   my $vars = $self->tmpl_var;\n   VARS : for( keys %$vars){ \n\t\t\tmy $key = $_; \n         my $val = $vars->{$key};\n         defined $val or next VARS;\t\t\t\n\t\t\t$tmpl->param( $_ => $vars->{$_} );\n\t}\n   debug(\"ok\\n\");\n   return 1;\n}\n\n\nsub _debug_vars {\n   my $self = shift; \n   my $neat_layout = shift; \n   $neat_layout ||=0;\n   \n   my $v = $self->tmpl_var;\n   my @k = sort keys %$v;\n   scalar @k or return 1;   \n   \n   debug();\n   if($neat_layout){\n   \tmap { printf STDERR \" %18s : %s\\n\", $_, $v->{$_} } @k;\t\t\t\n   }\n   \n   else {   \n      map { printf STDERR \" %s'%s', \", $_, $v->{$_} } @k;\n   }\n   print STDERR \"\\n\";\n   return 1;\n}\n\n\nsub debug { print STDERR \"@_\\n\" }\n\n1;\n\n__END__\n\n\n\n\n\n\n\n\n\n",
      "file" : "/var/tmp/arv_pbBdg1/CGI-Application-Plugin-TmplInnerOuter-1.13/lib/CGI/Application/Plugin/TmplInnerOuter2.pm",
      "package" : "CGI::Application::Plugin::TmplInnerOuter"
   }
]
