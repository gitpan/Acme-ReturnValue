[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub _croak { return &Carp::confess(shift) }",
      "file" : "/var/tmp/arv_6E0Jv7/forks-0.34/lib/forks/shared.pm",
      "package" : "forks::shared"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "AUTOLOAD {\n    my($self,@packages) = @_;\n    unless (ref $self) {\n\t$self = $self->new(@packages);\n    }\n    no strict \"vars\";\n    (my $auto = $AUTOLOAD) =~ s/.*:://;\n\n    $auto =~ s/(file|dir)handles/ios/;\n    my $compat = $1;\n\n    unless ($self->{'AUTOLOAD'}{$auto}) {\n\tCarp::croak(\"invalid forks::Devel::Symdump method: $auto()\");\n    }\n\n    my @syms = $self->_partdump(uc $auto);\n    if (defined $compat) {\n\tno strict 'refs';\n        local $^W; \n\tif ($compat eq \"file\") {\n\t    @syms = grep { defined(fileno($_)) } @syms;\n\t} else {\n\t    @syms = grep { defined(telldir($_)) } @syms;\n\t}\n    }\n    return @syms; \n}\n\n1",
      "file" : "/var/tmp/arv_6E0Jv7/forks-0.34/lib/forks/Devel/Symdump.pm",
      "package" : "forks::Devel::Symdump"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub DELETE { delete ${$_[0]}->[$_[1]] }",
      "file" : "/var/tmp/arv_6E0Jv7/forks-0.34/lib/threads/shared/array.pm",
      "package" : "threads::shared::array"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub STORE { ${${$_[0]}} = $_[1] }",
      "file" : "/var/tmp/arv_6E0Jv7/forks-0.34/lib/threads/shared/scalar.pm",
      "package" : "threads::shared::scalar"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub DELETE { delete ${$_[0]}->{$_[1]} }",
      "file" : "/var/tmp/arv_6E0Jv7/forks-0.34/lib/threads/shared/hash.pm",
      "package" : "threads::shared::hash"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub WRITE { syswrite( ${$_[0]},$_[1],$_[2],$_[3] ) }",
      "file" : "/var/tmp/arv_6E0Jv7/forks-0.34/lib/threads/shared/handle.pm",
      "package" : "threads::shared::handle"
   }
]
