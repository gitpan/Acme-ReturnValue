[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub init {\n\tprint \"\\n$c{d}Welcome to Connect Four!\\n\";\n\tprint \"Set your console's background to black for best results.\\n\" if $^O ne \"MSWin32\";\n\tprint \"Exit at any time with a Control-C or equivalent.\\n\\n\";\n\twhile(1) {\n\t\tmy $connect = input(\"How many do you want to connect (3, [4], 5, 6)? \", 4, 3..6);\n\t\tmy ($w, $h) = @{(\n\t\t\t[7, 6],\n\t\t\t[8, 7],\n\t\t\t[9, 7],\n\t\t\t[10, 7],\n\t\t)[\n\t\tinput(\"What size board do you want ([1], 2, 3, 4)? \", 1, 1..4) - 1]};\n\t\tmy $turn = 0;\n\t\tmy @board = (\n\t\t\tmap [(\" \") x $w], 1..$h\n\t\t);\n\t\tprint \"\\n$c{b}\";\n\t\tprint \"|\", join(\"|\", @$_), \"|\\n\" for @board;\n\t\tprint \"-\" x ($w * 2 + 1), \"\\n\";\n\t\tprint \" \", join(\" \", 1..$w), \"\\n\\n\\n\\e[1A\";\n\t\twhile(1) {\n\t\t\tprint \"$c{$turn}Player \" . ($turn + 1) . \", choose a column: $c{save}\";\n\t\t\tmy $in;\n\t\t\twhile(1) {\n\t\t\t\t($in = <STDIN>) =~ s/^\\s+|\\s+$//g;\n\t\t\t\tprint \"$c{restore}$c{clear}\";\n\t\t\t\tif(grep $in eq $_, 1..$w and $board[0][$in-1] eq \" \") {\n\t\t\t\t\t$in--;\n\t\t\t\t\tlast;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t}\n\t\t\t}\n\t\t\tmy $up = $h + 4 . \"A\";\n\t\t\tmy $right = 1 + $in * 2 . \"C\";\n\t\t\tprint \"\\r\\e[$up\\e[$right\";\n\t\t\tmy $row = -1;\n\t\t\tdo {\n\t\t\t\tif(fork) {\n\t\t\t\t\t$row++;\n\t\t\t\t\tselect undef, undef, undef, 0.04;\n\t\t\t\t\twait;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tprint \" \\b\";\n\t\t\t\t\tprint \"\\e[1B\";\n\t\t\t\t\tprint \"o\\b\";\n\t\t\t\t\texit;\n\t\t\t\t}\n\t\t\t} while $row + 1 < $h and $board[$row+1][$in] eq \" \";\n\t\t\t$board[$row][$in] = $turn;\n\t\t\tprint \"$c{restore}\\r\";\n\t\t\tmy @all;\n\t\t\tfor([1, 0], [0, 1], [1, 1], [-1, 1]) {\n\t\t\t\tmy ($xdir, $ydir) = @$_;\n\t\t\t\tmy @mine = [$in, $row];\n\t\t\t\tfor(1, -1) {\n\t\t\t\t\tmy ($x, $y) = ($in, $row);\n\t\t\t\t\twhile(\n\t\t\t\t\t\t($x -= $xdir * $_) >= 0 and $x < $w and\n\t\t\t\t\t\t($y -= $ydir * $_) >= 0 and $y < $h and\n\t\t\t\t\t\t$board[$y][$x] eq $turn\n\t\t\t\t\t) {\n\t\t\t\t\t\tpush @mine, [$x, $y];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpush @all, @mine if @mine >= $connect;\n\t\t\t}\n\t\t\tif(@all) {\n\t\t\t\tfor(@all) {\n\t\t\t\t\tmy ($x, $y) = @$_;\n\t\t\t\t\tmy $up = $h - $y + 3 . \"A\";\n\t\t\t\t\tmy $right = 1 + $x * 2 . \"C\";\n\t\t\t\t\tprint \"\\e[$up\\e[$right\";\n\t\t\t\t\tprint \"$c{'w'.$turn}o$c{restore}\\r\";\n\t\t\t\t}\n\t\t\t\tprint \"$c{$turn}Player \" . ($turn + 1) . \" wins!$c{clear}\\n\\n\";\n\t\t\t\tprint $c{d};\n\t\t\t\tlast;\n\t\t\t}\n\t\t\tif(not grep $_ eq \" \", map @$_, @board) {\n\t\t\t\tprint \"$c{d}The game is a tie!$c{clear}\\n\\n\";\n\t\t\t\tlast;\n\t\t\t}\n\t\t\t$turn = (0, 1)[$turn-1];\n\t\t}\n\t}\n}",
      "file" : "/var/tmp/arv_EpoH3h/Games-ConnectFour-0.02/lib/Games/ConnectFour.pm",
      "package" : "Games::ConnectFour"
   }
]
