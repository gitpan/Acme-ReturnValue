[
   {
      "PPI" : "PPI::Statement::Compound",
      "bad" : "{\npackage DBI::BabyConnect::Deb;\n\nuse IO::Socket;\n\nuse strict;\nuse Symbol;\n\nsub _no_filter { return $_[0]; }\n\nsub TIEHANDLE\n{\n\tmy ($class, %args) = @_;\n\tmy $handle = gensym();\n\n\tmy $impl = bless {handle => gensym() }, $class;\n\t$impl->OPEN(%args);\n\treturn $impl;\n}\n\nsub OPEN {\n\tmy ($impl, %args) = @_;\n\topen $impl->{handle}, $args{file} or die \"Could not open that '$args{file}'\";\n\t$impl->{in_filter} = $args{in} || \\&_no_filter,\n\t$impl->{out_filter} = $args{out} || \\&_no_filter,\n}\n\nsub SEEK {\n\tmy ($impl, $position, $whence) = @_;\n\treturn sysseek($impl->{handle}, $position, $whence);\n}\n\nsub WRITE {\n\tmy ($impl, $buffer, $length, $offset) = @_;\n\t$buffer = $impl->{out_filter}->($buffer);\n\tsyswrite($impl->{handle}, $buffer, $length, $offset||0);\n}\n\nsub PRINT {\n\tmy ($impl, @data) = @_;\n\tmy $filter = $impl->{out_filter};\n\t@data = map { $filter->($_) } @data;\n\tprint { $impl->{handle} } @data;\n\t$impl->{handle}->autoflush();\n}\n\nsub PRINTF {\n\tmy ($impl, $format, @data) = @_;\n\tmy $filter = $impl->{out_filter};\n\tprint { $impl->{handle} } $filter->(sprintf $format, @data);\n}\n\nsub READ {\n\tmy ($impl, $data, $length, $offset) = @_;\n\tmy $result = sysread($impl->{handle}, $data, $length);\n\tsubstr($_[1],$offset||0,$length) = $impl->{in_filter}->($data);\n\treturn $result;\n}\n\nsub GETC {\n\tmy ($impl) = @_;\n\t$impl->{in_filter}->(getc $impl->{handle});\n}\n\nsub READLINE {\n\tmy $impl = @_;\n\t$impl->{in_filter}->(scalar readline *{$impl->{handle}});\n}\n\nsub CLOSE {\n\tmy $impl = @_;\n\tclose $impl->{handle};\n}\n\n\nsub new {\n\tmy ($class, %args) = @_;\n\tmy $self = gensym();\n\ttie *{$self}, $class, %args;\n\tbless $self, $class;\n}\n\nsub AUTOLOAD {\n\tuse vars qw( $AUTOLOAD );   \n\tmy ($self, @args) = @_;\n\treturn if $AUTOLOAD =~ /::DESTROY$/;\t\n\t$AUTOLOAD =~ s/.*:://;\n\t$AUTOLOAD =~ tr/a-z/A-Z/;\n\ttied(*{$self})->$AUTOLOAD(@args);\n}\n\n1;\n\n}",
      "file" : "/var/tmp/arv_2FHr49/DBI-BabyConnect-0.93/lib/DBI/BabyConnect.pm",
      "package" : "DBI::BabyConnect"
   }
]
