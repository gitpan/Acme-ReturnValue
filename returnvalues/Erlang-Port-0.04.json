[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub _encode\n{\n\tmy $this = shift;\n\tmy $obj  = shift;\n\t\n\tif( UNIVERSAL::isa($obj, 'Erlang::Atom') )\n\t{\n\t\t$ATOM_EXT . pack(\"n\",length($$obj)) . $$obj;\n\t}elsif( UNIVERSAL::isa($obj, 'Erlang::Binary') )\n\t{\n\t\t$BINARY_EXT . pack(\"N\",length($$obj)) . $$obj;\n\t}elsif( UNIVERSAL::isa($obj, 'Erlang::Pid') )\n\t{\n\t\tmy ($atom, $pid, $serial, $creation) = @$obj;\n\t\t$PID_EXT . $ATOM_EXT . pack(\"n\", length($atom)). $atom . pack(\"N\", $pid) . pack(\"N\", $serial) . pack(\"C\", $creation);\n\t}elsif( UNIVERSAL::isa($obj, 'ARRAY') )\n\t{\n\t\tif( UNIVERSAL::isa($obj, 'Erlang::Tuple') )\n\t\t{\n\t\t\tmy $n = @$obj;\n\t\t\tif( $n<256 )\n\t\t\t{\n\t\t\t\t$SMALL_TUPLE_EXT . pack(\"C\",0+@$obj) . $this->_encode_list(@$obj);\n\t\t\t}else\n\t\t\t{\n\t\t\t\t$LARGE_TUPLE_EXT . pack(\"N\",0+@$obj) . $this->_encode_list(@$obj);\n\t\t\t}\n\t\t}elsif( @$obj==0 )\n\t\t{\n\t\t\t$NIL_EXT;\n\t\t}else\n\t\t{\n\t\t\t$LIST_EXT . pack('N', 0+@$obj) . $this->_encode_list(@$obj, []);\n\t\t}\n\t}elsif( UNIVERSAL::isa($obj, 'HASH') )\n\t{\n\t\tmy @conv;\n\t\tforeach my $key (sort keys %$obj)\n\t\t{\n\t\t\tmy $atom = $this->_newAtom($key);\n\t\t\tpush(@conv, $this->_newTuple([$atom, $obj->{$key}]));\n\t\t}\n\t\t$this->_encode(\\@conv);\n\t}elsif( !ref($obj) )\n\t{\n\t\tif( !defined($obj) )\n\t\t{\n\t\t\t$this->_encode($this->_newAtom('undefined'));\n\t\t}elsif( $obj =~ /^-?\\d+$/ && $obj eq unpack(\"N\", pack(\"N\",$obj)) )\n\t\t{\n\t\t\tif( $obj>=0 && $obj<=255 )\n\t\t\t{\n\t\t\t\t$SMALL_INTEGER_EXT . pack(\"C\", $obj);\n\t\t\t}else\n\t\t\t{\n\t\t\t\t$INTEGER_EXT . pack(\"N\", $obj);\n\t\t\t}\n\t\t}elsif( $obj =~ /^-?\\d+(\\.\\d+)?(e[-+]?\\d+)$/ )\n\t\t{\n\t\t\t$FLOAT_EXT . substr(sprintf(\"%.20e\", $obj).(\"\\0\"x31), 0, 31);\n\t\t}else\n\t\t{\n\t\t\t$STRING_EXT . pack('n', length($obj)) . $obj;\n\t\t}\n\t}else\n\t{\n\t\tif( my $out = $this->{log} )\n\t\t{\n\t\t\tprint $out \"not ready [$obj].\\r\\n\";\n\t\t}\n\t\t$this->_encode($this->_newAtom('encode_not_ready'));\n\t}\n}",
      "file" : "/var/tmp/arv_e6PM3v/Erlang-Port-0.04/lib/Erlang/Port.pm",
      "package" : "Erlang::Port"
   }
]
