[
   {
      "PPI" : "PPI::Statement::Scheduled",
      "bad" : "BEGIN {\npackage AMSSerializer; @AMSSerializer::ISA = 'SOAP::Serializer';\nimport SOAP::Data qw/name value/;\n\nsub envelope {\n  my $this = shift;\n  my ($morr, $func, %args) = @_; \n  my ($ms,        $mtype,             $content, $conid, $docid, $howmany) =\n     ($args{ams}, $args{messagetype}, $args{content}, \n      $args{contentid}, $args{docid}, $args{howmany});\n  my @data; \n  my $docidtag;\n  my $ans= $gURI;\n  my $sns='http://systinet.com/xsd/SchemaTypes/';\n\n  if ($docid) {\n    $docidtag = $func =~ /getDocumentProcessingStatus/  ?\n                        \"documentTransactionIdentifier\" :\n                $func =~ /getDocument/ ? \n                        \"documentIdentifier\" :\n                        \"documentIdentifier\"; \n  }\n\n  if ($docid) {\n    for($func) {\n      if    (/getDocumentProcessingStatus/) { \n        push @data, name(getDocumentProcessingStatus => $docid)->type(\"long\");\n      }\n      elsif (/getDocument/)                 { \n        push @data, name(getDocument => $docid)->type(\"string\");\n      }\n    }\n  }\n\n  push @data, name(messageType => $mtype)                          if $mtype;\n  push @data, name(howMany     => $howmany)                        if $howmany;\n  push @data, name(\"doc\")->uri($sns)->attr({href => \"cid:$conid\"}) if $conid;\n\n  $this->SUPER::envelope(freeform =>\n    name(merchant =>\n        \\SOAP::Data->value( \n                            name(merchantIdentifier=>$ms->merchant)->uri($ans),\n                            name(merchantName => $ms->merchantname)->uri($ans)\n        ) \n    )->uri($sns), \n    @data\n  ); \n} \n\n1; \n}",
      "file" : "/var/tmp/arv_VS6CfY/SOAP-Amazon-MerchantTransport-0.02/lib/SOAP/Amazon/MerchantTransport.pm",
      "package" : "SOAP::Amazon::MerchantTransport"
   }
]
