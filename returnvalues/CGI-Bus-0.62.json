[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub AUTOLOAD {\n my $s =shift;\n my $m =substr($AUTOLOAD, rindex($AUTOLOAD, '::')+2);\n $s->[0]->print($s->[0]->$m(@_));\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus.pm",
      "package" : "CGI::Bus"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub _fsclose {\t\n return(0) if $^O ne 'MSWin32';\n my $mask =$_[1]||''; $mask =~s/\\//\\\\/ig;\n my $list =$_[2]||[];\n my $o =eval('use Win32::OLE; Win32::OLE->Option(\"Warn\"=>0); Win32::OLE->GetObject(\"WinNT://'\n\t.(eval{Win32::NodeName()}||$ENV{COMPUTERNAME}) .'/lanmanserver\")');\n return(0) if !$o;\n foreach my $f (grep {$_ && (eval{$_->{Path}}||'')=~/^\\Q$mask\\E/i\n\t\t\t} Win32::OLE::in($o->Resources())) {\n\tmy $n =eval{$f->{Path} =~/^\\Q$mask\\E[\\\\\\/]*(.+)/i ? $1 : undef};\n\tnext if !$n || !grep /^\\Q$n\\E$/i, @$list;\n\t$_[0]->oscmd('net','file',$f->{Name},'/close');\n }\n 1\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/wg.pm",
      "package" : "CGI::Bus::wg"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub fsscan {    \n my ($s,$opt) =@_;\n $opt ='ft' if !$opt;\n return if !$s->{-fsd};\n $s->parent->w32IISdpsn(1) if ($ENV{SERVER_SOFTWARE}||'') =~/IIS/;\n\n if ($opt =~/f/) {\n foreach my $path ($s->{-fsd}->{-path}, $s->{-fsd}->{-vspath}){\n   next if !$path || !-d $path;\n   print $s->h1(\"FileStore/Table Scan: $path\"),\"\\n\";\n   eval('use File::Find'); $File::Find::prune =0; $File::Find::dir ='';\n   File::Find::find(sub{\n    if ($_ =~/\\$$/) {\n       $File::Find::prune =1;\n       my $kp =$File::Find::dir .'/' .$_;\n       my $kd =substr($kp, length($path) +1);\n       my $kv =$s->fsnamekey($kd);\n       my $kt =$s->{-fields}->{$s->keyfld}->{-table};\n       my $kf =$s->{-fields}->{$s->keyfld}->{-col} ||(\"$kt.\" .$s->keyfld);\n       my @r  =$s->dbi->selectrow_array(\"select $kf from $kt where $kf=?\",{},$kv);\n       my $src=\"$path/$kd\";\n       my $dst =$path .$s->fsname('',$s->fsnamekey($kd));\n       if    (0 && (eval{$s->fut->delete('-',\"$src/.htaccess\")} ||1)\n                && $s->fut->rmpath($src)) {}\n       elsif (!scalar(@r)) {\n          print $s->htmlescape(\"$kp --0> $kv\"),\"<br />\\n\";\n          $s->fut->rmpath($src);\n       }\n       elsif ($src ne $dst) {\n          $s->fut->copy('-rd',$src,$dst) \n          && $s->fut->delete('-r',$src)\n          && $s->fut->rmpath($src);                    \n       }\n       if (@{$s->pushmsg}) {\n          print join(\";<br />\\n\", map {$s->htmlescape($_)} @{$s->pushmsg}), \"<br />\\n\";\n          $s->parent->set('-cache')->{-pushmsg} =undef;\n       }\n    }\n   }, $path);\n }\n }\n\n if ($opt =~/t/) {\n print $s->h1('Table/FileStore Scan'),\"\\n\";\n my $v =$s->{-vsd};\n local $s->{-rowsel1a} =undef;\n local $s->{-rowsel2a} =undef;\n $s->cmdscan(@_, sub{\n    $s->cmdsel;\n    my $fsa =!$v ? 'w'\n            :$v->{-cvd} ? (&{$v->{-cvd}}($s) ? 'w' : 'r')\n            :$v->{-svd} ? (($v->{-svd} eq $s->qparam($v->{-sf})) ? 'w' : 'r')\n            :'';\n    $s->fsacl($fsa) if $fsa && -d $s->fspath; \n    print join(\";<br />\\n\", map {$s->htmlescape($_)} @{$s->pushmsg}), \"<br />\\n\";\n });\n }\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/tmsql.pm",
      "package" : "CGI::Bus::tmsql"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub uglist {     \n my ($s, $d, $l) =@_;\n if (!defined($d)) {\n    $l =[];\n    $d ='';\n    $s->{-path} =$s->parent->dpath('udata') if !defined($s->{-path});\n } \n if (!$s->{-ksplit}) {\n    $l =[eval{$s->parent->fut->globn($s->{-path} .'/*')}];\n }\n else {\n    my $b =$s->{-path} .($d eq '' ? '' : \"/$d\");\n    foreach my $f (eval{$s->parent->fut->globn(\"$b/*\")}) {\n       if (-f \"$b/$f/$fname\") {\n          push @$l, (($d eq '' ? '' : \"/$d\") .\"/$f\")\n       }\n       elsif (-d \"$b/$f\") {\n          $s->uglist(($d eq '' ? '' : \"/$d\") .\"/$f\", $l)\n       }\n    }\n }\n if (!defined($d) || $d eq '') {\n    for (my $i =0; $i <scalar(@$l); $i++) { $l->[$i] =$s->keyname($l->[$i]) };\n    $l =[sort @$l]\n }\n $l\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/udata.pm",
      "package" : "CGI::Bus::udata"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub addrtr {\t\n  ($_[1] =~/^([^\\\\]+)\\\\(.+)$/ \n\t? $2 \n\t: $_[1])\n .((index($_[1],'@') <0) && $_[0]->{-domain}\n\t? '@' .$_[0]->{-domain} \n\t: '')\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/smtp.pm",
      "package" : "CGI::Bus::smtp"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub evaluate {  \n my $s =shift;\n my $c =$s->qparam('login')  ? 'LOGIN' \n       :$s->qparam('logout') ? 'LOGOUT'\n       :$s->qparam('usites') ? 'USITES'\n       :$s->qparam('search') ? 'SEARCH'\n       :$s->qparam('query')  ? 'SEARCH'\n       :($s->qrun ||'');\n $s->userauthopt() if $c ne 'LOGIN';\n if    ($c eq 'LEFT')   { $s->scrleft  }\n elsif ($c eq 'TOPR')   { $s->scrtopr  }\n elsif ($c eq 'RIGHT')  { $s->scrright }\n elsif ($c eq 'SETUP')  { $s->scrsetup }\n elsif ($c eq 'LOGIN')  { $s->parent->userauth($s->qurl)}\n elsif ($c eq 'LOGOUT') { $s->parent->uauth->logout($s->qurl)}\n elsif ($c eq 'USITES') { $s->scrusites}\n elsif ($c eq 'SEARCH') { $s->search   }\n else                   { $s->scrtop   }\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/upws.pm",
      "package" : "CGI::Bus::upws"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub loginscr {\t\n my $s =shift;\n my $o =shift ||'-lir'; \n my $g =$s->cgi;\n my $rdr =$g->param($cooknme)||$ENV{HTTP_REFERER};\n my $u;\n my $d;\n if ($o !~/l/) {\n     $g->param('UserInfo',1) if $o =~/i/; \n     $g->param('Register',1) if $o =~/r/; \n }\n if (($g->param('Login') || $g->param('UserInfo'))\n && $g->param('user') && $g->param('passwd')) { \n    $u =$s->parent->user($g->param('user'));\n    $s->parent->udata->load;\n    $d =$s->parent->udata->param;\n    $s->die(\"Wrong password\\n\") if ($d->{-passwd}||'') ne crypt($g->param('passwd'||''),$u);\n    $ENV{REMOTE_USER} =$s->parent->useron;\n    if   (!$g->param('UserInfo')) {$s->signset($rdr)}\n    else {$s->signset($s->qurl('', $cooknme =>$rdr, 'UserInfo'=>1))}\n    exit; \n }\n if ($g->param('UserInfo') ||$g->param('Register')) {\n    $s->print->htpgstart(undef,$s->parent->{-htpnstart});\n    $s->print('<form method=post>');\n    $s->print->hidden($cooknme, $rdr);\n    $u ='';\n    if ($g->param('UserInfo')) {\n       $u =$s->signchk;\n       $s->die(\"No user cookie\\n\") if !defined($u) ||$u eq '';\n       $u =$s->parent->user($u);\n       foreach my $p (qw(email firstname middlename lastname fullname comment)) {\n          $g->param($p => $s->udata->param(\"-$p\"))\n       }\n    }\n    $s->print->h1( $g->param('Register')\n                 ? $s->lng(0,'Register')\n                 : ($s->lng(0,'UserInfo') .\" - $u\"));\n    $s->print->text('<table>');\n    my $ha={-align=>'left',-valign=>'top'};\n    my @hd=(-size =>30, '-name');\n    my @ht=(-cols =>23, -rows=>4, '-name');\n    $s->print->tr($g->th($ha,'UserName'),   $g->td($ha,$g->textfield(@hd,'user'))) \n        if $g->param('Register');\n    $s->print->tr($g->th($ha,'EMail'),      $g->td($ha,$g->textfield(@hd,'email')));\n    $s->print->tr($g->th($ha,'FirstName'),  $g->td($ha,$g->textfield(@hd,'firstname')));\n    $s->print->tr($g->th($ha,'MiddleName'), $g->td($ha,$g->textfield(@hd,'middlename')));\n    $s->print->tr($g->th($ha,'LastName'),   $g->td($ha,$g->textfield(@hd,'lastname')));\n    $s->print->tr($g->th($ha,'FullName'),   $g->td($ha,$g->textfield(@hd,'fullname')));\n    $s->print->tr($g->th($ha,'Comment'),    $g->td($ha,$g->textarea (@ht,'comment')));\n    $s->print->tr($g->th($ha,'Password'),   $g->td($ha,$g->textfield(@hd,'passwd1')));\n    $s->print->tr($g->th($ha,'Password'),   $g->td($ha,$g->textfield(@hd,'passwd2')));\n    $s->print->tr($g->th($ha,'&nbsp;'),     $g->td($ha,$g->submit('Register1',$s->lng(0, 'Register'))))\n        if $g->param('Register');\n    $s->print->tr($g->th($ha,'&nbsp;'),     $g->td($ha,$g->submit('UserInfo1',$s->lng(0, 'Update'))))\n        if $g->param('UserInfo');\n    $s->print(\"</table>\");\n    $s->print->htpfend();\n    eval{$s->parent->reset}; \n    exit;\n }\n if ($g->param('Register1') ||($g->param('UserInfo1') && !$s->parent->uguest)) {\n    if ($g->param('Register1')) {\n       $u =$s->parent->user($g->param('user'));\n       $s->parent->udata->load;\n       $s->die(\"User '$u' already registered\\n\") if $s->udata->param('-passwd') \n                                                 || $s->udata->param('-ses');\n    }\n    else {\n       $u =$s->signchk;\n       $u =$s->parent->user($u);\n    }\n    $s->die(\"Passwords does not match\\n\") if  $g->param('passwd1') ne $g->param('passwd2')\n                                          ||(!$g->param('passwd1') && $g->param('Register1'));\n    $g->param('passwd', crypt($g->param('passwd1'),$u)) if $g->param('passwd1');\n    foreach my $p (qw(email firstname middlename lastname fullname comment passwd)) {\n       $s->udata->param(\"-$p\", $g->param($p));\n    }\n    $s->parent->udata->store;\n    $ENV{REMOTE_USER} =$s->parent->useron;\n    $s->signset($rdr);\n }\n if (1) {\n    $s->print->htpgstart(undef,$s->parent->{-htpnstart});\n    $s->print('<form method=post>');\n    $s->print->h1('Authentication required');\n    $s->print->hidden($cooknme, $rdr);\n    my $ha={-align=>'left',-valign=>'top'};\n    $s->print('<table><tr>')\n      ->th($ha, 'UserName')\n      ->td($ha, $g->textfield('user'))\n      ->text('</tr><tr>')\n      ->th($ha, 'Password')\n      ->td($ha, $g->password_field('passwd'))\n      ->text('</tr><tr>')\n      ->th($ha, '&nbsp;')\n      ->td($ha, $g->submit('Login','Login')\n              .($o =~/i/ ? $g->submit('UserInfo',$s->lng(0, 'UserInfo')) :'') \n              .($o =~/r/ ? $g->submit('Register',$s->lng(0, 'Register')) : ''))\n      ->text('</tr></table>');\n    $s->print->htpfend;\n    eval{$s->parent->reset}; \n    exit;\n }\n $s\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/uauth.pm",
      "package" : "CGI::Bus::uauth"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub lng {\n $_[0]->{-lngbase} =$_[0]->parent->lngload($_[0]->class) if !$_[0]->{-lngbase};\n my $r =$_[0]->{-lngbase};\n $r = !defined($_[2]) ? $r->{$_[1]}\n      :!defined($r->{$_[2]}) ||!defined($r->{$_[2]}->[$_[1]]) ? $_[2]\n      :$r->{$_[2]}->[$_[1]];\n foreach my $e (@_[3..$#_]) {\n   $r =~s/\\$_/$e/e;\n }\n $r\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/Base.pm",
      "package" : "CGI::Bus::Base"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub fdumpstore {\n my ($s,$f,$d) =@_;\n $s->fstore('-',$f,$s->parent->dumpout($d))\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/fut.pm",
      "package" : "CGI::Bus::fut"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub parse {           \n my $s   =shift;\n my $opt =substr($_[0],0,1) eq '-' ? shift : '-';\n my $i   =$_[0];\n my $o   ='';\n my ($ol,$or) =('','');\n my ($ts,$tl,$ta,$tc) =('','','','');\n if ($i =~/<(!DOCTYPE|html|head)/i && $`) {\n     $i ='<' .$1 .$'\n }\n if ($_[1] && $i =~m{(<body[^>]*>)}i) {\n     my ($i0,$i1) =($` .$1 ,$');\n     $i =$i0\n        .('<base href=\"'. $s->htmlescape(ref($_[1]) ? $_[1]->[1] : $s->_furl($s->_fdir($_[1]))).'/\" />')\n        .$i1\n }\n if ($opt =~/e/i && $i =~m{<body[^>]*>}i) {\n    $i =$';\n    $i =$` if $i =~m{</body>}i\n }\n while ($i) {\n    if (not $i =~m{<(\\%@|\\%|SCRIPT) *(Language *= *|)* *(PerlScript|Perl|)* *(RUNAT *= *Server|)*[ >]*}i) {\n       $ol =$i; $i ='';\n       $ts ='';\n    }\n    elsif (($2 && !$3) || (!$3 && $tl eq '1')) {\n       $ol =$` .$&;\n       $i  =$';\n       $tl =1;\n       $tc =$ts ='';\n    }\n    elsif ($1) {\n       $ol =$`; $i =$';\n       $ts =uc($1||''); $tl =($2 && $3)||''; $ta=$4||'';\n       if ($i =~m{ *(\\%>|</SCRIPT>)}i) {$tc =$`; $i =$'}\n       else                            {$tc =''}\n    }\n    else {\n       $ol =$i; $i ='';\n    }\n    $ol =~s/([\"\\$\\@%\\\\])/\\\\$1/g;\n    $ol =~s/[\\n]/\\\\n\");\\n\\$_[0]->print(\"/g;\n    $o .= \"\\$_[0]->print(\\\"$ol\\\\n\\\");\\n\";\n    next if !$ts || !$tc || $ts eq '%@';\n    $tc =~s/\\&lt;?/</g;\n    $tc =~s/\\&gt;?/>/g;\n    $tc =~s/\\&amp;?/\\&/g;\n    $tc =~s/\\&quot;?/\"/g;\n    if    ($ts eq '%')      { $o .= \"\\$_[0]->print($tc);\\n\" }\n    elsif ($ts eq 'SCRIPT') { $o .= $tc .\";\\n\"}\n }\n $o;\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/psp.pm",
      "package" : "CGI::Bus::psp"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub cmdhlp { \n my $s =shift;\n my $p =$s->parent;\n my $g =$p->cgi;\n my $o =defined($_[0]) && substr($_[0],0,1) eq '-' ? shift : '-tolfc';\n my $ta={-align=>'left',-valign=>'top'};\n my $sh='';\n if ($o =~/t/) {\n    $sh ='Help';\n    my $t =$s->parent->{-htmlstart}->{-title}||$s->parent->{-htpgstart}->{-title}||'';\n    print '<div class=\"MenuArea\"><table class=\"MenuArea\" cellpadding=0><tr>'\n    , $s->{-formtgf} ? '' :$s->_htmlbare(-bck=> $p->{-iurl} && $img{-bck} ? $p->qurl : 0, -onClick=>'{window.history.back(); return(false)}')\n    , '</td><th valign=\"middle\" class=\"MenuArea MenuHeader\">'\n    , $s->htmlescape(($t ? \"$t - \" : '') .$s->lng(0, $sh))\n    , \"</th></tr></table><hr /></div>\\n\";\n }\n if ($o =~/[fo]/ && $s->{-form}) {\n    $sh ='Fields';\n    print $g->h2($s->htmlescape($s->lng(0, $sh))),\"\\n\";\n    $sh =$s->lng(1, $sh);\n    print $g->p($s->htmlescape($sh)),\"\\n\" if $sh;\n    print \"<table>\\n\";\n    foreach my $f (@{$s->{-form}}) {\n       next if !$f || ref($f) ne 'HASH' || !$f->{-fld} || !$f->{-cmt};\n       print \"<tr>\";\n       print $g->td($ta, '<code>' .$s->htmlescape('[' .$f->{-flg} .']') .'</code>');\n       print $g->th($ta, $s->htmlescape($f->{-lbl}||$f->{-fld}));\n       print $g->td($ta, '<code>' .$s->htmlescape($f->{-fld}) .'</code>');\n       print $g->td($ta, $s->htmlescape($f->{-cmt})\n                       .($f->{-col} && $f->{-col} =~/\\(/ \n                        ? ('<br /><code> = ' .$s->htmlescape($f->{-col}) .'</code>')\n                        : ''));\n       print \"</tr>\\n\";\n    }\n    print \"</table>\\n\";\n }\n if ($o =~/[lo]/ && $s->{-lists}) {\n    $sh ='Lists';\n    print $g->h2($s->htmlescape($s->lng(0, $sh))),\"\\n\";\n    $sh =$s->lng(1, $sh);\n    print $g->p($s->htmlescape($sh)),\"\\n\" if $sh;\n    my $l =$s->{-lists};\n    my @a =sort {lc($l->{$a}->{-lbl}||$l->{$a}->{-lst}||$a) cmp lc($l->{$b}->{-lbl}||$l->{$b}->{-lst}||$b)} keys %$l;\n    print \"<table>\\n\";\n    foreach my $e (@a) {\n      next if !$l->{$e}->{-cmt};\n      print \"<tr>\";\n      print $g->th($ta, $s->htmlescape($l->{$e}->{-lbl}||$l->{$e}->{-lst}||$e));\n      print $g->td($ta, (ref($l->{$e}->{-cmt}) eq 'ARRAY' \n                        ? join('<br />', map {$s->htmlescape($_)} @{$l->{$e}->{-cmt}}) \n                        : $s->htmlescape($l->{$e}->{-cmt}))\n                       .'<code>'\n                       .(ref($l->{$e}->{-fields})\n                        ? ('<br /> = ' .$s->htmlescape(join(', ',@{$l->{$e}->{-fields}})))\n                        : '')\n                       .(ref($l->{$e}->{-key})\n                        ? (' KEY ' .$s->htmlescape(join(', ',@{$l->{$e}->{-key}})))\n                        : '')\n                       .(ref($l->{$e}->{-orderby})\n                        ? (' ORDER BY ' .$s->htmlescape(join(', ',@{$l->{$e}->{-orderby}})))\n                        : '')\n                       .($l->{$e}->{-orderby}\n                        ? (' ORDER BY ' .$s->htmlescape($l->{$e}->{-orderby}))\n                        : '')\n                       .'</code>'\n                       );\n      print \"</tr>\\n\";\n    }\n    print \"</table>\\n\";\n }\n if ($o =~/[co]/) {\n    $sh ='Commands';\n    print $g->h2($s->htmlescape($s->lng(0, $sh))),\"\\n\";\n    $sh =$s->lng(1, $sh);\n    print $g->p($s->htmlescape($sh)),\"\\n\" if $sh;\n    print \"<table>\\n\"; \n    foreach my $c (index($s->{-opflg}||'','<') >=0 ? qw(-nap -nth) : ()\n                  ,qw(-bck -lgn -lst -qry -crt -sel -prn -edt -frm -ins -upd -del -hlp)) {\n       next if !$s->lng($c);\n       print \"<tr>\";\n       print $g->th($ta\n                   ,'<nobr>'\n                   ,($p->{-iurl} && $img{$c} \n\t\t\t? '<img src=\"' . $p->{-iurl} .'/' .$img{$c} .'\" border=0 align=\"top\"' . ($img{$c} =~m{small/}i ? ' width=20 height=22' : '').' />' \n\t\t\t: '') \n                   .$s->htmlescape($s->lng(0,$c))\n                   .'</nobr>');\n       print $g->td($ta, $s->htmlescape($s->lng(1,$c)));\n       print \"</tr>\\n\";\n    }\n    print \"</table>\\n\";\n }\n $s\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/tm.pm",
      "package" : "CGI::Bus::tm"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub dumpstore { \n my ($s,$d) =@_;\n $s->truncate(0);\n $s->seek(0)->store('-',$s->parent->dumpout($d))\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/file.pm",
      "package" : "CGI::Bus::file"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub lngbase {\n my @msg =CGI::Bus::lngbase::CGI_Bus_wg::lngbase;\n push @msg,\n ('ddlbopen'     =>['...',   '�������']\n ,'ddlbfind'     =>['..',    '�����']\n ,'ddlbclose'    =>['x',     '�������']\n ,'ddlbsetvalue' =>['<',     '��������� ��������']\n ,'Files'        =>['�����', '�������������� �����']\n ,'+|-'          =>['+/-',   '�������� / ������� / �������']\n ,'fsopens'\t =>['...',   '�������� �����']\n ,'fsclose'\t =>['�������','������� ��������� �����']\n ,'fsbrowse'\t =>['�������','������� �������������� ����']\n ,'fsdelmrk'\t =>['�������','������� ��� ��������']\n );\n @msg\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/lngbase/CGI_Bus_wg_ru.pm",
      "package" : "CGI::Bus::lngbase::CGI_Bus_wg_ru"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub lngbase {\n my @msg =CGI::Bus::lngbase::CGI_Bus::lngbase;\n push @msg,\n ('Warning' =>['��������������', '�������������� � �������������']\n ,'Error'   =>['������',         '������ ������������ ��� ����������']\n );\n @msg\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/lngbase/CGI_Bus_ru.pm",
      "package" : "CGI::Bus::lngbase::CGI_Bus_ru"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub lngbase {\n ('WorkSpace'   =>['WorkSpace', '']\n ,'Login'       =>['Login',     'Login to the System']\n ,'Home'        =>['Home',      'Home Page URL']\n ,'Overview'    =>['Overview',  'Overview Page or Frameset']\n ,'Index'       =>['Contents',  'Heading or Index page']\n ,'Search'      =>['Search',    'Find in $_ filesystem']\n ,'USites'      =>['HomePages', 'Users pages, create in your\\'s publishing directory one of the files $_!']\n ,'USFHomes'    =>['GrpFiles',  'User\\'s group files network home directory']\n ,'USFHome'     =>['PsnFiles',  'User\\'s files network home directory']\n ,'Setup'       =>['Setup',     'User Setup of $_']\n ,'Logout'      =>['Logout',    'Logout from the System, became guest']\n ,'User'        =>['User',         'User name']\n ,'Managed'     =>['Managed',      'Managed Users, comma separated']\n ,'Groups'      =>['Groups',       'Groups user belongs to, comma separated']\n ,'HomeURL'     =>['HomeURL',      'URL to open at first; alternativelly the first screen may be defined as an \\'Overview\\' Frameset or HTML']\n ,'FramesetURLs'=>['OverviewURLs', '\\'Overview\\' frameset URLs, one URL per row, or \\'Overview\\' page HTML; this page may be opened as the first too']\n ,'FramesetRows'=>['FramesetRows', 'Heights of the frames, digits with % signs, delimited with commas']\n ,'FramesetCols'=>['FramesetCols', 'Widths of the frames, digits with % signs, delimited with commas']\n ,'FavoriteURLs'=>['FavoriteURLs', 'URLs for navigation pane, one URL per row as \\'label|URL\\', \\'label|_blank|URL\\', \\'label|_parent|URL\\', \\'label|URL|_target|URL\\', or HTML']\n ,'PrimaryRole' =>['PrimaryRole',  'Favorite, most oftenly used group user belongs to']\n ,'Read'        =>['Read',         'Read data']\n ,'Save'        =>['Save',         'Store data']\n ,'Refresh'     =>['Refresh',      'Reread or recalculate data']\n )\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/lngbase/CGI_Bus_upws.pm",
      "package" : "CGI::Bus::lngbase::CGI_Bus_upws"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub lngbase {\n (-nap=>['Top',    'The topmost level']\n ,-nup=>['Up',     'An upper level']\n ,-nth=>['Reset',  'This application default']\n ,-bck=>['Back',   'Back to previous screen']\n ,-lgn=>['Login',  'Login to the System']\n ,-lst=>['List',   'List records, select records under query condition']\n ,-lsr=>['List',   'List records']\n ,-qry=>['Query',  'Query condition to list records by']\n ,-crt=>['New',    'New record creation to insert it to the database']\n ,-sel=>['Read',   '(Re)read data from database, select record; escape edit mode discarding changes']\n ,-prn=>['Print',  'Printable form']\n ,-edt=>['Edit',   'Edit mode switch']\n ,-frm=>['Form',   'Form reload and review, data recalculation']\n ,-upd=>['Update', 'Update record in the database, save changes of this record']\n ,-del=>['Delete', 'Delete record from the database']\n ,-ins=>['Insert', 'Insert new record into database']\n ,-hlp=>['Help',   'Open Help screen']\n\n ,'op!let'  => ['',       'Operation \\'$_\\' is not allowed']\n ,'!constr' => ['',       'Constraint violations']\n\n ,'Help'     =>['Help',         '']\n ,'Lists'    =>['Views',\t'Views (lists of records) defined by application']\n ,'Fields'   =>['Fields',       'Data fields defined by application']\n ,'Commands' =>['Commands',     'Commands may be used']\n )\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/lngbase/CGI_Bus_tm.pm",
      "package" : "CGI::Bus::lngbase::CGI_Bus_tm"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub lngbase {\n ('ddlbopen'    =>['...',   'open']\n ,'ddlbfind'    =>['..',    'find']\n ,'ddlbclose'   =>['x',     'close']\n ,'ddlbsetvalue'=>['<',     'set value']\n ,'Files'       =>['Files', 'Files attached']\n ,'+|-'         =>['+/-',   'Add / Close / Delete']\n ,'fsopens'\t=>['...',   'Files opened']\n ,'fsclose'\t=>['Close', 'Close files choosen']\n ,'fsbrowse'\t=>['Browse','Choose file to upload']\n ,'fsdelmrk'\t=>['DelMark','Mark to delete']\n )\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/lngbase/CGI_Bus_wg.pm",
      "package" : "CGI::Bus::lngbase::CGI_Bus_wg"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub lngbase {\n my @msg =CGI::Bus::lngbase::CGI_Bus_tm::lngbase;\n push @msg,\n (-nap=>['����',     '���孨� �஢���']\n ,-nup=>['����',     '��襫���騩 �஢���']\n ,-nth=>['�����',    '��� �ਫ������ ��-㬮�砭��']\n ,-bck=>['�����',    '����� � �।���饬� ��࠭�']\n ,-lgn=>['�����',    '����� � ���⥬�, ��ॣ�����஢�����']\n ,-lst=>['�������',  '(����)������ �।�⠢�����, ������� ������ ᮣ��᭮ �᫮��� �롮ન (���᪠)']\n ,-lsr=>['�롮ઠ',  '������� �।�⠢�����']\n ,-qry=>['������',   '������� �᫮��� �롮ન (���᪠) ����ᥩ']\n ,-crt=>['�������',  '������� ����� ᮧ����� ����� ������, �⮡� ��⥬ \\'��⠢���\\' �� � ���� ������']\n ,-sel=>['�������',  '(����)������ ������ �� ���� ������; ��३�� �� ।����஢���� ������ � ���ᬮ��� � ����३ १�����⮢ ।����஢����']\n ,-prn=>['������',   '��ଠ ��� ����⠭��']\n ,-edt=>['������',   '�������� ०�� ।����஢���� (���������) ������']\n ,-frm=>['����',     '��१���㧨�� ����� � ��ࢥ��, ��ॢ���᫨�� ������']\n ,-upd=>['���࠭���','���࠭��� १������� ।����஢���� (���������) ������ � ���� ������']\n ,-del=>['�������',  '������� ������ �� ���� ������']\n ,-ins=>['��⠢���', '�������� १������� ।����஢���� � ���� ������ ��� ����� ������']\n ,-hlp=>['��ࠢ��',  '������� ��࠭ ��ࠢ��']\n\n ,'op!let' =>['',    '����⢨� \\'$_\\' �����饭�']\n ,'!constr'=>['',    '����襭�� ��࠭�祭��']\n\n ,'Help'      =>['��ࠢ��',         '']\n ,'Lists'     =>['�।�⠢�����','�।�⠢�����, ��।������� � �ਫ������']\n ,'Fields'    =>['����',            '���� ������, ��।������� � �ਫ������']\n ,'Commands'  =>['�������',         '�������, ������� ����� �ᯮ�짮����']\n );\n @msg\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/lngbase/CGI_Bus_tm_ru.pm",
      "package" : "CGI::Bus::lngbase::CGI_Bus_tm_ru"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub lngbase {\n my @msg;\n push @msg, CGI::Bus::lngbase::CGI_Bus_tmsql::lngbase;\n push @msg,\n (-nap=>['����',     '������� �������']\n ,-nup=>['����',     '����������� �������']\n ,-nth=>['�����',    '��� ���������� ��-���������']\n ,-bck=>['�����',    '��������� � ����������� ������']\n ,-lgn=>['�����',    '����� � �������, ������������������']\n ,-lst=>['�������',  '(����)������ �������������, ������� ������ �������� ������� ������� (������)']\n ,-lsr=>['�������',  '������� �������������']\n ,-qry=>['������',   '������� ������� ������� (������) �������']\n ,-crt=>['�������',  '������� ����� �������� ����� ������, ����� ����� \\'��������\\' �� � ���� ������']\n ,-sel=>['�������',  '(����)������ ������ �� ���� ������; ������� �� �������������� ������ � ��������� � ������� ����������� ��������������']\n ,-prn=>['������',   '����� ��� ���������']\n ,-edt=>['������',   '�������� ����� �������������� (���������) ������']\n ,-frm=>['����',     '������������� ����� � �������, ������������� ������']\n ,-upd=>['���������','��������� ���������� �������������� (���������) ������ � ���� ������']\n ,-del=>['�������',  '������� ������ �� ���� ������']\n ,-ins=>['��������', '�������� ���������� �������������� � ���� ������ ��� ����� ������']\n ,-hlp=>['�������',  '������� ����� �������']\n\n ,'op!let' =>['',       '�������� \\'$_\\' ���������']\n ,'op!acl2'=>['',       '�������� \\'$_\\' ��������� ������� ���������� �������']\n ,'!constr'=>['',       '��������� �����������']\n ,'fldReq' =>['',       '�������� ���� \\'$_\\' �����������']\n ,'!rfetch'=>['',       '������ �� ������� � ���� ������']\n ,'rfetch' =>['',       '$_ ������� ���������']\n ,'rfetchf'=>['',       '������ $_ ������� ���������']\n ,'Success'=>['�����',  '�������� ��������']\n ,'Failure'=>['�������','��������� ��������']\n\n ,'Versions'  =>['������',   '������ ������']\n ,'LIST'      =>['�������',  '������ �������']\n ,'F-TEXT'    =>['�����',    '������ �����']\n ,'LIMIT ROWS'=>['������',   '������������ ����� ���������� �������']\n\n ,'Help'           =>['�������',         '']\n ,'Lists'          =>['�������������',\t '�������������, ������������ � ����������']\n ,'Fields'         =>['����',            '���� ������, ������������ � ����������']\n ,'Commands'       =>['�������',         '�������, ������� ����� ������������']\n ,'Versioning'     =>['���������������', '��������� ���������� ������ ������ �������']\n ,'-vsd-svd'       =>['',                '��������� �������������� ������, ������ �� ���������� �� ������ ��� ������ ���������']\n ,'-vsd-sd'        =>['',                '��������� ����������� �������� ������']\n ,'File Store'     =>['��������� ������','��������� ������������� ������ � �������']\n ,'-fsd-url'       =>['',                '�������� ������� ��������� ������']\n ,'-fsd-vsurl'     =>['',                '�������� ������� ��������� ������ ������']\n ,'-fsd-vsd-e'     =>['��������� ��������������','�������������� �������������� � ������ ������ �������� ������ ����� ���������� ������ � ��������� �������������� $_']\n ,'-fsd-vsd-ei'    =>['������������� ��������','����������� ������������������ \\'��������������\\' $_ -> \\'��������\\' ��� �������� ������ � �������������� �������������� � ��� ������']\n );\n @msg\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/lngbase/CGI_Bus_tmsql_ru.pm",
      "package" : "CGI::Bus::lngbase::CGI_Bus_tmsql_ru"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub lngbase {\n ('Warning' =>['Warning','Trouble warning']\n ,'Error'   =>['Error',  'User or Software error']\n )\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/lngbase/CGI_Bus.pm",
      "package" : "CGI::Bus::lngbase::CGI_Bus"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub lngbase {\n my @msg =CGI::Bus::lngbase::CGI_Bus_upws::lngbase;\n push @msg,\n ('WorkSpace'   =>['WorkSpace', '']\n ,'Login'       =>['�����',     '����� � �������']\n ,'Home'        =>['������',    '��������� URL']\n ,'Overview'    =>['�����',     '�������� ����� ������']\n ,'Index'       =>['����������','��������� ��� ��������� ��������']\n ,'Search'      =>['�����',     '����� � �������� ������� $_']\n ,'USites'      =>['���.��������','���������������� ��������, �������� � ����� �������� ���������� ���� �� ������ $_!']\n ,'USFHomes'    =>['����.�����','������� ������� � ������� ���������� ������������']\n ,'USFHome'     =>['����.�����','������� ������� � ������� ������������']\n ,'Setup'       =>['���������', '��������� ������������ ������������ $_']\n ,'Logout'      =>['�����',     '����� �� �������, ����� ������']\n ,'User'        =>['������������',   '��� ������������']\n ,'Managed'     =>['�����������',    '����������� ������������, ����� �������']\n ,'Groups'      =>['������',         '������, � ������� ����������� ������������, ����� �������']\n ,'HomeURL'     =>['��������� URL',  'URL, ����������� ������; ������������� ��������� ����� ����� ���� ����� \\'��������\\' ������� ������ ��� HTML ����']\n ,'FramesetURLs'=>['�������� URL',   'URL� \\'���������\\' ������ ������, ���� � ������ ������, ��� HTML \\'��������\\' ��������; ��� �������� ����� ����� ����������� ������']\n ,'FramesetRows'=>['������ ������',  '������������ ������� ������, �� ������ %, ����� �������']\n ,'FramesetCols'=>['������� ������', '�������������� ������� ������, �� ������ %, ����� �������']\n ,'FavoriteURLs'=>['�������� URL',   'URL� ��� ������ �� ������������� ������, ���� � ������ ������, � ���� \\'�����|URL\\', \\'�����|_blank|URL\\', \\'�����|_parent|URL\\', \\'�����|URL|_����|URL\\', ��� HTML']\n ,'PrimaryRole' =>['������� ����',   '�������� ������ �������������']\n ,'Read'        =>['���������',      '��������� ������']\n ,'Save'        =>['��������',       '��������� ������']\n ,'Refresh'     =>['��������',       '���������� ��� ����������� ������']\n );\n @msg\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/lngbase/CGI_Bus_upws_ru.pm",
      "package" : "CGI::Bus::lngbase::CGI_Bus_upws_ru"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub lngbase {\n my @msg;\n push @msg,\n (-nap=>['Top',    'The topmost level']\n ,-nup=>['Up',     'An upper level']\n ,-nth=>['Reset',  'This application default']\n ,-bck=>['Back',   'Back to previous screen']\n ,-lgn=>['Login',  'Login to the System']\n ,-lst=>['List',   'List records, select records under query condition']\n ,-lsr=>['List',   'List records']\n ,-qry=>['Query',  'Query condition to list records by']\n ,-crt=>['New',    'New record creation to insert it to the database']\n ,-sel=>['Read',   '(Re)read data from database, select record; escape edit mode discarding changes']\n ,-prn=>['Print',  'Printable form']\n ,-edt=>['Edit',   'Edit mode switch']\n ,-frm=>['Form',   'Form reload and review, data recalculation']\n ,-upd=>['Update', 'Update record in the database, save changes']\n ,-del=>['Delete', 'Delete record from the database']\n ,-ins=>['Insert', 'Insert new record into database']\n ,-hlp=>['Help',   'Open Help screen']\n\n ,'op!let' =>['',       'Operation \\'$_\\' is not allowed']\n ,'op!acl2'=>['',       'Operation \\'$_\\' is not allowed by acl to']\n ,'!constr'=>['',       'Constraint violations']\n ,'fldReq' =>['',       'Field \\'$_\\' value required']\n ,'!rfetch'=>['',       'No data fetched from database']\n ,'rfetch' =>['',       '$_ rows fetched']\n ,'rfetchf'=>['',       'First $_ rows fetched']\n ,'Success'=>['Success','Success operation']\n ,'Failure'=>['Failure','Failure operation']\n\n ,'Versions'  =>['Versions',  'Versions of record']\n ,'LIST'      =>['LIST',      'Lists of records']\n ,'WHERE'     =>['WHERE',     'WHERE SQL query condition']\n ,'F-TEXT'    =>['F-TEXT',    'Full-Text search, Find text']\n ,'ORDER BY'  =>['ORDER BY',  'ORDER BY SQL query condition clause']\n ,'LIMIT ROWS'=>['LIMIT ROWS','Maximum number of rows to fetch']\n\n ,'Help'           =>['Help',         '']\n ,'Lists'          =>['Views',\t      'Views (lists of records) defined by application']\n ,'Fields'         =>['Fields',       'Data fields defined by application']\n ,'Commands'       =>['Commands',     'Commands may be used']\n ,'Versioning'     =>['Versioning',   'Records versioning settings']\n ,'-vsd-svd'       =>['',             'State versioning disable, \\'Edit\\' state']\n ,'-vsd-sd'        =>['',             'State record deleted']\n ,'File Store'     =>['File Store',   'File attachments store settings']\n ,'-fsd-url'       =>['',             'File store root']\n ,'-fsd-vsurl'     =>['',             'Old versions store root']\n ,'-fsd-vsd-e'     =>['Edit state',   'Editing of files attached allowed only while record stored with \\'edit\\' state $_']\n ,'-fsd-vsd-ei'    =>['Templates usage','Use \\'edit\\' $_ -> \\'Insert\\' transaction to create record from template and immediately edit files attached']\n );\n @msg\n}",
      "file" : "/var/tmp/arv_0uuPbl/CGI-Bus-0.62/lib/CGI/Bus/lngbase/CGI_Bus_tmsql.pm",
      "package" : "CGI::Bus::lngbase::CGI_Bus_tmsql"
   }
]
