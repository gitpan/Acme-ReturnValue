[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    my %output;\n\n    foreach my $element ( @{ $child_output } ) {\n        if ( $element->{__TYPE__} eq 'join_tables' ) {\n            my $output_type                  = $element->{__TYPE__};\n            my $name                         = $element->{__DATA__\n            push @{ $output{ $output_type }{ $name } },\n                 $element->{__DATA__}[1];\n\n            $name                            = $element->{__DATA__}[2];\n            push @{ $output{ $output_type }{ $name } },\n                 $element->{__DATA__}[3];\n        }\n        else {\n            my $output_type                  = $element->{__TYPE__};\n            my $name                         = $element->{__DATA__}[0];\n            $output{ $output_type }{ $name } = $element->{__DATA__}[1];\n        }\n\n    }\n\n    return [ %output ];\n}\n\npackage # block\n    block;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub new_statement {\n    my $class   = shift;\n    my $parent  = shift;\n    my $keyword = shift;\n    my $values  = shift;\n\n    my $self = {\n        __RULE__      => 'block',\n        __PARENT__    => $parent,\n    };\n\n    $self->{app_statement} = app_statement->new( $self, $keyword, $values ),\n\n    return bless $self, $class;\n}\n\nsub new_statement_pair {\n    my $class  = shift;\n    my $parent = shift;\n    my $params = shift;\n\n    my $self = {\n        __RULE__    => 'block',\n        __PARENT__  => $parent,\n    };\n\n    $self->{app_statement} = app_statement->new_pair( $self, $params );\n\n    return bless $self, $class;\n}\n\nmy %block_name_for = (\n    table      => 'table_block',\n    sequence   => 'seq_block',\n    controller => 'controller_block',\n    literal    => 'literal_block',\n    join_table => 'join_table',\n    schema     => 'schema_block',\n    config     => 'app_config_block',\n);\n\nsub new_block {\n    my $class  = shift;\n    my $parent = shift;\n    my $data   = shift;\n\n    my $self   = {\n        __RULE__   => 'block',\n        __PARENT__ => $parent,\n    };\n\n    bless $self, $class;\n\n    my $constructing_class = $block_name_for{ $data->{type} };\n\n    $self->{ $constructing_class } = $constructing_class->new_block(\n        $self, $data\n    );\n\n    return $self;\n}\n\nsub matches {\n    my $self  = shift;\n    my $ident = shift;\n\n    my @ident_block_types = qw(\n            controller_block\n            sql_block\n            literal_block\n            table_block\n            seq_block\n            schema_block\n            join_table\n    );\n\n    my @keys = keys %{ $self };\n\n    TYPE:\n    foreach my $block_type_name ( @ident_block_types ) {\n        next TYPE unless defined $self->{ $block_type_name };\n        return 1 if ( $self->{ $block_type_name }{__IDENT__} eq $ident );\n    }\n}\n\nsub get_ident {\n    my $self = shift;\n\n    foreach my $child_block ( keys %{ $self } ) {\n        next unless ref $self->{ $child_block };\n        return $self->{ $child_block }->get_ident();\n    }\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    my $output = [];\n\n    foreach my $block_type ( keys %$self ) {\n        next unless (\n            $block_type =~ /_block$/\n                or\n            $block_type =~ /_statement$/\n                or\n            $block_type eq 'join_table'\n        );\n\n        my $child_output = $self->{$block_type}->walk_postorder(\n            $action, $data, $self\n        );\n\n        push @{ $output }, @{ $child_output } if $child_output;\n    }\n\n    if ( $self->can( $action ) ) {\n        $output = $self->$action( $output, $data, $parent );\n    }\n\n    ( ref( $output ) =~ /ARRAY/ ) ? return $output : return;\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return $child_output;\n}\n\npackage # app_statment\n    app_statement;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub new {\n    my $class   = shift;\n    my $parent  = shift;\n    my $keyword = shift;\n    my $values  = shift;\n\n    my $self    = {\n        __PARENT__  => $parent,\n        __KEYWORD__ => $keyword,\n        __ARGS__    => arg_list->new( $values ),\n    };\n\n    return bless $self, $class;\n}\n\nsub new_pair {\n    my $class   = shift;\n    my $parent  = shift;\n    my $params  = shift;\n\n    my $self    = {\n        __PARENT__  => $parent,\n        __KEYWORD__ => $params->{ keyword },\n        __ARGS__    => arg_list->new(\n                $params->{ new_value },\n                $params->{ pair_required },\n        ),\n    };\n\n    return bless $self, $class;\n}\n\nsub get_keyword {\n    my $self = shift;\n\n    return $self->{__KEYWORD__};\n}\n\nsub set_statement {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $data->{keyword} eq $self->{__KEYWORD__} );\n\n    $self->{__ARGS__}->set_args_from( $data->{value}, $data->{pair_required} );\n\n    return [ 1 ];\n}\n\nsub set_statement_pairs {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $data->{keyword} eq $self->{__KEYWORD__} );\n\n    $self->{__ARGS__}->set_args_from(\n            $data->{new_value},\n            $data->{pair_required},\n    );\n\n    return [ 1 ];\n}\n\nsub get_statement {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $data eq $self->{__KEYWORD__} );\n\n    return $self->{__ARGS__}->get_unquoted_args;\n\n}\n\nsub output_location {\n    my $self = shift;\n\n    return unless $self->{__KEYWORD__} eq 'location';\n\n    my $location = $self->{__ARGS__}[0];\n\n    return [ $location ];\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    if ( $self->can( $action ) ) {\n        return $self->$action( undef, $data, $parent );\n    }\n    else {\n        return;\n    }\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return [\n        {\n            '__TYPE__' => 'app_statements',\n            '__DATA__' => [\n                $self->{__KEYWORD__} => $self->{__ARGS__}\n            ]\n        }\n    ];\n}\n\npackage # literal_block\n     literal_block;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub new_block {\n    my $class  = shift;\n    my $parent = shift;\n    my $data   = shift;\n\n    my $self = {\n        __PARENT__      => $parent,\n        __IDENT__       => Bigtop::Parser->get_ident(),\n        __BACKEND__     => $data->{name} || 'None',\n        __BODY__        => '',\n    };\n\n    return bless $self, $class;\n}\n\nsub set_type {\n    my $self     = shift;\n    my $new_type = shift;\n\n    $self->{__BACKEND__} = $new_type;\n}\n\nsub set_value {\n    my $self      = shift;\n    my $new_value = shift;\n\n    $self->{__BODY__} = $new_value;\n}\n\nsub change_type {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $self->get_ident eq $data->{ident} );\n\n    $self->set_type( $data->{new_type} );\n\n    return [ 1 ];\n}\n\nsub change_literal {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $self->get_ident eq $data->{ident} );\n\n    $self->set_value( $data->{new_value} );\n\n    return;\n}\n\nsub app_block_hashes {\n    my $self         = shift;\n\n    return [ {\n        ident     => $self->get_ident,\n        type      => 'literal',\n        keyword   => $self->{__BACKEND__},\n        value     => $self->{__BODY__},\n    } ];\n}\n\nsub get_ident {\n    my $self = shift;\n    return $self->{__IDENT__};\n}\n\nsub get_backend {\n    my $self = shift;\n\n    return $self->{__BACKEND__};\n}\n\nsub show_idents {\n    my $self         = shift;\n    my $child_output = shift;\n\n    push @{ $child_output },\n            [ 'literal', $self->{ __NAME__ }, $self->{ __IDENT__ } ];\n\n    return $child_output;\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    if ( $self->can( $action ) ) {\n        return $self->$action( undef, $data, $parent );\n    }\n    else {\n        return;\n    }\n}\n\nsub make_output {\n    my $self      = shift;\n    my $backend   = shift;\n    my $want_hash = shift;\n\n    if ( $backend eq $self->{__BACKEND__} ) {\n        my $output = $self->{__BODY__};\n\n        $output    =~ s/\\Z/\\n/ if ( $output !~ /\\s\\Z/ );\n\n        return $want_hash ? [ { $backend => $output } ] : [ $output ];\n    }\n    else {\n        return;\n    }\n}\n\npackage # table_block\n    table_block;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nuse Bigtop::ScriptHelp;\n\nsub new_block {\n    my $class  = shift;\n    my $parent = shift;\n    my $data   = shift;\n\n    my $self = {\n        __IDENT__ => Bigtop::Parser->get_ident(),\n        __NAME__  => $data->{name},\n        __TYPE__  => 'tables',\n        __BODY__  => [],\n    };\n\n    bless $self, $class;\n\n    if ( defined $data->{ columns } ) {\n        $self->_create_these_fields( $data->{ columns } );\n    }\n    else {\n        $self->_create_default_fields();\n    }\n\n    if ( defined $data->{sequence} ) {\n        my $seq_stmnt = table_element_block->new_statement(\n            $self,\n            'sequence',\n            $data->{sequence},\n        );\n        push @{ $self->{__BODY__} }, $seq_stmnt;\n    }\n\n    $self->{__PARENT__} = $parent;\n\n    return $self;\n}\n\nsub _create_default_fields {\n    my $self = shift;\n\n    my $id_field = table_element_block->new_field(\n        $self, 'id'\n    );\n\n    $id_field->add_field_statement(\n        {\n            ident     => $id_field->get_ident,\n            keyword   => 'is',\n            new_value => 'int4][primary_key][auto',\n        },\n    );\n\n    push @{ $self->{__BODY__} }, $id_field;\n\n    my %values = (\n        is             => 'varchar',\n        html_form_type => 'text'\n    );\n\n    foreach my $field_name qw( ident description ) {\n\n        $values{ label } = Bigtop::ScriptHelp->default_label( $field_name );\n\n        my $field = table_element_block->new_field(\n            $self, $field_name\n        );\n\n        foreach my $statement qw( is label html_form_type ) {\n            $field->add_field_statement(\n                {\n                    ident     => $field->get_ident,\n                    keyword   => $statement,\n                    new_value => $values{ $statement },\n                },\n            );\n        }\n        push @{ $self->{__BODY__} }, $field;\n    }\n\n    foreach my $date_field qw( created modified ) {\n        my $field = table_element_block->new_field(\n                $self, $date_field\n        );\n        $field->add_field_statement(\n            {\n                ident     => $field->get_ident,\n                keyword   => 'is',\n                new_value => 'datetime',\n            },\n        );\n        push @{ $self->{__BODY__} }, $field;\n    }\n}\n\nsub _create_these_fields {\n    my $self   = shift;\n    my $fields = shift;\n\n    my %non_entry = (\n        id       => 1,\n        created  => 1,\n        modified => 1,\n    );\n\n    foreach my $init_field ( @{ $fields } ) {\n\n        if ( $init_field->{ default } ) {\n            push @{ $init_field->{ types } },\n                 \"DEFAULT '$init_field->{ default }'\";\n        }\n\n        my $type_string = join '][', @{ $init_field->{ types } };\n\n        my $field = table_element_block->new_field(\n            $self, $init_field->{ name }\n        );\n\n        $field->add_field_statement(\n            {\n                ident     => $field->get_ident,\n                keyword   => 'is',\n                new_value => $type_string,\n            },\n        );\n\n        unless ( $non_entry{ $init_field->{ name } } ) {\n\n            my $label = Bigtop::ScriptHelp->default_label(\n                    $init_field->{ name }\n            );\n\n            $field->add_field_statement(\n                {\n                    ident     => $field->get_ident,\n                    keyword   => 'label',\n                    new_value => $label,\n                },\n            );\n\n            $field->add_field_statement(\n                {\n                    ident     => $field->get_ident,\n                    keyword   => 'html_form_type',\n                    new_value => 'text',\n                },\n            );\n\n            if ( defined $init_field->{ optional } ) {\n                $field->add_field_statement(\n                    {\n                        ident     => $field->get_ident,\n                        keyword   => 'html_form_optional',\n                        new_value => $init_field->{ optional },\n                    },\n                );\n            }\n            if ( $init_field->{ default } ) {\n                $field->add_field_statement(\n                    {\n                        ident     => $field->get_ident,\n                        keyword   => 'html_form_default_value',\n                        new_value => $init_field->{ default },\n                    },\n                );\n            }\n        }\n\n        push @{ $self->{__BODY__} }, $field;\n    }\n}\n\nsub add_subblock {\n    my $self   = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $data->{parent}{type}    eq 'table'          );\n    return unless ( $data->{parent}{ident}   eq $self->get_ident );\n    return unless ( $data->{new_child}{type} eq 'field'          );\n\n    my $new_field = table_element_block->new_field(\n            $self, $data->{new_child}{name}\n    );\n\n    push @{ $self->{__BODY__} }, $new_field;\n\n    return [ $new_field ];\n}\n\nsub remove_block {\n    my $self         = shift;\n    shift;\n    my $data         = shift;\n    my $doomed_ident = $data->{ ident };\n\n    my $doomed_index = -1;\n    my $count        = 0;\n\n    my $children     = $self->{__BODY__};\n\n    CHILD:\n    foreach my $child ( @{ $children } ) {\n        my $child_ident = $child->get_ident;\n\n        next CHILD unless defined $child_ident;\n\n        if ( $child_ident eq $doomed_ident ) {\n            $doomed_index = $count;\n        }\n    }\n    continue {\n        $count++;\n    }\n\n    return if ( $doomed_index == -1 );\n\n    my $deceased = splice @{ $children }, $doomed_index, 1;\n\n    # do things if the we get this far\n    my @retval;\n\n    # remove name from foreign_display as needed\n    my $result = $self->walk_postorder(\n            'update_foreign_display',\n            {\n                old_value => $deceased->{__NAME__},\n                new_value => '',\n                ident     => $self->{__IDENT__},\n            }\n    );\n\n    push @retval, @{ $result } if ( ref( $result ) eq 'ARRAY' );\n\n    # remove from controller form fields or all_fields_but\n    # remove from controller cols (and col_labels)\n\n    my $tree = $data->{ __THE_TREE__ };\n\n    $result = $tree->walk_postorder( 'field_removed', \n        {\n            table_name      => $self->get_name(),\n            dead_field_name => $deceased->{__NAME__},\n        }\n    );\n\n    push @retval, @{ $result } if ( ref( $result ) eq 'ARRAY' );\n\n    return \\@retval;\n}\n\nsub app_block_hashes {\n    my $self         = shift;\n    my $child_output = shift;\n\n    my $body = {\n        statements => {},\n        fields     => [],\n    };\n\n    foreach my $child_item ( @{ $child_output } ) {\n        if ( $child_item->{ type } eq 'statement' ) {\n            if ( $child_item->{ keyword } eq 'data' ) {\n                push @{ $body->{ statements }{ data } },\n                     $child_item->{ value };\n            }\n            else {\n                $body->{ statements }{ $child_item->{ keyword } } =\n                        $child_item->{ value };\n            }\n        }\n        else {\n            push @{ $body->{ fields } }, $child_item;\n        }\n    }\n\n    return [ {\n        type  => 'table',\n        body  => $body,\n        name  => $self->get_name,\n        ident => $self->get_ident,\n    } ];\n}\n\nsub change_name_table {\n    my $self   = shift;\n    shift;\n    my $data = shift;\n\n    return unless $self->get_ident  eq $data->{ident};\n\n    my $old_name = $self->get_name();\n    $self->set_name( $data->{new_value} );\n\n    return $data->{__THE_TREE__}->walk_postorder( 'table_name_changed',\n        {\n            old_name => $old_name,\n            new_name => $data->{ new_value }\n        }\n    );\n}\n\nsub get_ident {\n    my $self = shift;\n\n    return $self->{__IDENT__};\n}\n\nsub get_name {\n    my $self = shift;\n\n    return $self->{__NAME__};\n}\n\nsub all_table_names {\n    my $self = shift;\n\n    return [ $self->{__NAME__} ];\n}\n\nsub set_name {\n    my $self     = shift;\n    my $new_name = shift;\n\n    $self->{__NAME__} = $new_name;\n\n    # update lookup hash?\n}\n\nsub show_idents {\n    my $self = shift;\n    my $child_output = shift;\n\n    push @{ $child_output },\n            [ $self->{ __TYPE__ }, $self->{ __NAME__ }, $self->{ __IDENT__ } ];\n\n    return $child_output;\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    my $output = [];\n\n    foreach my $body_element ( @{ $self->{__BODY__} } ) {\n        my $child_output = $body_element->walk_postorder(\n            $action, $data, $self\n        );\n\n        push @{ $output }, @{ $child_output } if $child_output;\n    }\n\n    if ( $self->can( $action ) ) {\n        $output = $self->$action( $output, $data, $parent );\n    }\n\n    ( ref( $output ) =~ /ARRAY/ ) ? return $output : return;\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    my %output;\n\n    foreach my $element ( @{ $child_output } ) {\n        my $output_type                  = $element->{__TYPE__};\n\n        my $name                         = $element->{__DATA__}[0];\n\n        if ( $output_type eq 'data' ) {\n            push @{ $output{ data }{ $name } }, $element->{__DATA__}[1];\n        }\n        else {\n            $output{ $output_type }{ $name } = $element->{__DATA__}[1];\n        }\n    }\n\n    $output{ __IDENT__ } = $self->{ __IDENT__ };\n\n    my $retval = [ \n        {\n            __TYPE__ => $self->{__TYPE__},\n            __DATA__ => [ $self->get_name() => \\%output ],\n        }\n    ];\n\n    return [ \n        {\n            __TYPE__ => $self->{__TYPE__},\n            __DATA__ => [ $self->get_name() => \\%output ],\n        }\n    ];\n}\n\nsub change_table_statement {\n    my $self         = shift;\n    shift;\n    my $data         = shift;\n\n    return unless ( $self->{__TYPE__} eq 'tables'       );\n    return unless ( $self->get_ident  eq $data->{ident} );\n\n    my $success = $self->walk_postorder( 'change_table_keyword_value', $data );\n\n    unless ( defined $success->[0] ) { # make new statement\n        $self->add_table_statement( $data );\n    }\n\n    return [ 1 ];\n}\n\nsub add_table_statement {\n    my $self = shift;\n    my $data = shift;\n\n    my $new_statement = table_element_block->new_statement(\n        $self,\n        $data->{keyword},\n        $data->{new_value},\n    );\n\n    my $blocks = $self->{ __BODY__ };\n    push @{ $blocks }, $new_statement;\n}\n\nsub remove_table_statement {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $self->{__TYPE__} eq 'tables'       );\n    return unless ( $self->get_ident  eq $data->{ident} );\n\n    my $doomed_child = -1;\n    my $count        = 0;\n\n    BLOCK:\n    foreach my $block ( @{ $self->{__BODY__} } ) {\n        next BLOCK unless $block->{__TYPE__} eq $data->{keyword};\n\n        $doomed_child = $count;\n        last BLOCK;\n    }\n    continue {\n        $count++;\n    }\n\n    if ( $doomed_child >= 0 ) {\n        # This probably leaks memory because children have parent pointers.\n        # But the parent is me and I'm the app_body, so maybe not.\n        splice @{ $self->{__BODY__} },\n                $doomed_child,\n                1;\n    }\n    # else, nothing to see here, move along quietly\n\n    return [ 1 ];\n}\n\nsub change_data_statement {\n    my $self           = shift;\n    my $child_output   = shift;\n    my $data           = shift;\n\n    return unless ( $self->{__IDENT__} eq $data->{ table } );\n\n    my %field_names    = @{ $self->walk_postorder( 'get_field_names' ) };\n    my $name_to_change = $field_names{ $data->{ field } };\n\n    my $target         = $child_output->[ $data->{ st_number } - 1 ];\n\n    if ( defined $target ) {\n        my $found      = 0;\n        my $remove_it  = -1;\n        my $count      = -1;\n        ARG:\n        foreach my $arg ( @{ $target->{__ARGS__} } ) {\n            $count++;\n\n            next unless defined $arg->{ $name_to_change };\n\n            if ( defined $data->{ value } ) {\n                $arg->{ $name_to_change } = $data->{ value };\n                $found++;\n                last ARG;\n            }\n            else {\n                $remove_it = $count;\n            }\n        }\n        if ( $remove_it >= 0 ) {\n            splice @{ $target->{__ARGS__} }, $remove_it, 1;\n\n            if ( @{ $target->{__ARGS__} } == 0 ) { # no more keys, kill it\n                my $doomed_child = -1;\n                my $count        = -1;\n                CHILD:\n                foreach my $child ( @{ $self->{__BODY__} } ) {\n                    $count++;\n                    if ( $child eq $target ) {\n                        $doomed_child = $count;\n                        last CHILD;\n                    }\n                }\n                if ( $doomed_child >= 0 ) {\n                    splice @{ $self->{__BODY__} }, $doomed_child, 1;\n                }\n            }\n        }\n        elsif ( not $found ) {\n            push @{ $target->{__ARGS__} },\n                 { $name_to_change => $data->{ value } };\n        }\n    }\n    else {\n        $self->add_table_statement(\n            {\n                ident     => $self->get_ident,\n                keyword   => 'data',\n                new_value => {\n                    keys   => $name_to_change,\n                    values => $data->{value},\n                }\n            },\n        );\n    }\n\n    return $self->walk_postorder( 'app_block_hashes' );\n}\n\nsub table_reset_bool {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless $self->{ __IDENT__} eq $data->{ ident };\n\n    return $self->walk_postorder( 'field_reset_bool', $data );\n}\n\nsub get_table_statement {\n    my $self         = shift;\n    shift;\n    my $data         = shift;\n\n    return unless ( $self->{__TYPE__} eq 'tables'       );\n    return unless ( $self->get_ident  eq $data->{ident} );\n\n    BLOCK:\n    foreach my $block ( @{ $self->{__BODY__} } ) {\n        next BLOCK unless $block->{__TYPE__} eq $data->{keyword};\n\n        return [ $block->{__ARGS__}->get_unquoted_args ];\n    }\n\n    return;\n}\n\npackage # seq_block\n    seq_block;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub new_block {\n    my $class  = shift;\n    my $parent = shift;\n    my $data   = shift;\n\n    my $self = {\n        __IDENT__  => Bigtop::Parser->get_ident(),\n        __NAME__   => $data->{name},\n        __TYPE__   => 'sequences',\n        __BODY__   => [],\n        __PARENT__ => $parent,\n    };\n\n    return bless $self, $class;\n}\n\nsub app_block_hashes {\n    my $self         = shift;\n    my $child_output = shift;\n\n    return [ {\n        type  => 'sequence',\n        body  => undef,\n        name  => $self->get_name,\n        ident => $self->get_ident,\n    } ];\n}\n\nsub get_ident {\n    my $self = shift;\n\n    return $self->{__IDENT__};\n}\n\nsub get_name {\n    my $self = shift;\n\n    return $self->{__NAME__};\n}\n\nsub set_name {\n    my $self     = shift;\n    my $new_name = shift;\n\n    $self->{__NAME__} = $new_name;\n\n    # update lookup hash?\n}\n\nsub change_name_sequence {\n    my $self   = shift;\n    shift;\n    my $params = shift;\n\n    return unless $self->get_ident  eq $params->{ident};\n\n    $self->set_name( $params->{new_value} );\n\n    return [ 1 ];\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    my $output = [];\n\n# This might be needed if sequence blocks ever have statements.\n#\n#    foreach my $seq_statement ( @{ $self->{__BODY__} } ) {\n#        my $child_output = $seq_statement->walk_postorder(\n#            $action, $data, $self\n#        );\n#\n#        push @{ $output }, @{ $child_output } if $child_output;\n#    }\n\n    if ( $self->can( $action ) ) {\n        $output = $self->$action( $output, $data, $parent );\n    }\n\n    ( ref( $output ) =~ /ARRAY/ ) ? return $output : return;\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return [\n        {\n            __TYPE__ => $self->{__TYPE__},\n            __DATA__ => [ $self->{__NAME__} => $self->{__IDENT__} ],\n        }\n    ];\n}\n\nsub show_idents {\n    my $self = shift;\n\n    return [ $self->{ __TYPE__ }, $self->{ __NAME__ }, $self->{ __IDENT__ } ];\n}\n\npackage # schema_block\n    schema_block;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub new_block {\n    my $class  = shift;\n    my $parent = shift;\n    my $data   = shift;\n\n    my $self = {\n        __IDENT__  => Bigtop::Parser->get_ident(),\n        __NAME__   => $data->{name},\n        __PARENT__ => $parent,\n    };\n\n    return bless $self, $class;\n}\n\nsub app_block_hashes {\n    my $self         = shift;\n    my $child_output = shift;\n\n    return [ {\n        type  => 'schema',\n        body  => undef,\n        name  => $self->get_name,\n        ident => $self->get_ident,\n    } ];\n}\n\nsub get_ident {\n    my $self = shift;\n\n    return $self->{__IDENT__};\n}\n\nsub set_name {\n    my $self     = shift;\n    my $new_name = shift;\n\n    $self->{__NAME__} = $new_name;\n}\n\nsub get_name {\n    my $self = shift;\n\n    return $self->{__NAME__};\n}\n\nsub change_name_schema {\n    my $self   = shift;\n    shift;\n    my $params = shift;\n\n    return unless $self->get_ident  eq $params->{ident};\n\n    $self->set_name( $params->{new_value} );\n\n    return [ 1 ];\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    my $output = [];\n\n    if ( $self->can( $action ) ) {\n        $output = $self->$action( $output, $data, $parent );\n    }\n\n    ( ref( $output ) =~ /ARRAY/ ) ? return $output : return;\n}\n\nsub build_lookup_hash {\n    my $self = shift;\n\n    return [\n        {\n            __TYPE__ => 'schema',\n            __DATA__ => [ $self->{__NAME__} => $self->{__IDENT__} ],\n        }\n    ];\n}\n\nsub show_idents {\n    my $self = shift;\n\n    return [ 'schema', $self->{__NAME__}, $self->{__IDENT__} ];\n}\n\npackage # sequence_statement\n    sequence_statement;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    if ( $self->can( $action ) ) {\n        return $self->$action( undef, $data, $parent );\n    }\n    else {\n        return;\n    }\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return [ \n        {\n            '__TYPE__' => 'sequences',\n            '__DATA__' => [\n                $self->{__NAME__} => $self->{__ARGS__},\n            ]\n        }\n    ];\n}\n\npackage # table_element_block\n    table_element_block;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub new_statement {\n    my $class   = shift;\n    my $parent  = shift;\n    my $keyword = shift;\n    my $values  = shift;\n\n    my $self    = {\n        __PARENT__ => $parent,\n        __BODY__   => $keyword,\n        __TYPE__   => $keyword,\n        __ARGS__   => arg_list->new( $values ),\n    };\n\n    return bless $self, $class;\n}\n\nsub new_field {\n    my $class  = shift;\n    my $parent = shift;\n    my $name   = shift;\n\n    my $self   = {\n        __PARENT__ => $parent,\n        __TYPE__   => 'field',\n        __IDENT__  => Bigtop::Parser->get_ident(),\n        __NAME__   => $name,\n        __BODY__   => [],\n    };\n\n    return bless $self, $class;\n}\n\nsub app_block_hashes {\n    my $self         = shift;\n    my $child_output = shift;\n\n    my %statements;\n\n    foreach my $child_item ( @{ $child_output } ) {\n        $statements{ $child_item->{ keyword } } = $child_item->{ values };\n    }\n\n    if ( $self->{__TYPE__} eq 'field' ) {\n        return [ {\n            type       => 'field',\n            name       => $self->get_name,\n            ident      => $self->get_ident,\n            statements => \\%statements,\n        } ];\n    }\n    else {\n        return [ {\n            ident     => $self->get_ident,\n            type      => 'statement',\n            keyword   => $self->{__BODY__},\n            value     => $self->{__ARGS__},\n        } ];\n    }\n}\n\nsub get_name {\n    my $self = shift;\n\n    return $self->{__NAME__};\n}\n\nsub all_field_names {\n    my $self          = shift;\n    shift;\n    my $desired_table = shift;\n\n    return unless ( $self->get_table_name eq $desired_table );\n\n    return [ $self->get_name ];\n}\n\nsub set_name {\n    my $self     = shift;\n    my $new_name = shift;\n\n    $self->{__NAME__} = $new_name;\n}\n\nsub get_ident {\n    my $self = shift;\n\n    return $self->{__IDENT__};\n}\n\nsub get_table_name {\n    my $self = shift;\n\n    # does this still work for join_tables?\n    return $self->{__PARENT__}{__NAME__};\n}\n\nsub get_table_ident {\n    my $self = shift;\n\n    return $self->{__PARENT__}{__IDENT__};\n}\n\nsub show_idents {\n    my $self = shift;\n    my $child_output = shift;\n\n    return unless $self->{ __TYPE__ } eq 'field';\n\n    push @{ $child_output },\n            [ 'field', $self->{ __NAME__ }, $self->{ __IDENT__ } ];\n\n    return $child_output;\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    my $output;\n\n    if ( $self->{__TYPE__} eq 'field' ) {\n        foreach my $field_stmnt ( @{ $self->{__BODY__} } ) {\n            my $child_output = $field_stmnt->walk_postorder(\n                $action, $data, $self\n            );\n \n            push @{ $output }, @{ $child_output } if $child_output;\n        }\n    }\n\n    if ( $self->can( $action ) ) {\n        $output = $self->$action( $output, $data, $parent );\n    }\n\n    ( ref( $output ) =~ /ARRAY/ ) ? return $output : return;\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    my %output;\n\n    if ( $child_output ) {\n        my %sub_output;\n\n        foreach my $element ( @{ $child_output } ) {\n            my $output_type                      = $element->{__TYPE__};\n\n            my $name                             = $element->{__DATA__}[0];\n\n            $sub_output{ $output_type }{ $name } = $element->{__DATA__}[1];\n        }\n\n        $sub_output{ __IDENT__ } = $self->{ __IDENT__ };\n\n        %output = (\n            '__TYPE__' => 'fields',\n            '__DATA__' => [\n                $self->{__NAME__} => \\%sub_output,\n            ],\n        );\n    }\n    # for non-field statements\n    else {\n        %output = (\n            '__TYPE__' => $self->{__BODY__},\n            '__DATA__' => [\n                __ARGS__ => $self->{__ARGS__},\n            ],\n        );\n    }\n\n    return [ \\%output ];\n}\n\nsub change_table_keyword_value {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return if ( defined $self->get_name ); # only fields have names\n\n    return unless ( $self->{__BODY__} eq $data->{keyword} );\n\n    $self->{__ARGS__}->set_args_from(\n            $data->{new_value},\n            $data->{pair_required},\n    );\n\n    return [ 1 ];\n}\n\nsub change_field_statement {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $self->{__TYPE__}     eq 'field'        );\n    return unless ( $self->get_ident      eq $data->{ident} );\n\n    my $success = $self->walk_postorder( 'change_field_keyword_value', $data );\n\n    unless ( defined $success->[0] ) { # make new statement\n\n        $success = [ $self->add_field_statement( $data ) ];\n    }\n\n    # This array needs to be two levels deep.\n    return [ $success ];\n}\n\nsub get_field_statement {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return unless ( $self->{__TYPE__}     eq 'field'        );\n    return unless ( $self->get_ident      eq $data->{ident} );\n\n    return $child_output;\n}\n\nsub add_field_statement {\n    my $self = shift;\n    my $data = shift;\n\n    my $new_statement = field_statement->new_statement(\n        {\n            parent        => $self,\n            keyword       => $data->{keyword},\n            new_value     => $data->{new_value},\n            pair_required => $data->{pair_required} || 0,\n        }\n    );\n\n    my $blocks = $self->{ __BODY__ };\n    push @{ $blocks }, $new_statement;\n\n    if ( $data->{ keyword } eq 'is' ) {\n        my %values = map { $_ => 1 } split /\\]\\[/, $data->{ new_value };\n        return 'date' if ( $values{ date } );\n    }\n    elsif ( $data->{ keyword } eq 'date_select_text' ) {\n        return 'date_select_text';\n    }\n\n    return 1;\n}\n\nsub remove_field_statement {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $self->{__TYPE__}     eq 'field'        );\n    return unless ( $self->get_ident      eq $data->{ident} );\n\n    my $statements   = $self->{ __BODY__ };\n    my $doomed_index = get_statement_index( $statements, $data->{keyword} );\n\n    if ( $doomed_index >= 0 ) {\n        splice @{ $statements }, $doomed_index, 1;\n        return [ 1 ];\n    }\n    else {\n        return [ 0 ];\n    }\n}\n\nsub get_statement_index {\n    my $statements   = shift;\n    my $target_name  = shift;\n\n    my $target_index = -1;\n    my $count        = 0;\n\n    STATEMENT:\n    foreach my $statement ( @{ $statements } ) {\n        if ( $statement->get_name eq $target_name ) {\n            $target_index = $count;\n            last STATEMENT;\n        }\n    }\n    continue {\n        $count++;\n    }\n\n    return $target_index;\n}\n\nsub change_name_field {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( defined $self->get_ident ); # only fields can change names\n\n    return unless $self->get_ident eq $data->{ident};\n\n    my @retval;\n\n    my $old_name = $self->get_name(); # who were we fka\n    $self->set_name( $data->{ new_value } );\n\n    # update our label, if the old one was the default label\n    my $result = $self->walk_postorder( 'update_label',\n            { old_name => $old_name, new_name => $data->{ new_value } }\n    );\n\n    push @retval, @{ $result } if ( ref( $result ) eq 'ARRAY' );\n\n    $data->{ old_value } = $old_name;\n    $result = $self->{ __PARENT__ }->walk_postorder(\n            'update_foreign_display', $data\n    );\n\n    push @retval, @{ $result } if ( ref( $result ) eq 'ARRAY' );\n\n    my $tree = $data->{ __THE_TREE__ };\n\n    $result = $tree->walk_postorder( 'field_name_changed', \n        {\n            table_name     => $self->get_table_name(),\n            old_field_name => $old_name,\n            new_field_name => $data->{ new_value },\n        }\n    );\n\n    push @retval, @{ $result } if ( ref( $result ) eq 'ARRAY' );\n\n    return \\@retval;\n}\n\nsub change_data_statement {\n    my $self         = shift;\n    shift;\n    my $data         = shift;\n\n    return if     ( defined $self->{__IDENT__}  );\n    return unless ( $self->{__TYPE__} eq 'data' );\n\n    return [ $self ];\n}\n\nsub get_field_names {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( defined $self->{__IDENT__} );\n\n    return [ $self->{__IDENT__} => $self->{__NAME__} ];\n}\n\n# if a renamed field is in foreign_display, update it\nsub update_foreign_display {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless $self->{ __TYPE__ } eq 'foreign_display';\n\n    my $display     = $self->{ __ARGS__ }->get_first_arg;\n    my $old_display = $display;\n\n    if ( $data->{ new_value } ) {\n        $display        =~ s/%$data->{ old_value }/%$data->{ new_value }/g;\n    }\n    else {\n        $display        =~ s/%$data->{ old_value }//g;\n    }\n\n    if ( $display =~ /^\\s*$/ ) {\n        $display = '';\n        $self->{__PARENT__}->remove_table_statement(\n                undef,\n                {\n                    ident   => $data->{ ident },\n                    keyword => 'foreign_display',\n                }\n        );\n    }\n    else {\n        $self->{ __ARGS__ }->set_args_from( $display );\n    }\n\n    if ( $display eq $old_display ) {\n        return;\n    }\n    else {\n        return [ $self->get_table_ident() . '::foreign_display' => $display ];\n    }\n}\n\nsub get_table_name_from_field_ident {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless $self->{ __TYPE__  } eq 'field';\n    return unless $self->{ __IDENT__ } eq $data->{ ident };\n\n    return [ $self->get_table_name ];\n}\n\nsub field_reset_bool {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return unless $self->{ __TYPE__ } eq 'field';\n    return if $self->{ __NAME__ } eq 'id';\n\n    unless ( $child_output->[0] ) {\n        $self->add_field_statement(\n            {\n                keyword       => $data->{keyword},\n                new_value     => $data->{new_value},\n            }\n        );\n    }\n\n    return [ $self->{ __IDENT__ } ];\n}\n\npackage # field_statement\n    field_statement;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub new_statement {\n    my $class   = shift;\n    my $params  = shift;\n\n    my $self = {\n        __PARENT__  => $params->{ parent },\n        __KEYWORD__ => $params->{ keyword },\n        __DEF__     => field_statement_def->new(\n            $params->{ new_value },\n            $params->{ pair_required },\n        ),\n    };\n\n    $self->{__DEF__}{__PARENT__} = $self;\n\n    return bless $self, $class;\n}\n\nsub app_block_hashes {\n    my $self         = shift;\n    my $child_output = shift;\n\n    return [ {\n        keyword => $self->get_name,\n        values  => $self->get_values,\n    } ];\n}\n\nsub get_table_name {\n    my $self = shift;\n\n    #       table_elemnt_block table_block\n    return $self->{__PARENT__}{__PARENT__}{__NAME__};\n}\n\nsub get_field_ident {\n    my $self = shift;\n\n    return $self->{__PARENT__}{__IDENT__};\n}\n\nsub get_field_name {\n    my $self = shift;\n\n    return $self->{__PARENT__}{__NAME__};\n}\n\nsub get_name {\n    my $self = shift;\n\n    return $self->{__KEYWORD__};\n}\n\nsub get_values {\n    my $self = shift;\n\n    return $self->{__DEF__}{__ARGS__};\n}\n\nsub change_field_keyword_value {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $data->{type}         eq 'field'          );\n    return unless ( $self->{__KEYWORD__}  eq $data->{keyword} );\n\n    $self->{__DEF__}{__ARGS__}->set_args_from(\n            $data->{new_value},\n            $data->{pair_required},\n    );\n\n    # see if we changed the SQL type to date\n    my %values = map { $_ => 1 } split /\\]\\[/, $data->{ new_value };\n    if ( $data->{ keyword } eq 'is' and $values{ date } ) {\n        return [ 'date' ];\n    }\n    elsif ( $data->{ keyword } eq 'date_select_text'\n                and\n            $data->{ new_value } )\n    {\n        return [ 'date_select_text' ];\n    }\n\n    return [ 1 ];\n}\n\nsub get_field_statement {\n    my $self         = shift;\n    shift;\n    my $data         = shift;\n\n    return unless ( $data->{ keyword } eq $self->{ __KEYWORD__ } );\n\n    return [ $self->{ __DEF__ }{ __ARGS__ } ];\n}\n\n# If the old label was the default, the label will be changed to default\n# for new name.\nsub update_label {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return unless $self->{ __KEYWORD__ } eq 'label';\n\n    my $field_ident = $self->get_field_ident();\n\n    my $old_label         = $child_output->[0];\n    my $old_default_label = Bigtop::ScriptHelp->default_label(\n            $data->{ old_name }\n    );\n\n    if ( $old_label eq $old_default_label ) {\n        my $new_label = Bigtop::ScriptHelp->default_label(\n                $data->{ new_name }\n        );\n        $self->{__DEF__}{__ARGS__}->set_args_from( $new_label );\n\n        return [ $field_ident . '::label' => $new_label ];\n    }\n\n    return;\n}\n\nsub table_name_changed {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless $self->{ __KEYWORD__ } eq 'refers_to';\n\n    my $current_foreigner = $self->{ __DEF__ }{ __ARGS__ }->get_first_arg;\n\n    if ( $current_foreigner eq $data->{ old_name } ) {\n        $self->{ __DEF__}{ __ARGS__ }->set_args_from( $data->{ new_name } );\n\n        return [ $self->get_field_ident . '::refers_to', $data->{ new_name } ];\n    }\n\n    return;\n}\n\nsub field_reset_bool {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless $self->{ __KEYWORD__ } eq $data->{ keyword };\n\n    $self->{ __DEF__ }{ __ARGS__ }[0] = $data->{ new_value };\n\n    return [ 1 ];\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    my $output;\n    \n    if ( $self->{__DEF__}->can( 'walk_postorder' ) ) {\n        $output = $self->{__DEF__}->walk_postorder( $action, $data, $self );\n    }\n\n    if ( $self->can( $action ) ) {\n        $output = $self->$action( $output, $data, $parent );\n    }\n\n    ( ref( $output ) =~ /ARRAY/ ) ? return $output : return;\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return [ \n        {\n            '__TYPE__' => $self->{__KEYWORD__},\n            '__DATA__' => [ @{ $child_output } ],\n        }\n    ];\n}\n\npackage # field_statement_def\n    field_statement_def;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub new {\n    my $class         = shift;\n    my $values        = shift;\n    my $pair_required = shift;\n\n    my $self   = {\n        __ARGS__ => arg_list->new( $values, $pair_required ),\n    };\n\n    return bless $self, $class;\n}\n\nsub update_label {\n    my $self = shift;\n\n    return [ $self->{ __ARGS__ }->get_first_arg ];\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    if ( $self->can( $action ) ) {\n        return $self->$action( undef, $data, $parent );\n    }\n    else {\n        return;\n    }\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return [ 'args' => $self->{__ARGS__} ];\n}\n\npackage # extra_sql_block\n    extra_sql_block;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    my $output;\n\n    # if we add more extra_sql types, we might need this:\n    #if ( $self->{__TYPE__} eq 'extra_sql' ) {\n    foreach my $stmnt ( @{ $self->{__BODY__} } ) {\n        my $child_output = $stmnt->walk_postorder(\n            $action, $data, $self\n        );\n \n        push @{ $output }, @{ $child_output } if $child_output;\n    }\n    #}\n\n    if ( $self->can( $action ) ) {\n        $output = $self->$action( $output, $data, $parent );\n    }\n\n    ( ref( $output ) =~ /ARRAY/ ) ? return $output : return;\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    my %output;\n\n    if ( $child_output ) {\n        my %sub_output;\n\n        foreach my $element ( @{ $child_output } ) {\n            my $output_type                      = $element->{__TYPE__};\n            my $name                             = $element->{__DATA__}[0];\n            $sub_output{ $output_type }{ $name } = $element->{__DATA__}[1];\n        }\n\n        $sub_output{ __IDENT__ } = $self->{ __IDENT__ };\n\n        %output = (\n            '__TYPE__' => 'extra_sqls',\n            '__DATA__' => [\n                $self->{__NAME__} => \\%sub_output,\n            ],\n        );\n    }\n    return [ \\%output ];\n}\n\npackage # extra_sql_statement\n    extra_sql_statement;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    my $output;\n    \n    if ( $self->{__DEF__}->can( 'walk_postorder' ) ) {\n        $output = $self->{__DEF__}->walk_postorder( $action, $data, $self );\n    }\n\n    if ( $self->can( $action ) ) {\n        $output = $self->$action( $output, $data, $parent );\n    }\n\n    ( ref( $output ) =~ /ARRAY/ ) ? return $output : return;\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return [ \n        {\n            '__TYPE__' => $self->{__KEYWORD__},\n            '__DATA__' => [ @{ $child_output } ],\n        }\n    ];\n}\n\npackage # extra_sql_statement_def\n    extra_sql_statement_def;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    if ( $self->can( $action ) ) {\n        return $self->$action( undef, $data, $parent );\n    }\n    else {\n        return;\n    }\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return [ 'args' => $self->{__ARGS__} ];\n}\n\npackage # join_table\n    join_table;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub new_block {\n    my $class  = shift;\n    my $parent = shift;\n    my $data   = shift;\n\n    my $self;\n\n    $self = {\n        __IDENT__       => Bigtop::Parser->get_ident(),\n        __NAME__        => $data->{name},\n        __BODY__        => [],\n    };\n\n    $self->{__PARENT__} = $parent;\n\n    return bless $self, $class;\n}\n\nsub change_join_table_statement {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $self->get_ident      eq $data->{ident} );\n\n    my $success = $self->walk_postorder(\n            'change_join_table_statement_value', $data\n    );\n\n    unless ( defined $success->[0] ) { # make new statement\n\n        $self->add_join_table_statement( $data );\n    }\n\n    return [ 1 ];\n}\n\nsub add_join_table_statement {\n    my $self = shift;\n    my $data = shift;\n\n    my $new_statement = join_table_statement->new(\n        $self, $data->{ keyword }, $data->{ new_value },\n    );\n\n    my $blocks = $self->{ __BODY__ };\n    push @{ $blocks }, $new_statement;\n}\n\nsub remove_join_table_statement {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $self->get_ident   eq $data->{ident} );\n\n    my $doomed_child = -1;\n    my $count        = 0;\n\n    my $blocks = $self->{__BODY__};\n\n    BLOCK:\n    foreach my $block ( @{ $blocks } ) {\n        next BLOCK unless $block->{__KEYWORD__} eq $data->{keyword};\n\n        $doomed_child = $count;\n        last BLOCK;\n    }\n    continue {\n        $count++;\n    }\n\n    if ( $doomed_child >= 0 ) {\n        splice @{ $blocks }, $doomed_child, 1;\n    }\n    # else, nothing to see here, move along quietly\n\n    return [ 1 ];\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    my $output = [];\n\n    foreach my $field_stmnt ( @{ $self->{__BODY__} } ) {\n        my $child_output = $field_stmnt->walk_postorder(\n            $action, $data, $self\n        );\n\n        push @{ $output }, @{ $child_output } if $child_output;\n    }\n\n    if ( $self->can( $action ) ) {\n        $output = $self->$action( $output, $data, $parent );\n    }\n\n    ( ref( $output ) =~ /ARRAY/ ) ? return $output : return;\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    my %child_hash;\n\n    while ( my $output_type = shift @{ $child_output } ) {\n        my $hash = shift @{ $child_output };\n\n        if ( $output_type ne 'data' ) {\n            if ( defined $child_hash{ $output_type } ) {\n                die \"join_table $self->{__NAME__} has multiple \"\n                    .   \"$output_type statement.\\n\";\n            }\n            $child_hash{ $output_type } = $hash;\n        }\n    }\n\n    if ( not defined $child_hash{ joins } ) {\n        die \"join_table $self->{__NAME__} has no joins statement.\\n\";\n    }\n\n    my ( $table1, $table2 ) = %{ $child_hash{ joins } };\n\n    my ( $name1,  $name2  );\n    if ( defined $child_hash{ names } ) {\n        ( $name1, $name2 ) = %{ $child_hash{ names } };\n    }\n    else {\n        ( $name1, $name2 ) = ( \"${table1}s\", \"${table2}s\" );\n    }\n\n    return [\n        {\n            '__TYPE__' => 'join_tables',\n            '__DATA__' => [\n                $table1 => {\n                    joins => { $table2 => $self->{__NAME__} },\n                    name  => $name2,\n                },\n                $table2 => {\n                    joins => { $table1 => $self->{__NAME__} },\n                    name  => $name1,\n                },\n                __IDENT__ => $self->{ __IDENT__ },\n            ],\n        }\n    ];\n}\n\nsub get_ident {\n    my $self = shift;\n    return $self->{__IDENT__};\n}\n\nsub show_idents {\n    my $self = shift;\n    my $child_output = shift;\n\n    push @{ $child_output },\n            [ 'join_table', $self->{ __NAME__ }, $self->{ __IDENT__ } ];\n\n    return $child_output;\n}\n\nsub app_block_hashes {\n    my $self         = shift;\n    my $child_output = shift;\n\n    my $body = {\n        statements => {},\n    };\n\n    foreach my $child_item ( @{ $child_output } ) {\n        $body->{ statements }{ $child_item->{ keyword } } =\n            $child_item->{ value };\n    }\n\n    return [ {\n        ident           => $self->get_ident,\n        type            => 'join_table',\n        body            => $body,\n        name            => $self->{__NAME__},\n    } ];\n}\n\npackage # join_table_statement\n    join_table_statement;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub new {\n    my $class   = shift;\n    my $parent  = shift;\n    my $keyword = shift;\n    my $values  = shift;\n\n    my $self    = {\n        __PARENT__  => $parent,\n        __KEYWORD__ => $keyword,\n        __DEF__     => arg_list->new( $values ),\n    };\n\n    return bless $self, $class;\n}\n\nsub change_join_table_statement_value {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $self->{__KEYWORD__} eq $data->{keyword} );\n\n    $self->{__DEF__}->set_args_from(\n            $data->{new_value},\n            $data->{pair_required},\n    );\n\n    return [ 1 ];\n}\n\nsub get_join_table_name {\n    my $self = shift;\n\n    return $self->{ __PARENT__ }{ __NAME__ };\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    if ( $self->can( $action ) ) {\n        return $self->$action( undef, $data, $parent );\n    }\n    else {\n        return;\n    }\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return [ $self->{__KEYWORD__} => $self->{__DEF__}->get_first_arg() ];\n}\n\nsub app_block_hashes {\n    my $self         = shift;\n    my $child_output = shift;\n\n    return [ { keyword => $self->{__KEYWORD__}, value => $self->{__DEF__} } ];\n}\n\npackage # controller_block\n    controller_block;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub new_block {\n    my $class  = shift;\n    my $parent = shift;\n    my $data   = shift;\n\n    my $self = {\n        __IDENT__  => Bigtop::Parser->get_ident(),\n        __NAME__   => $data->{name},\n        __TYPE__   => $data->{subtype},\n        __BODY__   => []\n    };\n\n    $self->{__PARENT__} = $parent;\n\n    bless $self, $class;\n\n    # if we were given a table name, use it and do other nice things\n    if ( $data->{ table } ) {\n        $self->add_controller_statement(\n            { keyword   => 'controls_table',\n              new_value => $data->{ table },\n            }\n        );\n        $self->add_controller_statement(\n            { keyword   => 'rel_location',\n              new_value => $data->{ rel_loc } || $data->{ table },\n            }\n        );\n        $self->add_controller_statement(\n            { keyword   => 'text_description',\n              new_value => $data->{ text_description } || $data->{ table },\n            }\n        );\n        $self->add_controller_statement(\n            { keyword   => 'page_link_label',\n              new_value => $data->{ page_link_label } || $data->{ name },\n            }\n        );\n    }\n\n    # now add some clever defaults if we're a CRUD or AutoCRUD\n    if ( defined $data->{ subtype }\n            and\n         $data->{ subtype } =~ /CRUD/\n    ) {\n        my $table_name = $data->{ table } || lc $data->{name};\n\n        # make the do_main method\n        my $cols     = $data->{ on_main_listing } || 'ident, description';\n        $cols        =~ s/, /][/g;\n\n        my $main_arr = $self->add_subblock(\n            undef,\n            {\n                parent => {\n                    type => 'controller',\n                    ident => $self->get_ident,\n                },\n                new_child => {\n                    type     => 'method',\n                    sub_type => 'main_listing',\n                    name     => 'do_main',\n                },\n            }\n        );\n        my $do_main = $main_arr->[0];\n        my %values  = (\n            cols           => $cols,\n            header_options => 'Add',\n            row_options    => 'Edit][Delete',\n            title          => $data->{ page_link_label } || $self->{__NAME__},\n        );\n\n        foreach my $statement qw( cols header_options row_options title ) {\n            $do_main->add_method_statement( {\n                keyword   => $statement,\n                new_value => $values{ $statement },\n            } );\n        }\n\n        # make the form method\n        my $form_method_name;\n        if ( $data->{ subtype } eq 'AutoCRUD' ) {\n            $form_method_name = 'form';\n        }\n        else {\n            $form_method_name = 'my_crud_form';\n        }\n        my $form_arr = $self->add_subblock(\n            undef,\n            {\n                parent => {\n                    type => 'controller',\n                    ident => $self->get_ident,\n                },\n                new_child => {\n                    type     => 'method',\n                    sub_type => $data->{ subtype } . '_form',\n                    name     => $form_method_name,\n                },\n            }\n        );\n        my $form_method = $form_arr->[0];\n\n        my $all_fields_but = $data->{ all_fields_but }\n                          || 'id, created, modified';\n        $all_fields_but    =~ s/, /][/g;\n\n        $form_method->add_method_statement( {\n            keyword   => 'all_fields_but',\n            new_value => $all_fields_but,\n        } );\n\n        $form_method->add_method_statement( {\n            keyword   => 'extra_keys',\n            new_value => {\n                keys   => 'legend',\n                values => q{$self->path_info =~ /edit/i ? q!Edit! : q!Add!}\n            }\n        } );\n    }\n    # base controllers get nav link methods by default\n    elsif ( defined $data->{ subtype }\n                and\n            $data->{ subtype } eq 'base_controller'\n    ) {\n        # first a do_main with nav links for default main page\n        my $main_arr = $self->add_subblock(\n            undef,\n            {\n                parent => {\n                    type => 'controller',\n                    ident => $self->get_ident,\n                },\n                new_child => {\n                    type     => 'method',\n                    sub_type => 'base_links',\n                    name     => 'do_main',\n                },\n            }\n        );\n\n        my $do_main = $main_arr->[0];\n\n        # then a site_links method for other controllers and their templates\n        $self->add_subblock(\n            undef,\n            {\n                parent => {\n                    type => 'controller',\n                    ident => $self->get_ident,\n                },\n                new_child => {\n                    type     => 'method',\n                    sub_type => 'links',\n                    name     => 'site_links',\n                },\n            }\n        );\n    }\n\n    return $self;\n}\n\nsub add_subblock {\n    my $self   = shift;\n    shift;\n    my $params = shift;\n\n    return unless ( $params->{parent}{type}    eq 'controller'     );\n    return unless ( $params->{parent}{ident}   eq $self->get_ident );\n\n    if ( $params->{new_child}{type} eq 'method' ) {\n        my $new_method = controller_method->new(\n                $self, $params\n        );\n\n        push @{ $self->{__BODY__} }, $new_method;\n\n        return [ $new_method ];\n    }\n    elsif ( $params->{new_child}{type} eq 'config' ) {\n        my $new_config = controller_config_block->new( $self, $params );\n\n        push @{ $self->{__BODY__} }, $new_config;\n\n        return [ $new_config ];\n    }\n}\n\nsub remove_block {\n    my $self         = shift;\n    shift;\n    my $data         = shift;\n    my $doomed_ident = $data->{ ident };\n\n    my $doomed_index = -1;\n    my $count        = 0;\n\n    my $children     = $self->{__BODY__};\n\n    CHILD:\n    foreach my $child ( @{ $children } ) {\n        next CHILD unless $child->can( 'get_ident' );\n\n        if ( $child->get_ident eq $doomed_ident ) {\n            $doomed_index = $count;\n        }\n    }\n    continue {\n        $count++;\n    }\n\n    return if ( $doomed_index == -1 );\n\n    splice @{ $children }, $doomed_index, 1;\n\n    return [ 1 ];\n}\n\nsub get_ident {\n    my $self = shift;\n    return $self->{__IDENT__};\n}\n\nsub get_name {\n    my $self = shift;\n    return $self->{__NAME__};\n}\n\nsub set_name {\n    my $self          = shift;\n    $self->{__NAME__} = shift;\n}\n\nsub get_controller_type {\n    my $self = shift;\n\n    return $self->{__TYPE__} || 'stub';\n}\n\nsub set_type {\n    my $self          = shift;\n    $self->{__TYPE__} = shift;\n}\n\nsub is_base_controller {\n    my $self = shift;\n\n    return (\n        defined $self->{__TYPE__}\n            and\n        $self->{__TYPE__} eq 'base_controller'\n    );\n}\n\nsub output_location {\n    my $self         = shift;\n    my $child_output = shift;\n\n    return unless $self->is_base_controller;\n\n    return $child_output;\n}\n\nsub get_controlled_table {\n    my $self = shift;\n}\n\nsub change_name_controller {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless $self->get_ident  eq $data->{ident};\n\n    $self->set_name( $data->{new_value} );\n\n    return [ 1 ];\n}\n\nsub change_type {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $self->get_ident eq $data->{ident} );\n\n    $self->set_type( $data->{new_type} );\n\n    return [ 1 ];\n}\n\nsub app_block_hashes {\n    my $self         = shift;\n    my $child_output = shift;\n\n    my $body = {\n        statements => {},\n        blocks     => [],\n    };\n\n    foreach my $child_item ( @{ $child_output } ) {\n        if ( $child_item->{ type } eq 'statement' ) {\n            $body->{ statements }{ $child_item->{ keyword } } =\n                $child_item->{ value };\n        }\n        else {\n            push @{ $body->{ blocks } }, $child_item;\n        }\n    }\n\n    my $controller_type = $self->get_controller_type || 'stub';\n\n    return [ {\n        ident           => $self->get_ident,\n        type            => 'controller',\n        body            => $body,\n        name            => $self->get_name,\n        controller_type => $controller_type,\n    } ];\n}\n\nsub change_controller_statement {\n    my $self         = shift;\n    shift;\n    my $data         = shift;\n\n    return unless ( $self->get_ident   eq $data->{ident} );\n\n    my $success = $self->walk_postorder(\n                    'change_controller_keyword_value', $data\n    );\n\n    unless ( defined $success->[0] ) { # make new statement\n        $self->add_controller_statement( $data );\n    }\n\n    return [ 1 ];\n}\n\nsub add_controller_statement {\n    my $self = shift;\n    my $data = shift;\n\n    my $new_statement = controller_statement->new(\n        $self, $data->{ keyword }, $data->{ new_value },\n    );\n\n    my $blocks = $self->{ __BODY__ };\n    push @{ $blocks }, $new_statement;\n}\n\nsub remove_controller_statement {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $self->get_ident   eq $data->{ident} );\n\n    my $doomed_child = -1;\n    my $count        = 0;\n\n    my $blocks = $self->{__BODY__};\n\n    BLOCK:\n    foreach my $block ( @{ $blocks } ) {\n        next BLOCK unless defined $block->{__KEYWORD__}; # skip methods\n        next BLOCK unless $block->{__KEYWORD__} eq $data->{keyword};\n\n        $doomed_child = $count;\n        last BLOCK;\n    }\n    continue {\n        $count++;\n    }\n\n    if ( $doomed_child >= 0 ) {\n        # This probably leaks memory because children have parent pointers.\n        # But the parent is me and I'm the app_body, so maybe not.\n        splice @{ $blocks }, $doomed_child, 1;\n    }\n    # else, nothing to see here, move along quietly\n\n    return [ 1 ];\n}\n\nsub get_controller_statement {\n    my $self    = shift;\n    my $keyword = shift;\n\n    my $blocks  = $self->{__BODY__};\n\n    BLOCK:\n    foreach my $block ( @{ $blocks } ) {\n        next BLOCK unless defined $block->{ __KEYWORD__ }; # no methods\n        next BLOCK unless $block->{ __KEYWORD__ } eq $keyword;\n\n        return $block;\n    }\n\n    return;\n}\n\nsub field_name_changed {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return unless defined $child_output->[0];\n\n    return $self->walk_postorder( 'update_field_name', $data );\n}\n\nsub field_removed {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return unless defined $child_output->[0];\n\n    return $self->walk_postorder( 'remove_field', $data );\n}\n\nsub show_idents {\n    my $self = shift;\n    my $child_output = shift;\n\n    push @{ $child_output },\n            [ 'controller', $self->{ __NAME__ }, $self->{ __IDENT__ } ];\n\n    return $child_output;\n}\n\nsub get_controller_configs {\n    my $self         = shift;\n    my $child_output = shift;\n\n    my $name         = $self->get_name();\n\n    my %my_children;\n    foreach my $child ( @{ $child_output } ) {\n        $my_children{ $child->{ type } } = $child->{ statements };\n    }\n\n    return [ { controller => $name, configs => \\%my_children } ];\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    my $output = [];\n\n    foreach my $controller_stmnt ( @{ $self->{__BODY__} } ) {\n        my $child_output = $controller_stmnt->walk_postorder(\n            $action, $data, $self\n        );\n        push @{ $output }, @{ $child_output } if $child_output;\n    }\n\n    if ( $self->can( $action ) ) {\n        $output = $self->$action( $output, $data, $parent );\n    }\n\n    ( ref( $output ) =~ /ARRAY/ ) ? return $output : return;\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    my %output       = ( type => $self->get_controller_type );\n\n    foreach my $element ( @{ $child_output } ) {\n        my $output_type                  = $element->{__TYPE__};\n\n        my $name                         = $element->{__DATA__}[0];\n\n        $output{ $output_type }{ $name } = $element->{__DATA__}[1];\n    }\n\n    return [\n        {\n            '__TYPE__' => 'controllers',\n            '__DATA__' => [\n                $self->{__NAME__} => {\n                        __IDENT__ => $self->{ __IDENT__ },\n                        %output\n                }\n            ],\n        }\n    ];\n}\n\nsub use_date_plugin {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    my $it_is_I = $self->walk_postorder(\n            'do_I_control', $data->{ table }\n    )->[0];\n\n    my @retval;\n\n    if ( $it_is_I ) {\n        # first, update my uses\n        my $current_uses = $self->get_controller_statement( 'uses' );\n\n        if ( not defined $current_uses ) {\n            $self->add_controller_statement(\n                {\n                    keyword   => 'uses',\n                    new_value => 'Gantry::Plugins::Calendar',\n                }\n            );\n            push @retval, $self->get_ident . '::uses',\n                 $self->get_controller_statement( 'uses' )->{ __ARGS__ };\n        }\n        else { # see if its already there\n            my %current_modules = map { $_ => 1 }\n                                  @{ $current_uses->{ __ARGS__ } };\n\n            unless ( defined $current_modules{ 'Gantry::Plugins::Calendar' } )\n            {\n                push @{ $current_uses->{ __ARGS__ } },\n                     'Gantry::Plugins::Calendar';\n            }\n            push @retval,\n                 $self->get_ident . '::uses',\n                 $current_uses->{ __ARGS__ };\n        }\n\n        # then, tell update my form\n        my $result = $self->walk_postorder(\n                'add_date_popups', $data->{ table }\n        );\n\n        push @retval, @{ $result };\n\n        return \\@retval;\n    }\n\n    return;\n}\n\npackage # controller_method\n    controller_method;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub new {\n    my $class  = shift;\n    my $parent = shift;\n    my $params = shift;\n\n    my $type   = $params->{new_child}{sub_type} || 'stub';\n\n    my $self   = {\n        __IDENT__  => Bigtop::Parser->get_ident(),\n        __NAME__   => $params->{new_child}{name},\n        __BODY__   => method_body->new(),\n        __TYPE__   => $type,\n        __PARENT__ => $parent,\n    };\n\n    $self->{__BODY__}{__PARENT__} = $self;\n\n    return bless $self, $class;\n}\n\nsub get_ident {\n    my $self = shift;\n\n    return $self->{__IDENT__};\n}\n\nsub get_name {\n    my $self = shift;\n\n    return $self->{__NAME__};\n}\n\nsub set_name {\n    my $self          = shift;\n    $self->{__NAME__} = shift;\n}\n\nsub set_type {\n    my $self          = shift;\n    $self->{__TYPE__} = shift;\n}\n\nsub get_controller_ident {\n    my $self = shift;\n\n    return $self->{__PARENT__}{__PARENT__}->get_ident();\n}\n\nsub get_controller_name {\n    my $self = shift;\n\n    return $self->{__PARENT__}{__PARENT__}->get_name();\n}\n\nsub change_name_method {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless $self->get_ident eq $data->{ident};\n\n    $self->set_name( $data->{ new_value } );\n\n    return;\n}\n\nsub app_block_hashes {\n    my $self         = shift;\n    my $child_output = shift;\n\n    my %statements;\n\n    foreach my $child_item ( @{ $child_output } ) {\n        $statements{ $child_item->{ keyword } } = $child_item->{ values };\n    }\n\n    return [ {\n        ident       => $self->get_ident,\n        type        => 'method',\n        name        => $self->get_name,\n        method_type => $self->{__TYPE__},\n        statements  => \\%statements,\n    } ];\n}\n\nsub change_method_statement {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $data->{ident} eq $self->get_ident() );\n\n    my $old_value = $self->walk_postorder( 'get_method_keyword_value', $data );\n\n    my $success   = $self->walk_postorder(\n            'change_method_keyword_value', $data\n    );\n\n    unless ( defined $success->[0] ) {\n        $self->add_method_statement( $data );\n    }\n\n    if ( $data->{ keyword } eq 'paged_conf' ) {\n        my $current_value = $data->{ app }->get_config_statement(\n                'base', $data->{ new_value }\n        );\n\n        unless ( defined $current_value->[0] and $current_value->[0] > 0 ) {\n            my $config_ident = $data->{ app }->get_config_ident( 'base' );\n\n            $data->{ app }->set_config_statement(\n                    $config_ident, $data->{ new_value }, 20\n            );\n            return [ [ $config_ident . '::' . $data->{ new_value }, 20 ] ];\n        }\n    }\n\n    return [ 1 ];\n}\n\nsub add_method_statement {\n    my $self = shift;\n    my $data = shift;\n\n    my $new_statement = method_statement->new(\n        $self->{__BODY__},\n        $data->{keyword},\n        $data->{new_value},\n        $data->{pair_required},\n    );\n\n    my $blocks = $self->{ __BODY__ }{ 'method_statement(s?)' };\n    push @{ $blocks }, $new_statement;\n}\n\nsub remove_method_statement {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $data->{ident} eq $self->get_ident() );\n\n    my $doomed_child = -1;\n    my $count        = 0;\n\n    my $statements = $self->{ __BODY__ }{'method_statement(s?)'};\n\n    STATEMENT:\n    foreach my $statement ( @{ $statements } ) {\n        next STATEMENT unless $statement->{__KEYWORD__} eq $data->{keyword};\n\n        $doomed_child = $count;\n        last STATEMENT;\n    }\n    continue {\n        $count++;\n    }\n\n    if ( $doomed_child >= 0 ) {\n        # This probably leaks memory because children have parent pointers.\n        # But the parent is me and I'm the app_body, so maybe not.\n        splice @{ $statements }, $doomed_child, 1;\n    }\n    # else, nothing to see here, move along quietly\n\n    return [ 1 ];\n}\n\nsub get_method_statement {\n    my $self    = shift;\n    my $keyword = shift;\n\n    my $statements = $self->{ __BODY__ }{'method_statement(s?)'};\n\n    STATEMENT:\n    foreach my $statement ( @{ $statements} ) {\n        next STATEMENT unless $statement->{__KEYWORD__} eq $keyword;\n        return $statement;\n    }\n    return;\n}\n\nsub change_type {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $self->get_ident eq $data->{ident} );\n\n    $self->set_type( $data->{new_type} );\n\n    return [ 1 ];\n}\n\nsub add_date_popups {\n    my $self  = shift;\n    shift;\n    my $table = shift;\n\n    return unless $self->{ __TYPE__ } =~ /form/;\n\n    # First, make sure the form is named for the table (or has a name)\n    my $form_statement = $self->get_method_statement( 'form_name' );\n    my $form_name      = $table;\n\n    if ( defined $form_statement ) {\n        $form_name     = $form_statement->{ __ARGS__ }->get_first_arg();\n    }\n    else { # create a form_name statement\n        $self->add_method_statement(\n            {\n                keyword   => 'form_name',\n                new_value => $table,\n            }\n        );\n    }\n\n    # Second, make sure that name is in javascript code for calendars.\n    my $javascript_code = qq{\\$self->calendar_month_js( '$table' )},\n    my $keys_statement  = $self->get_method_statement( 'extra_keys' );\n    my $extra_keys;\n\n    if ( defined $keys_statement ) {\n        push @{ $keys_statement->{ __ARGS__ } },\n             { javascript => $javascript_code };\n\n        $extra_keys = $keys_statement->{ __ARGS__ };\n    }\n    else {\n        $self->add_method_statement(\n            {\n                keyword   => 'extra_keys',\n                new_value => {\n                    'keys'   => 'javascript',\n                    'values' => $javascript_code,\n                },\n            }\n        );\n\n        $extra_keys = $self->get_method_statement( 'extra_keys' )->{__ARGS__};\n    }\n\n    my $ident = $self->get_ident;\n    return [\n        $ident . '::form_name'  => $table,\n        $ident . '::extra_keys' => $extra_keys,\n    ];\n}\n\nsub update_field_name {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    my $count = 0;\n    # remember that foreach aliases, this loop alters child output\n    foreach my $key_or_val ( @{ $child_output } ) {\n        if ( $count % 2 == 0 ) {\n            $key_or_val = $self->{__IDENT__} . '::' . $key_or_val;\n        }\n        $count++;\n    }\n\n    return $child_output;\n}\n\nsub remove_field {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    my $count = 0;\n    # remember that foreach aliases, this loop alters child output\n    foreach my $key_or_val ( @{ $child_output } ) {\n        if ( $count % 2 == 0 ) {\n            $key_or_val = $self->{__IDENT__} . '::' . $key_or_val;\n        }\n        $count++;\n    }\n\n    return $child_output;\n}\n\nsub show_idents {\n    my $self = shift;\n    my $child_output = shift;\n\n    push @{ $child_output }, [\n        'method',\n        $self->{ __NAME__ },\n        $self->{ __IDENT__ },\n        'controller: ' . $self->get_controller_ident,\n    ];\n\n    return $child_output;\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    my $output = $self->{__BODY__}->walk_postorder( $action, $data, $self );\n\n    if ( $self->can( $action ) ) {\n        return $self->$action( $output, $data, $parent );\n    }\n\n    ( ref( $output ) =~ /ARRAY/ ) ? return $output : return;\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    my $statements   = {};\n\n    if ( $child_output ) {\n        $statements  = { @{ $child_output } }\n    }\n\n    return [\n        {\n            '__TYPE__'        => 'methods',\n            '__DATA__'        => [\n                $self->{__NAME__} => {\n                    type       => $self->{__TYPE__},\n                    statements => $statements,\n                    __IDENT__  => $self->{__IDENT__},\n                },\n            ],\n        }\n    ];\n}\n\npackage # method_body\n    method_body;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub new {\n    my $class  = shift;\n\n    my $self  = {\n        __RULE__               => 'method_body',\n        'method_statement(s?)' => [],\n    };\n\n    return bless $self, $class;\n}\n\nsub get_method_name {\n    my $self = shift;\n\n    return $self->{__PARENT__}{__NAME__};\n}\n\nsub get_controller_name {\n    my $self = shift;\n\n    return $self->{__PARENT__}{__PARENT__}->get_name();\n}\n\nsub get_table_name {\n    my $self   = shift;\n    my $lookup = shift;\n\n    my $controller = $self->get_controller_name();\n    return $lookup->{controllers}{$controller}{statements}{controls_table}[0];\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    my $output = [];\n\n    foreach my $child ( @{ $self->{'method_statement(s?)'} } ) {\n        my $child_output = $child->walk_postorder( $action, $data, $self );\n        push @{ $output }, @{ $child_output } if $child_output;\n    }\n\n    if ( $self->can( $action ) ) {\n        $output = $self->$action( $output, $data, $parent );\n    }\n\n    ( ref( $output ) =~ /ARRAY/ ) ? return $output : return;\n}\n\npackage # method_statement\n    method_statement;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub new {\n    my $class     = shift;\n    my $parent    = shift;\n    my $keyword   = shift;\n    my $new_value = shift;\n\n    my $self      = {\n        __PARENT__  => $parent,\n        __KEYWORD__ => $keyword,\n        __ARGS__    => arg_list->new( $new_value ),\n    };\n\n    return bless $self, $class;\n}\n\nsub change_method_keyword_value {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $self->{__KEYWORD__}     eq $data->{keyword} );\n\n    $self->{__ARGS__}->set_args_from(\n            $data->{new_value},\n            $data->{pair_required},\n    );\n\n    return [ 1 ];\n}\n\nsub get_method_keyword_value {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $self->{__KEYWORD__}     eq $data->{keyword} );\n\n    return $self->{__ARGS__};\n}\n\nsub app_block_hashes {\n    my $self         = shift;\n\n    return [ {\n        keyword     => $self->{__KEYWORD__},\n        values      => $self->{__ARGS__},\n    } ];\n}\n\nsub update_field_name {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    unless ( $self->{ __KEYWORD__ } eq 'cols'\n                or\n             $self->{ __KEYWORD__ } eq 'all_fields_but'\n                or\n             $self->{ __KEYWORD__ } eq 'fields' )\n    {\n        return;\n    }\n\n    my $we_did_something = 0;\n    foreach my $arg ( @{ $self->{ __ARGS__ } } ) {\n        if ( $arg eq $data->{ old_field_name } ) {\n            $arg = $data->{ new_field_name };\n            $we_did_something++;\n        }\n    }\n\n    if ( $we_did_something ) {\n        return [ $self->{ __KEYWORD__ }, $self->{ __ARGS__ } ];\n    }\n    else {\n        return;\n    }\n}\n\nsub remove_field {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    unless ( $self->{ __KEYWORD__ } eq 'cols'\n                or\n             $self->{ __KEYWORD__ } eq 'all_fields_but'\n                or\n             $self->{ __KEYWORD__ } eq 'fields' )\n    {\n        return;\n    }\n\n    # we need to remove the arg if it matches the name of the deceased field\n    my @new_args;\n\n    # first, build a list of remaining args\n    my $someone_died = 0;\n    ARG:\n    foreach my $arg ( @{ $self->{__ARGS__} } ) {\n        if ( $arg eq $data->{ dead_field_name } ) { $someone_died++; }\n        else                                      { push @new_args, $arg; }\n    }\n\n    return unless $someone_died;\n\n    # second, install them in the object\n    $self->{__ARGS__}->set_args_from( \\@new_args );\n\n    push @new_args, '';\n\n    # third, return them as a full list for the statement\n    return [ $self->{ __KEYWORD__ }, \\@new_args ];\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    if ( $self->can( $action ) ) {\n        return $self->$action( undef, $data, $parent );\n    }\n    else {\n        return;\n    }\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return [ $self->{__KEYWORD__} => $self->{__ARGS__} ];\n}\n\npackage # controller_literal_block\n    controller_literal_block;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub get_backend {\n    my $self = shift;\n\n    return $self->{__BACKEND__};\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    if ( $self->can( $action ) ) {\n        return $self->$action( undef, $data, $parent );\n    }\n    else {\n        return;\n    }\n}\n\nsub make_output {\n    my $self    = shift;\n    my $backend = shift;\n\n    if ( $backend eq $self->{__BACKEND__} ) {\n        my $output = $self->{__BODY__};\n\n        $output    =~ s/\\Z/\\n/ if ( $output !~ /\\s\\Z/ );\n\n        return [ $output ];\n    }\n    else {\n        return;\n    }\n}\n\npackage # controller_statement\n    controller_statement;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub new {\n    my $class   = shift;\n    my $parent  = shift;\n    my $keyword = shift;\n    my $values  = shift;\n\n    my $self    = {\n        __PARENT__  => $parent,\n        __KEYWORD__ => $keyword,\n        __ARGS__    => arg_list->new( $values ),\n    };\n\n    return bless $self, $class;\n}\n\nsub get_controller_ident {\n    my $self = shift;\n\n    return $self->{__PARENT__}{__IDENT__};\n}\n\nsub get_controller_name {\n    my $self = shift;\n\n    return $self->{__PARENT__}{__NAME__};\n}\n\nsub change_controller_keyword_value {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless ( $self->{__KEYWORD__} eq $data->{keyword} );\n\n    $self->{__ARGS__}->set_args_from(\n            $data->{new_value},\n            $data->{pair_required},\n    );\n\n    return [ 1 ];\n}\n\nsub app_block_hashes {\n    my $self         = shift;\n    my $child_output = shift;\n\n    return [ {\n        type    => 'statement',\n        keyword => $self->{__KEYWORD__},\n        value   => $self->{__ARGS__},\n    } ];\n}\n\nsub table_name_changed {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless $self->{ __KEYWORD__ } eq 'controls_table';\n\n    my $controlled_table = $self->{ __ARGS__ }->get_first_arg();\n\n    if ( $controlled_table eq $data->{ old_name } ) {\n        $self->{ __ARGS__ }->set_args_from( $data->{ new_name } );\n\n        return [\n            $self->get_controller_ident . '::controls_table',\n            $data->{ new_name }\n        ];\n    }\n\n    return;\n}\n\nsub field_name_changed {\n    my $self         = shift;\n    shift;\n    my $data         = shift;\n\n    return unless $self->{ __KEYWORD__ } eq 'controls_table';\n    return unless $self->{ __ARGS__ }->get_first_arg()\n                        eq\n                  $data->{ table_name };\n\n    # Leave this return value alone, an ancestor checks it to see if the\n    # name change is for this controller or not.\n    return [ 1 ];\n}\n\n# Yes, I know this is the same as the code above.  They are in different\n# walk stacks.\n\nsub field_removed {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return unless $self->{ __KEYWORD__ } eq 'controls_table';\n    return unless $self->{ __ARGS__ }->get_first_arg()\n                        eq\n                  $data->{ table_name };\n\n    # Leave this return value alone, an ancestor checks it to see if the\n    # name change is for this controller or not.\n    return [ 1 ];\n}\n\nsub do_I_control {\n    my $self  = shift;\n    shift;\n    my $table = shift;\n\n    return unless $self->{ __KEYWORD__ } eq 'controls_table';\n    my $controlled_table = $self->{ __ARGS__ }->get_first_arg();\n\n    if ( $controlled_table eq $table ) {\n        return [ 1 ];\n    }\n    else {\n        return;\n    }\n}\n\nsub output_location {\n    my $self         = shift;\n    my $child_output = shift;\n\n    return unless $self->{__KEYWORD__} eq 'location';\n\n    return $self->{__ARGS__};\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    if ( $self->can( $action ) ) {\n        return $self->$action( undef, $data, $parent );\n    }\n    else {\n        return;\n    }\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return [\n        {\n            '__TYPE__' => 'statements',\n            '__DATA__' => [\n                $self->{__KEYWORD__} => $self->{__ARGS__}\n            ]\n        }\n    ];\n}\n\npackage # app_config_block\n    app_config_block;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub new {\n    my $class  = shift;\n    my $params = shift;\n\n    return bless {\n        __IDENT__  => Bigtop::Parser->get_ident(),\n        __PARENT__ => $params->{parent},\n        __BODY__   => $params->{statements},\n        __TYPE__   => $params->{type},\n    }, $class;\n}\n\nsub new_block {\n    my $class  = shift;\n    my $parent = shift;\n    my $data   = shift;\n\n    return $class->new(\n        {\n            parent     => $parent,\n            statements => [],\n            type       => $data->{ name },\n        }\n    );\n}\n\nsub change_name_config {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless $self->{__IDENT__} eq $data->{ident};\n\n    $self->set_name( $data->{ new_value } );\n\n    return;\n}\n\nsub set_name {\n    my $self          = shift;\n    $self->{__TYPE__} = shift;\n}\n\nsub add_config_statement {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless $data->{ ident } eq $self->{__IDENT__};\n\n    my $new_statement = app_config_statement->new(\n        $data->{ keyword  },\n        $data->{ value    },\n        $data->{ accessor },\n        $self,\n    );\n\n    push @{ $self->{ __BODY__ } }, $new_statement;\n\n    return [ 1 ];\n}\n\nsub remove_config_statement {\n    my $self    = shift;\n    shift;\n    my $data    = shift;\n    my $ident   = $data->{ ident   };\n    my $keyword = $data->{ keyword };\n\n    return unless $self->{__IDENT__} eq $ident;\n\n    my $doomed_child = -1;\n    my $count        = 0;\n\n    STATEMENT:\n    foreach my $child ( @{ $self->{ __BODY__ } } ) {\n        my $child_keyword = $child->get_keyword();\n        if ( $keyword eq $child_keyword ) {\n            $doomed_child = $count;\n            last STATEMENT;\n        }\n        $count++;\n    }\n\n    if ( $doomed_child >= 0 ) {\n        splice @{ $self->{ __BODY__ } }, $doomed_child, 1;\n    }\n\n    return [ 1 ];\n}\n\nsub get_app_configs {\n    my $self         = shift;\n    my $child_output = shift;\n\n    my $type = $self->{__TYPE__} || 'base';\n\n    my %my_children;\n    foreach my $child ( @{ $child_output } ) {\n        $my_children{ $child->{ var } } = $child->{ val };\n    }\n\n    return [ { type => $type, statements => \\%my_children } ];\n}\n\nsub get_app_config_types {\n    my $self = shift;\n\n    my $type = $self->{__TYPE__} || 'base';\n\n    return [ $type ];\n}\n\nsub app_block_hashes {\n    my $self         = shift;\n    my $child_output = shift;\n\n    my @statements;\n\n    foreach my $child_item ( @{ $child_output } ) {\n        my $no_accessor = 0;\n        my $value       = $child_item->{ value };\n        if ( ref( $value ) eq 'HASH' ) {\n            ( $value, $no_accessor ) = %{ $value };\n        }\n\n        push @statements, {\n            keyword     => $child_item->{ keyword },\n            value       => $value,\n            no_accessor => $no_accessor,\n        };\n    }\n\n    return [ {\n        ident       => $self->{__IDENT__},\n        type        => 'config',\n        name        => $self->{__TYPE__} || 'base',\n        statements  => \\@statements,\n    } ];\n}\n\nsub get_ident {\n    my $self = shift;\n\n    return $self->{__IDENT__};\n}\n\nsub get_config_idents {\n    my $self       = shift;\n    shift;\n    my $block_name = shift;\n\n    if ( ( not defined $self->{__TYPE__} and $block_name eq 'base' )\n                or\n           $self->{__TYPE__} eq $block_name\n    ) {\n        return [ $self->{__IDENT__} ];\n    }\n    else {\n        return;\n    }\n}\n\nsub show_idents {\n    my $self         = shift;\n    my $child_output = shift;\n\n    push @{ $child_output },\n            [ 'config', $self->{ __NAME__ }, $self->{ __IDENT__ } ];\n\n    return $child_output;\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    my $output = [];\n\n    foreach my $child ( @{ $self->{ __BODY__ } } ) {\n        my $child_output = $child->walk_postorder( $action, $data, $self );\n        push @{ $output }, @{ $child_output } if $child_output;\n    }\n\n    if ( $self->can( $action ) ) {\n        $output = $self->$action( $output, $data, $parent );\n    }\n\n    ( ref( $output ) =~ /ARRAY/ ) ? return $output : return;\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return $child_output;\n}\n\npackage # controller_config_block\n    controller_config_block;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub new {\n    my $class  = shift;\n    my $parent = shift;\n    my $params = shift;\n\n    my $self   = {\n        __PARENT__ => $parent,\n        __IDENT__  => Bigtop::Parser->get_ident(),\n        __BODY__   => [],\n        __TYPE__   => $params->{ new_child }{ name },\n    };\n\n    return bless $self, $class;\n}\n\nsub change_name_controller_config {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless $self->get_ident  eq $data->{ident};\n\n    $self->{__TYPE__} = $data->{new_value};\n\n    return [ 1 ];\n}\n\nsub get_controller_name {\n    my $self = shift;\n\n    return $self->{__PARENT__}->get_name();\n}\n\nsub get_ident {\n    my $self = shift;\n\n    return $self->{__IDENT__};\n}\n\nsub get_controller_configs {\n    my $self         = shift;\n    my $child_output = shift;\n\n    my $type = $self->{__TYPE__} || 'base';\n\n    my %my_children;\n    foreach my $child ( @{ $child_output } ) {\n        $my_children{ $child->{ var } } = $child->{ val };\n    }\n\n    return [ { type => $type, statements => \\%my_children } ];\n}\n\nsub add_config_statement {\n    my $self = shift;\n    shift;\n    my $data = shift;\n\n    return unless $data->{ ident } eq $self->{__IDENT__};\n\n    my $new_statement = controller_config_statement->new(\n        $data->{ keyword  },\n        $data->{ value    },\n        $self,\n    );\n\n    push @{ $self->{__BODY__} }, $new_statement;\n\n    return [ 1 ];\n}\n\nsub remove_config_statement {\n    my $self    = shift;\n    shift;\n    my $data    = shift;\n    my $ident   = $data->{ ident   };\n    my $keyword = $data->{ keyword };\n\n    return unless $self->{__IDENT__} eq $ident;\n\n    my $doomed_child = -1;\n    my $count        = 0;\n\n    STATEMENT:\n    foreach my $child ( @{ $self->{__BODY__} } ) {\n        my $child_keyword = $child->get_keyword();\n        if ( $keyword eq $child_keyword ) {\n            $doomed_child = $count;\n            last STATEMENT;\n        }\n        $count++;\n    }\n\n    if ( $doomed_child >= 0 ) {\n        splice @{ $self->{__BODY__} }, $doomed_child, 1;\n    }\n\n    return [ 1 ];\n}\n\nsub app_block_hashes {\n    my $self         = shift;\n    my $child_output = shift;\n\n    my @statements;\n\n    foreach my $child_item ( @{ $child_output } ) {\n        my $no_accessor = 0;\n        my $value       = $child_item->{ value };\n        if ( ref( $value ) eq 'HASH' ) {\n            ( $value, $no_accessor ) = %{ $value };\n        }\n\n        push @statements, {\n            keyword     => $child_item->{ keyword },\n            value       => $value,\n            no_accessor => $no_accessor,\n        };\n    }\n\n    return [ {\n        ident       => $self->{__IDENT__},\n        type        => 'config',\n        name        => $self->{__TYPE__} || 'base',\n        statements  => \\@statements,\n    } ];\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    my $output = [];\n\n    foreach my $child ( @{ $self->{__BODY__} } ) {\n        my $child_output = $child->walk_postorder( $action, $data, $self );\n        push @{ $output }, @{ $child_output } if $child_output;\n    }\n\n    if ( $self->can( $action ) ) {\n        $output = $self->$action( $output, $data, $parent );\n    }\n\n    ( ref( $output ) =~ /ARRAY/ ) ? return $output : return;\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return $child_output;\n}\n\npackage # app_config_statement\n    app_config_statement;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub new {\n    my $class    = shift;\n    my $keyword  = shift;\n    my $value    = shift;\n    my $accessor = shift;\n    my $parent   = shift;\n\n    my $self = {\n        __PARENT__  => $parent,\n        __KEYWORD__ => $keyword,\n    };\n \n    if ( $accessor ) {\n        $self->{__ARGS__} = arg_list->new( [ { $value => 'no_accessor' } ] );\n    }\n    else {\n        $self->{__ARGS__} = arg_list->new( [ $value ] );\n    }\n\n    return bless $self, $class;\n}\n\nsub get_keyword {\n    my $self = shift;\n\n    return $self->{__KEYWORD__};\n}\n\nsub get_config_statements {\n    my $self = shift;\n\n    return [ $self->{__KEYWORD__} => $self->{__ARGS__} ];\n}\n\nsub update_config_statement {\n    my $self   = shift;\n    shift;\n    my $data   = shift;\n\n    return unless ( $data->{ ident } eq $self->{__PARENT__}->get_ident );\n\n    return [] unless ( $data->{ keyword } eq $self->{ __KEYWORD__ } );\n\n    my $arg = $self->{__ARGS__}->get_first_arg();\n\n    if ( ref( $arg ) eq 'HASH' ) {\n        my ( $value, $no_access ) = %{ $arg };\n\n        $self->{__ARGS__} = arg_list->new(\n            [ { $data->{value} => $no_access } ]\n        );\n    }\n    else {\n        $self->{__ARGS__} = arg_list->new(\n            [ $data->{value} ]\n        );\n    }\n\n    return [ 1 ];\n}\n\nsub get_config_value {\n    my $self    = shift;\n    shift;\n    my $data    = shift;\n\n    my $config_type_name = $data->{ config_type_name };\n    my $keyword          = $data->{ keyword };\n\n#    warn \"I want the config value for:\\n\";\n#    use Data::Dumper; warn Dumper( $data );\n#    warn 'my config type: ' . $self->get_config_type_name() . \"\\n\";\n#    warn \"my keyword: $self->{__KEYWORD__}\\n\";\n    \n    return [] unless ( $config_type_name eq $self->get_config_type_name() );\n    return [] unless ( $keyword eq $self->{ __KEYWORD__ } );\n\n    return $self->{__ARGS__};\n}\n\nsub config_statement_status {\n    my $self   = shift;\n    shift;\n    my $data   = shift;\n\n    return unless ( $data->{ ident } eq $self->{__PARENT__}->get_ident );\n\n    return [] unless ( $data->{ keyword } eq $self->{ __KEYWORD__ } );\n\n    my $arg = $self->{__ARGS__}->get_args();\n\n    if ( $data->{ value } ) { # add no_accessor flag\n        $self->{__ARGS__} = arg_list->new(\n            [ { $arg => 'no_accessor' } ]\n        );\n    }\n    else { # remove flag\n        $self->{__ARGS__} = arg_list->new(\n            [ $arg ]\n        );\n    }\n\n    return [];\n}\n\nsub get_app_configs {\n    my $self = shift;\n\n    my $var  = $self->{__KEYWORD__};\n    my $val  = $self->{__ARGS__}->get_first_arg;\n\n    if ( ref( $val ) eq 'HASH' ) {\n        ( $val ) = keys %{ $val };\n    }\n\n    return [ { var => $var, val => $val } ];\n}\n\nsub app_block_hashes {\n    my $self         = shift;\n\n    return [ {\n        keyword     => $self->{__KEYWORD__},\n        value       => $self->{__ARGS__}[0],\n    } ];\n}\n\nsub get_config_type_name {\n    my $self = shift;\n\n    return $self->{__PARENT__}{__TYPE__} || 'base';\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    if ( $self->can( $action ) ) {\n        return $self->$action( undef, $data, $parent );\n    }\n    else {\n        return;\n    }\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return [\n        {\n            '__TYPE__' => 'configs',\n            '__DATA__' => [\n                $self->{__KEYWORD__} => $self->{__ARGS__}\n            ]\n        }\n    ];\n}\n\npackage # controller_config_statement\n    controller_config_statement;\nuse strict; use warnings;\n\nuse base 'application_ancestor';\n\nsub new {\n    my $class    = shift;\n    my $keyword  = shift;\n    my $value    = shift;\n    my $parent   = shift;\n\n    my $self = {\n        __PARENT__  => $parent,\n        __KEYWORD__ => $keyword,\n    };\n \n    $self->{__ARGS__} = arg_list->new( [ $value ] );\n\n    return bless $self, $class;\n}\n\nsub get_keyword {\n    my $self = shift;\n\n    return $self->{__KEYWORD__};\n}\n\nsub get_controller_configs {\n    my $self = shift;\n\n    my $var  = $self->{__KEYWORD__};\n    my $val  = $self->{__ARGS__}->get_first_arg;\n\n    if ( ref( $val ) eq 'HASH' ) {\n        ( $val ) = keys %{ $val };\n    }\n\n    return [ { var => $var, val => $val } ];\n}\n\nsub app_block_hashes {\n    my $self         = shift;\n\n    return [ {\n        keyword     => $self->{__KEYWORD__},\n        value       => $self->{__ARGS__}[0],\n    } ];\n}\n\nsub update_config_statement {\n    my $self   = shift;\n    shift;\n    my $data   = shift;\n\n    return unless ( $data->{ ident } eq $self->{__PARENT__}->{__IDENT__} );\n\n    return [] unless ( $data->{ keyword } eq $self->{ __KEYWORD__ } );\n\n    my $arg = $self->{__ARGS__}->get_first_arg();\n\n    $self->{__ARGS__} = arg_list->new(\n        [ $data->{value} ]\n    );\n\n    return [ 1 ];\n}\n\nsub walk_postorder {\n    my $self   = shift;\n    my $action = shift;\n    my $data   = shift;\n    my $parent = shift;\n\n    if ( $self->can( $action ) ) {\n        return $self->$action( undef, $data, $parent );\n    }\n    else {\n        return;\n    }\n}\n\nsub build_lookup_hash {\n    my $self         = shift;\n    my $child_output = shift;\n    my $data         = shift;\n\n    return [\n        {\n            '__TYPE__' => 'configs',\n            '__DATA__' => [\n                $self->{__KEYWORD__} => $self->{__ARGS__}\n            ]\n        }\n    ];\n}\n\npackage # arg_list\n    arg_list;\nuse strict; use warnings;\n\nsub new {\n    my $class         = shift;\n    my $values        = shift;\n    my $pair_required = shift;\n\n    return bless build_values( $values, $pair_required ), $class;\n}\n\nsub build_values {\n    my $values        = shift;\n    my $pair_required = shift;\n\n    if ( ref( $values ) eq 'ARRAY' ) {\n        return $values;\n    }\n    elsif ( ref( $values ) eq 'HASH' ) {\n        my $value_str = $values->{ values } || '';\n        my @keys      = split /\\]\\[/, $values->{ keys   };\n        my @values    = split /\\]\\[/, $value_str;\n\n        my @retvals;\n\n        for ( my $i = 0; $i < @keys; $i++ ) {\n            if ( $pair_required ) {\n                my $push_value = defined ( $values[ $i ] )\n                               ? $values[ $i ]\n                               : '';\n\n                push @retvals, { $keys[ $i ] => $push_value };\n            }\n            elsif ( defined $pair_required ) {\n                if ( not defined $values[ $i ]\n                        or\n                     $values[ $i ] eq 'undefined'\n                        or\n                     not $values[ $i ]\n                ) {\n                    push @retvals, $keys[ $i ];\n                }\n                else {\n                     push @retvals, { $keys[ $i ] => $values[ $i ] };\n                }\n            }\n            else {\n                if ( defined $values[ $i ] and $values[ $i ] ne 'undefined' ) {\n                     push @retvals, { $keys[ $i ] => $values[ $i ] };\n                }\n                else {\n                    push @retvals, $keys[ $i ];\n                }\n            }\n        }\n\n        return \\@retvals;\n    }\n    else {\n        my @values = split /\\]\\[/, $values;\n\n        return \\@values;\n    }\n}\n\nsub get_first_arg {\n    my $self = shift;\n\n    return $self->[0];\n}\n\nsub get_args {\n    my $self = shift;\n\n    my @args;\n\n    foreach my $arg ( @{ $self } ) {\n        if ( ref( $arg ) =~ /HASH/ ) {\n            my ( $name, $condition ) = %{ $arg };\n            push @args, $name;\n        }\n        else {\n            push @args, $arg;\n        }\n    }\n\n    return join ', ', @args;\n}\n\nsub get_quoted_args {\n    my $self = shift;\n\n    my @args;\n\n    foreach my $arg ( @{ $self } ) {\n        if ( ref( $arg ) =~ /HASH/ ) {\n            my ( $name, $condition ) = %{ $arg };\n\n            unless ( $name =~ /^\\w[\\w\\d_]*$/ ) {\n                $name = \"`$name`\";\n            }\n\n            unless ( $condition =~ /^\\w[\\w\\d_]*$/ ) {\n                $condition = \"`$condition`\";\n            }\n\n            push @args, \"$name => $condition\";\n        }\n        else {\n            my $value = $arg;\n            if ( $value !~ /^\\w[\\w\\d_:]*$/ ) {\n                $value = \"`$value`\";\n            }\n            else {\n                my @value_pieces = split /::/, $value;\n                # if any of the pieces has a colon, quote the value\n                VALUE_PIECE:\n                foreach my $piece ( @value_pieces ) {\n                    if ( $piece =~ /:/ ) {\n                        $value = \"`$value`\";\n                        last VALUE_PIECE;\n                    }\n                }\n            }\n\n            push @args, $value;\n        }\n    }\n\n    return ( wantarray ) ? @args : join ', ', @args;\n}\n\nsub get_unquoted_args {\n    my $self = shift;\n\n    my @args;\n\n    foreach my $arg ( @{ $self } ) {\n        if ( ref( $arg ) =~ /HASH/ ) {\n            my ( $name, $condition ) = %{ $arg };\n\n            push @args, \"$name => $condition\";\n        }\n        else {\n            push @args, $arg;\n        }\n    }\n\n    return \\@args;\n}\n\nsub set_args_from {\n    my $self          = shift;\n    my $new_values    = shift;\n    my $pair_required = shift;\n\n    pop  @{ $self } while ( @{ $self } );\n\n    my $paired_values = build_values( $new_values, $pair_required );\n\n    push @{ $self }, @{ $paired_values };\n}\n\nsub one_hash {\n    my $self = shift;\n\n    my %args;\n\n    foreach my $arg ( @{ $self } ) {\n        if ( ref( $arg ) =~ /HASH/ ) {\n            my ( $key, $value ) = %{ $arg };\n            $args{ $key } = $value;\n        }\n        else {\n            $args{ $arg } = undef;\n        }\n    }\n\n    return \\%args;\n}\n\nsub unbless_args {\n    my $self = shift;\n\n    my @args;\n\n    foreach my $arg ( @{ $self } ) {\n        push @args, $arg;\n    }\n\n    return \\@args;\n}\n\n1;\n\n=head1 NAME\n\nBigtop::Parser - the Parse::RecDescent grammar driven parser for bigtop files\n\n=head1 SYNOPSIS\n\nMake a file like this:\n\n    config {\n        base_dir `/home/username`;\n        Type1 Backend {}\n        Type2 Backend {}\n        Type3 Backend {}\n    }\n    app App::Name {\n        table name { }\n        controller SomeController {}\n    }\n\nThen run this command:\n\n    bigtop my.bigtop all\n\n=head1 DESCRIPTION\n\nThis module is really only designed to be used by the bigtop and tentmaker\nscripts.  It provides access to the grammar which understands bigtop files\nand turns them into syntax trees.  It provides various utility functions\nfor bigtop, tentmaker, backends, and similar tools you might write.\n\nIf you just want to use bigtop, you should look in C<Bigtop::Docs::TOC>\nwhere all the docs are outlined.\n\nReading further is an indication that you are interested in working on Bigtop\nand not just in using it to serve your needs.\n\n=head1 METHODS\n\nIn this section, the methods are grouped, so that similar ones appear together.\n\n=head2 METHODS which drive generation for scripts\n\n=over 4\n\n=item gen_from_file\n\nThe bigtop script calls this method.\n\nReturns: the app name and the name of the build directory.\n\nYou can call this as a class method passing it the name of the bigtop\nfile to read and a list of the things to build.\n\nThe method is actually quite simple.  It merely reads the file, then\ncalls gen_from_string.\n\n=item gen_from_string\n\nThe bigtop script calls this method when --new is used.\n\nReturns: the app name and the name of the build directory.\n\nThis method orchestrates the build.  It is called internally by gen_from_file.\nCall it as a class method.  Pass it a hash with these keys:\n\n    bigtop_string => the bigtop source code\n    bigtop_file   => the name of the bigtop file, if you know it\n    create        => are you in create mode? if so make this true\n    build_list    => [ what to build ]\n    flags         => command line args given to your script\n\nbigtop_file is used by Bigtop::Init::Std to copy the bigtop file from\nits original location into the docs subdirectory of the build directory.\nIf the file name is not defined, it skips that step.\n\nIf you set create to any true value, you will be in create mode and bigtop\nwill make the build directory as a subdirectory of the current directory.\nOtherwise, it will make sure you are in a directory which looks like a build\ndirectory before building.\n\nThe list of things to build can include any backend type listed in the\nconfig block and/or the word 'all'.  'all' will be replaced with a list\nof all the backend types in the config section (in the order they appear\nthere), as if they had been passed in.\n\nIt is legal to mention the same backend more than once.  For instance, you\ncould call gen_from_string directly\n\n    Bigtop::Parser->gen_from_string(\n        {\n            bigtop_string => $bigtop_string,\n            bigtop_file   => 'file.bigtop',\n            create        => $create,\n            build_list    => [ 'Init', 'Control', 'Init' ]\n        }\n    );\n\nor equivalently, and more typically, you could call gen_from_file:\n\n    Bigtop::Parser->gen_from_file(\n        'file.bigtop', $create, 'Init', 'Control', 'Init'\n    );\n\nEither of these might be useful, if the first Init sets up directories that\nthe Control backend needs, but the generated output from Control should\ninfluence the contents of file which Init finally builds.  Check your backends\nfor details.\n\nThe flags are given to Init Std as text, so they may be preserved for\nposterity in the Changes file.\n\ngen_from_string internals\n\ngen_from_string works like this.  First, it attempts to parse the config\nsection of the bigtop string.  If that works, it iterates through each\nbackend mentioned there building a list of modules to require.  This\nincludes looking in backend blocks for template statements.  Their values\nmust be template files relative to the directory from which bigtop\nwas invoked.\n\nOnce the list is built, it calls its own import method to require them.\nThis allows each backend to register its keywords.  If any keyword\nused in the app section is not registered, a fatal parse error results.\n\nOnce the backends are all required, gen_from_string parses the whole\nbigtop string into an abstract syntax tree (AST).  Then it iterates\nthrough the build list calling gen_Type on each element's backend.\nSo this:\n\n    config {\n        Init Std      {}\n        SQL  Postgres { template `postgres.tt`; }\n    }\n    app ...\n\n    Bigtop::Parser->gen_from_string(\n            $bigtop_string, 'file.bigtop', 'Init', 'SQL'\n    );\n\nResults first in the loading of Bigtop::Init::Std and Bigtop::SQL::Postgres,\nthen in calling gen_Init on Init::Std and gen_SQL on SQL::Postgres.  During\nthe loading, setup_template is called with postgres.tt on SQL::Postgres.\n\ngen_* methods are called as class methods.  They receive the build directory,\nthe AST, and the name of the bigtop_file (which could be undef).\nBackends can do whatever they like from there.  Typically, they put\nfiles onto the disk.  Those files might be web server conf files,\nsql to build the database, control modules, templates for viewing, models,\netc.\n\n=back\n\n=head2 METHODS which invoke the grammar\n\n=over 4\n\n=item parse_config_string\n\nCalled as a class method (usually by gen_from_string), this method receives\nthe bigtop input as a string.  It attempts to parse only the config section\nwhich it returns as an AST.  Syntax errors in the config section are\nfatal.  Errors in the app section are not noticed.\n\n=item parse_file\n\nCall this as a class method, passing it the file name to read.  It reads\nthe file into memory, then calls parse_string, returning whatever it\nreturns.\n\n=item parse_string\n\nCall this as a class method, passing it the bigtop string to parse.\nIt calls the grammar to turn the input into an AST, which it returns.\n\n=back\n\n=head2 METHODS which control which simple statement keywords are legal\n\n=over 4\n\n=item add_valid_keywords\n\nThe grammar of a bigtop file is structured, but the legal keywords in\nits simple statements are defined by the backends (excepts that the config\nkeywords are defined by this module, see Config Keywords below for those).\n\nAcutally, all the keywords that any module will use should be defined\nin C<Bigtop::Keywords> so tentmaker can display them.  Then the backend\n(or its type) should pull the keyword definitions it wants from\nC<Bigtop::Keywords>.\n\nIf you are writing a backend, you should use the base module for your\nbackend type.  This will register the standard keywords for that type.\nFor example, suppose you are writing Bigtop::Backend::SQL::neWdB.  It\nshould be enough to say:\n\n    use Bigtop::SQL;\n\nin your module.\n\nIf you need to add additional keywords that are specific to your backend,\nput them in a begin block like this:\n\n    BEGIN {\n        Bigtop::Parser->add_valid_keywords(\n            Bigtop::Keywords->get_docs_for(\n                $type,\n                qw( your keywords here),\n            )\n        );\n    }\n\nHere $type is the name of the surrounding block in which this keyword \nwill make a valid statement.  For example, if $type above is 'app' then\nthis would be legal:\n\n    app App::Name {\n        your value;\n    }\n\nThe type must be one of these levels:\n\n=over 4\n\n=item config\n\n=item app\n\n=item app_literal\n\n=item table\n\n=item join_table\n\n=item field\n\n=item controller\n\n=item controller_literal\n\n=item method\n\n=back\n\nThese correspond to the block types in the grammar.  Note, that there\nare also sequence blocks, but they are deprecated and never allowed statements.\nFurther, the various literals are blocks in the grammar (they have block\nidents and can have defined keywords), but they don't have brace delimiters.\nInstead, they have a single backquoted string.\n\n=item is_valid_keyword\n\nCall this as a class method, passing it a type of keyword and a word that\nmight be a valid keyword of that type.\n\nReturns true if the keyword is valid, false otherwise.\n\n=item get_valid_keywords\n\nCall this as a class method passing it the type of keywords you want.\n\nReturns a list of all registered keywords, of the requested type, in\nstring sorted order.\n\nThe two preceding methogs are really for internal use in the grammar.\n\n=back\n\n=head2 METHODS which work on the AST\n\nThere are quite a few other methods not documented here (shame on me).\nMost of those support tentmaker manipulations of the tree, but there\nare also some convenience accessors.\n\n=over 4\n\n=item walk_postorder\n\nWalks the AST for you, calling you back when it's time to build something.\n\nThe most common skeleton for gen_Backend is:\n\n    use Bigtop;\n    use Bigtop::Backend;\n\n    sub gen_Backend {\n        my $class     = shift;\n        my $build_dir = shift;\n        my $tree      = shift;\n\n        # walk the tree\n        my $something     = $tree->walk_postoder( 'output_something' );\n        my $something_str = join '', @{ $something };\n\n        # write the file\n        Bigtop::write_file( $build_dir, $something_string );\n    }\n\nThis walks the tree from the root.  The walking is postorder meaning that\nall children are visited before the current node.  Each walk_postorder\nreturns an array reference (which is why we have to join the result\nin the above skeleton).  After the children have been visited, the\ncallback (C<output_something> in the example) is called with their output\narray reference.  You can also pass an additional scalar (which is usually\na hash reference) to walk_postorder.  It will be passed along to all\nthe child walk_postorders and to the callbacks.\n\nWith this module walking the tree, all you must do is provide the appropriate\ncallbacks.  Put one at each level of the tree that interests you.\n\nFor example, if you are generating SQL, you need to put callbacks in\nat least the following packages:\n\n    table_block\n    table_element_block\n    field_statement\n\nThis does require some knowledge of the tree.  Please consult bigtop.grammar,\nin the lib/Bigtop subdirectory of Bigtop's build directory,\nfor the possible packages (or grep for package on this file).\nThere are also several chapters of the Gantry book devoted to explaining\nhow to use the AST to build backends.\n\nThe callbacks are called as methods on the current tree node.  They receive\nthe output array reference from their children and the data scalar that\nwas passed to walk_postorder (if one was passed in the top level call).\nSo, a typical callback method might look like this:\n\n    sub output_something {\n        my $self         = shift;\n        my $child_output = shift;\n        my $data         = shift;\n        ...\n        return [ $output ];\n    }\n\nRemember that they must return an array reference.  If you need something\nfancy, you might do this:\n\n    return [ [ type1_output => $toutput, type2_output => $other_out ] ];\n\nThen the parent package's callback will receive that and must tease\napart the the two types.  Note that I have nested arrays here.  This prevents\ntwo children from overwriting each other's output if you are ever tempted\nto try saving the return list directly to a hash (think recursion).\n\n(walk_postorder also passes the current node to each child after the\ndata scalar.  This is the child's parent, which is really only useful\nduring parent building inside the grammar.  The parent comes\nafter the data scalar in both walk_postorder and in the callback.\nMost backends will just peek in $self->{__PARENT__} which is gauranteed\nto have the parent once the grammar finishes with the AST.)\n\n=item set_parent\n\nThis method is the callback used by the grammar to make sure that all nodes\nknow who their daddy is.  You shouldn't call it, but looking at it shows\nwhat the simplest callback might look like.  Note that there is only one\nof these and it lives in the application_ancestor package, which is not\none of the packages defined in the grammar.  But, this module makes\nsure that all the grammar defined packages inherit from it.\n\n=item build_lookup_hash\n\nThis method builds the lookup hash you can use to find data about other\nparts of the tree, without walking to it.\n\nThe AST actually has three keys: configuration, application, and lookup.\nThe first two are built in the normal way from the input file.  They\nare genuine ASTs in their own right.  The lookup key is not.  It does\nnot preserve order.  But it does make it easier to retrieve things.\n\nFor example, suppose that you are in the method_body package attempting\nto verify that requested fields for this method are defined in the\ntable for this controller.  You could walk the tree, but the lookup hash\nmakes it easier:\n\n    unless (\n        defined $tree->{lookup}{tables}{$table_name}{fields}{$field_name}\n    ) {\n        die \"No such column $field_name\\n\";\n    }\n\nThe easiest way to know what is available is to dump the lookup hash.\nBut the pattern is basically this.  At the top level there are fixed keywords\nfor the app level block types: tables, sequences, controllers.  The next\nlevel is the name of a block.  Under that, there is a fixed keyword for\neach subblock type, etc.\n\n=back\n\n=head2 METHODS for use in walk_postorder callbacks\n\n=over 4\n\n=item dumpme\n\nUse this method instead of directly calling Data::Dumper::Dump.\n\nWhile you could dump $self, that's rather messy.  The problem is the parent\nnodes.  Their presence means a simple dump will always show the whole app\nAST.  This method carefully removes the parent, dumps the node, and restores\nthe parent, reducing clutter and leaving everything in tact.  The closer\nto a leaf you get, the better it works.\n\n=item get_appname\n\nCall this on the full AST.  It returns the name of the application.\n\n=item get_config\n\nCall this on the full AST.  It returns the config subtree.\n\n=item get_controller_name\n\nCall this, from the method_body package, on the AST node ($self in the\ncallback).  Returns the name of the controller for this method.  This\nis useful for error reporting.\n\n=item get_method_name\n\nCall this, from the method_body package, on the AST node ($self in the\ncallback).  Returns the name of this method.  Useful for error reporting.\n\n=item get_name\n\nWhile this should work everywhere, it doesn't.  Some packages have it.\nIf yours does, call it.  Otherwise peek in $self->{__NAME__}.  But,\nremember that not everything has a name.\n\n=item get_table_name\n\nCall this, from the method_body package, on the AST node ($self in the\ncallback).  Returns the name of the table this controller controls.\nUseful for error reporting.\n\n=back\n\n=head2 METHODS used internally\n\n=over 4\n\n=item import\n\nYou probably don't need to call this.  But, if you do, pass it a list\nof backends to import like this:\n\n    use Bigtop::Parser qw( Type=Backend=template.tt );\n\nThis will load Bigtop::Type::Backend and tell it to use template.tt.\nYou can accomplish the same thing by directly calling import as a class\nmethod:\n\n    Bigtop::Parser->import( 'Type=Backend=template.tt' );\n\n=item fatal_error_two_lines\n\nThis method is used by the grammar to report fatal parse error in the input.\nIt actually gives 50 characters of trailing context, not two lines, but\nthe name stuck.\n\n=item fatal_keyword_error\n\nThis method is used by the grammer to report on unregistered (often misspelled)\nkeywords.  It identifies the offending keyword and the line where it appeared\nin the input, gives the remainder of the line on which it was seen (which\nis sometimes only whitespace), and lists the legal choices (often wrapping\nthem in an ugly fashion).\n\n=back\n\n=head1 Config KEYWORDS\n\nFor simplicity, all config keywords are requested from C<Bigtop::Keywords>\nin this module.  This is not necessarily ideal and is subject to change.\n\n=over 4\n\n=item base_dir\n\nUsed only if you supply the --create flag to bigtop (or set create to true\nwhen calling gen_from_file or gen_from_string as class methods of this\nmodule).\n\nWhen in create mode, the build directory will be made as a subdirectory\nof the base_dir.  For instance, I could use my home directory:\n\n    base_dir `/home/username`;\n\nNote that you need the backquotes to hide the slashes.  Also note, that\nyou should use a path which looks good on your development system.  In\nparticular, this would work on the appropriate platform:\n\n    base_dir `C:\\path\\to\\build`;\n\nThe default base_dir is the current directory from which bigtop is run.\n\n=item app_dir\n\nUsed only if you supply the --create flag to bigtop (or set create to true\nwhen calling gen_from_file or gen_from_string as class methods of this\nmodule).\n\nWhen in create mode, the actual generated files will be placed into\nbase_dir/app_dir (where the slash is correctly replaced with your OS\npath separator).  If you are in create mode, but don't supply an app_dir,\na default is formed from the app name in the manner h2xs would use.\nConsider:\n\n    config {\n        base_dir `/home/username`;\n    }\n    app App::Name {\n    }\n\nIn this case the app_dir is App-Name.  So the build directory is\n\n    /home/username/App-Name\n\nBy specifying your own app_dir statement, you have complete control\nof where the app is initially built.  For example:\n\n    config {\n        base_dir `/home/username`;\n        app_dir  `myappdir`;\n    }\n    app App::Name { }\n\nWill build in /home/username/myappdir.\n\nWhen not using create mode, all files will be built under the current\ndirectory.  If that directory doesn't look like an app build directory,\na fatal error will result.  Either move to the proper directory, or\nuse create mode to avoid the error.\n\n=item engine\n\nThis is passed directly to the C<use Framework;> statement of the top level\ncontroller.\n\nThus,\n\n    engine MP13;\n\nbecomes something like this:\n\n    use Framework qw/ engine=MP13 /;\n\nin the base level controller.  Both Catalyst and Gantry expect this\nsyntax.\n\nThe available engines depend on what the framework supports.  The one\nin the example is mod_perl 1.3 in the syntax of Catalyst and Gantry.\n\n=item template_engine\n\nSimilar to engine, this specifies the template engine.  Choices almost always\ninclude TT, but might also include Mason or other templaters depending on\nwhat your framework supports..\n\n=back\n\n=head1 Other KEYWORDS\n\n=over 4\n\n=item literal\n\nThis keyword applies to many backends at the app level and at some other\nlevels.  This keyword is special, because it expects a type keyword\nimmediately before its values.  For example:\n\n    literal SQL `CREATE...`;\n\nIt always instructs someone (the backend of type SQL in the example) to\ndirectly insert the backquoted string into its output, without so much as\nadjusting whitespace.\n\nBackend types that should obey this statement are:\n\n    SQL      - for backends of type SQL\n    Location - for backends constructing apache confs or the like\n\nThe literal Location statement may also be used at the controller level.\n\n=item no_gen\n\nApplies to backend blocks in the config block, app blocks, controller\nblocks, and method blocks.\n\ngen_from_string enforces the app level no_gen.  If it has a true value\nonly a warning is printed, nothing is generated.  None of the backends\nare called.\n\ngen_from_string also enforces no_gen on entire backends, if their config\nblock has a true no_gen value.\n\nThe Control backend of your choice is responsible for enforcing no_gen\nat the controller and method levels.\n\n=item not_for\n\nApplies to tables and fields (although the latter only worked for Models\nat the time of this writing).\n\nEach backend is responsible for enforcing not_for.  It should mean\nthat the field or table is ignored by the named backend type.  Thus\n\n    table skip_model {\n        not_for Model;\n    }\n\nshould generate as normal in SQL backends, but should be completely\nignored for Models.  The same should hold for fields marked not_for.\nBut my SQL backends didn't do that when I wrote this, only the Models\nworked.\n\n=back\n\n=head1 METHODS\n\n=over 4\n\n=item get_keyword_docs\n\nCalled by TentMaker, so it can display the backend comments to the user\nthrough their browser.\n\nReturns: a hash reference of keyword docs understood by tentmaker's\ntemplates.\n\n=item gen_mode\n\nUsed internally.\n\nGet accessor for whether we are really generating, or just serving tentmaker.\nIf we are not generating, there is no need to set up the templates for\nall the backends.\n\n=item set_gen_mode\n\nUsed internally.\n\nSet accessor for whether we are really generating.\n\n=item get_ident\n\nReturns: the next available ident (as ident_n).\n\n=item get_parser\n\nUsed internally.\n\nAccessor to ensure that only one parser is ever instantiated.\n\n=item load_backends\n\nUsed internally.\n\nResponsible for loading all needed backends.\n\n=item preprocess\n\nUsed internally.\n\nStrips comment lines.\n\nReturns: a hash keyed by line number, storing the comment on that line\nbefore it was stripped..\n\n=back\n\n=head1 AUTHOR\n\nPhil Crow <crow.phil@gmail.com>\n\n=head1 COPYRIGHT and LICENSE\n\nCopyright (C) 2005-7 by Phil Crow\n\nThis library is free software; you can redistribute it and/or modify\nit under the same terms as Perl itself, either Perl version 5.8.6 or,\nat your option, any later version of Perl 5 you may have available.\n\n=cut\n",
      "file" : "/var/tmp/arv_XvsJqn/Bigtop-0.38/lib/Bigtop/Parser.pm",
      "package" : "Bigtop::Parser"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub new { my $self = bless( {\n                 '_AUTOTREE' => {\n                                  'TERMINAL' => bless( {\n                                                         'lookahead' => 0,\n                                                         'line' => -1,\n                                                         'code' => '{bless {__VALUE__=>$item[1]}, $item[0]}'\n                                                       }, 'Parse::RecDescent::Action' ),\n                                  'NODE' => bless( {\n                                                     'lookahead' => 0,\n                                                     'line' => -1,\n                                                     'code' => '{bless \\\\%item, $item[0]}'\n                                                   }, 'Parse::RecDescent::Action' )\n                                },\n                 'localvars' => '',\n                 'startcode' => '',\n                 '_check' => {\n                               'thisoffset' => '',\n                               'itempos' => '',\n                               'prevoffset' => '',\n                               'prevline' => '',\n                               'prevcolumn' => '',\n                               'thiscolumn' => ''\n                             },\n                 'namespace' => 'Parse::RecDescent::Bigtop::Grammar',\n                 '_AUTOACTION' => undef,\n                 'rules' => {\n                              'method_type' => bless( {\n                                                        'impcount' => 0,\n                                                        'calls' => [\n                                                                     'IDENT'\n                                                                   ],\n                                                        'changed' => 0,\n                                                        'opcount' => 0,\n                                                        'prods' => [\n                                                                     bless( {\n                                                                              'number' => '0',\n                                                                              'strcount' => 1,\n                                                                              'dircount' => 0,\n                                                                              'uncommit' => undef,\n                                                                              'error' => undef,\n                                                                              'patcount' => 0,\n                                                                              'actcount' => 1,\n                                                                              'items' => [\n                                                                                           bless( {\n                                                                                                    'pattern' => 'is',\n                                                                                                    'hashname' => '__STRING1__',\n                                                                                                    'description' => '\\'is\\'',\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 200\n                                                                                                  }, 'Parse::RecDescent::Literal' ),\n                                                                                           bless( {\n                                                                                                    'subrule' => 'IDENT',\n                                                                                                    'matchrule' => 0,\n                                                                                                    'implicit' => undef,\n                                                                                                    'argcode' => undef,\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 200\n                                                                                                  }, 'Parse::RecDescent::Subrule' ),\n                                                                                           bless( {\n                                                                                                    'hashname' => '__ACTION1__',\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 200,\n                                                                                                    'code' => '{ $item{IDENT} }'\n                                                                                                  }, 'Parse::RecDescent::Action' )\n                                                                                         ],\n                                                                              'line' => undef\n                                                                            }, 'Parse::RecDescent::Production' )\n                                                                   ],\n                                                        'name' => 'method_type',\n                                                        'vars' => '',\n                                                        'line' => 200\n                                                      }, 'Parse::RecDescent::Rule' ),\n                              'join_table_statement' => bless( {\n                                                                 'impcount' => 0,\n                                                                 'calls' => [\n                                                                              'IDENT',\n                                                                              'field_body',\n                                                                              'keyword',\n                                                                              'arg_list',\n                                                                              'SEMI_COLON'\n                                                                            ],\n                                                                 'changed' => 0,\n                                                                 'opcount' => 0,\n                                                                 'prods' => [\n                                                                              bless( {\n                                                                                       'number' => '0',\n                                                                                       'strcount' => 3,\n                                                                                       'dircount' => 1,\n                                                                                       'uncommit' => undef,\n                                                                                       'error' => undef,\n                                                                                       'patcount' => 0,\n                                                                                       'actcount' => 1,\n                                                                                       'items' => [\n                                                                                                    bless( {\n                                                                                                             'pattern' => 'field',\n                                                                                                             'hashname' => '__STRING1__',\n                                                                                                             'description' => '\\'field\\'',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 313\n                                                                                                           }, 'Parse::RecDescent::Literal' ),\n                                                                                                    bless( {\n                                                                                                             'hashname' => '__DIRECTIVE1__',\n                                                                                                             'name' => '<commit>',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 313,\n                                                                                                             'code' => '$commit = 1'\n                                                                                                           }, 'Parse::RecDescent::Directive' ),\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'IDENT',\n                                                                                                             'matchrule' => 0,\n                                                                                                             'implicit' => undef,\n                                                                                                             'argcode' => undef,\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 313\n                                                                                                           }, 'Parse::RecDescent::Subrule' ),\n                                                                                                    bless( {\n                                                                                                             'pattern' => '{',\n                                                                                                             'hashname' => '__STRING2__',\n                                                                                                             'description' => '\\'\\\\{\\'',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 313\n                                                                                                           }, 'Parse::RecDescent::Literal' ),\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'field_body',\n                                                                                                             'matchrule' => 0,\n                                                                                                             'implicit' => undef,\n                                                                                                             'argcode' => undef,\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 313\n                                                                                                           }, 'Parse::RecDescent::Subrule' ),\n                                                                                                    bless( {\n                                                                                                             'pattern' => '}',\n                                                                                                             'hashname' => '__STRING3__',\n                                                                                                             'description' => '\\'\\\\}\\'',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 313\n                                                                                                           }, 'Parse::RecDescent::Literal' ),\n                                                                                                    bless( {\n                                                                                                             'hashname' => '__ACTION1__',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 313,\n                                                                                                             'code' => '{\n                           bless {\n                               __IDENT__ => Bigtop::Parser->get_ident(),\n                               __TYPE__  => \\'field\\',\n                               __NAME__  => $item{IDENT},\n                               __BODY__  =>\n                                    $item{field_body}{\\'field_statement(s?)\\'},\n                           }, \\'table_element_block\\'\n                       }'\n                                                                                                           }, 'Parse::RecDescent::Action' )\n                                                                                                  ],\n                                                                                       'line' => undef\n                                                                                     }, 'Parse::RecDescent::Production' ),\n                                                                              bless( {\n                                                                                       'number' => '1',\n                                                                                       'strcount' => 0,\n                                                                                       'dircount' => 0,\n                                                                                       'uncommit' => undef,\n                                                                                       'error' => undef,\n                                                                                       'patcount' => 0,\n                                                                                       'actcount' => 1,\n                                                                                       'items' => [\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'keyword',\n                                                                                                             'matchrule' => 0,\n                                                                                                             'implicit' => undef,\n                                                                                                             'argcode' => '[\\'join_table\\']',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 323\n                                                                                                           }, 'Parse::RecDescent::Subrule' ),\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'arg_list',\n                                                                                                             'matchrule' => 0,\n                                                                                                             'implicit' => undef,\n                                                                                                             'argcode' => undef,\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 323\n                                                                                                           }, 'Parse::RecDescent::Subrule' ),\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'SEMI_COLON',\n                                                                                                             'matchrule' => 0,\n                                                                                                             'implicit' => undef,\n                                                                                                             'argcode' => undef,\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 323\n                                                                                                           }, 'Parse::RecDescent::Subrule' ),\n                                                                                                    bless( {\n                                                                                                             'hashname' => '__ACTION1__',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 323,\n                                                                                                             'code' => '{\n                      bless {\n                          __KEYWORD__ => $item[1], __DEF__ => $item[2]\n                      }, \\'join_table_statement\\'\n                  }'\n                                                                                                           }, 'Parse::RecDescent::Action' )\n                                                                                                  ],\n                                                                                       'line' => 323\n                                                                                     }, 'Parse::RecDescent::Production' )\n                                                                            ],\n                                                                 'name' => 'join_table_statement',\n                                                                 'vars' => '',\n                                                                 'line' => 313\n                                                               }, 'Parse::RecDescent::Rule' ),\n                              'backend_body' => bless( {\n                                                         'impcount' => 0,\n                                                         'calls' => [\n                                                                      'backend_statement'\n                                                                    ],\n                                                         'changed' => 0,\n                                                         'opcount' => 0,\n                                                         'prods' => [\n                                                                      bless( {\n                                                                               'number' => '0',\n                                                                               'strcount' => 0,\n                                                                               'dircount' => 0,\n                                                                               'uncommit' => undef,\n                                                                               'error' => undef,\n                                                                               'patcount' => 0,\n                                                                               'actcount' => 1,\n                                                                               'items' => [\n                                                                                            bless( {\n                                                                                                     'subrule' => 'backend_statement',\n                                                                                                     'expected' => undef,\n                                                                                                     'min' => 0,\n                                                                                                     'argcode' => undef,\n                                                                                                     'max' => 100000000,\n                                                                                                     'matchrule' => 0,\n                                                                                                     'repspec' => 's?',\n                                                                                                     'lookahead' => 0,\n                                                                                                     'line' => 49\n                                                                                                   }, 'Parse::RecDescent::Repetition' ),\n                                                                                            bless( {\n                                                                                                     'hashname' => '__ACTION1__',\n                                                                                                     'lookahead' => 0,\n                                                                                                     'line' => 49,\n                                                                                                     'code' => '{\n    my %config;\n    foreach my $statement ( @{ $item{\\'backend_statement(s?)\\'} } ) {\n        $config{ $statement->[0] } = $statement->[1];\n    }\n    $return = \\\\%config;\n}'\n                                                                                                   }, 'Parse::RecDescent::Action' )\n                                                                                          ],\n                                                                               'line' => undef\n                                                                             }, 'Parse::RecDescent::Production' )\n                                                                    ],\n                                                         'name' => 'backend_body',\n                                                         'vars' => '',\n                                                         'line' => 49\n                                                       }, 'Parse::RecDescent::Rule' ),\n                              'arg' => bless( {\n                                                'impcount' => 0,\n                                                'calls' => [\n                                                             'arg_element'\n                                                           ],\n                                                'changed' => 0,\n                                                'opcount' => 0,\n                                                'prods' => [\n                                                             bless( {\n                                                                      'number' => '0',\n                                                                      'strcount' => 1,\n                                                                      'dircount' => 0,\n                                                                      'uncommit' => undef,\n                                                                      'error' => undef,\n                                                                      'patcount' => 0,\n                                                                      'actcount' => 1,\n                                                                      'items' => [\n                                                                                   bless( {\n                                                                                            'subrule' => 'arg_element',\n                                                                                            'matchrule' => 0,\n                                                                                            'implicit' => undef,\n                                                                                            'argcode' => undef,\n                                                                                            'lookahead' => 0,\n                                                                                            'line' => 380\n                                                                                          }, 'Parse::RecDescent::Subrule' ),\n                                                                                   bless( {\n                                                                                            'pattern' => '=>',\n                                                                                            'hashname' => '__STRING1__',\n                                                                                            'description' => '\\'=>\\'',\n                                                                                            'lookahead' => 0,\n                                                                                            'line' => 380\n                                                                                          }, 'Parse::RecDescent::Literal' ),\n                                                                                   bless( {\n                                                                                            'subrule' => 'arg_element',\n                                                                                            'matchrule' => 0,\n                                                                                            'implicit' => undef,\n                                                                                            'argcode' => undef,\n                                                                                            'lookahead' => 0,\n                                                                                            'line' => 380\n                                                                                          }, 'Parse::RecDescent::Subrule' ),\n                                                                                   bless( {\n                                                                                            'hashname' => '__ACTION1__',\n                                                                                            'lookahead' => 0,\n                                                                                            'line' => 380,\n                                                                                            'code' => '{ $return = { $item[1] => $item[3] } }'\n                                                                                          }, 'Parse::RecDescent::Action' )\n                                                                                 ],\n                                                                      'line' => undef\n                                                                    }, 'Parse::RecDescent::Production' ),\n                                                             bless( {\n                                                                      'number' => '1',\n                                                                      'strcount' => 0,\n                                                                      'dircount' => 0,\n                                                                      'uncommit' => undef,\n                                                                      'error' => undef,\n                                                                      'patcount' => 0,\n                                                                      'actcount' => 1,\n                                                                      'items' => [\n                                                                                   bless( {\n                                                                                            'subrule' => 'arg_element',\n                                                                                            'matchrule' => 0,\n                                                                                            'implicit' => undef,\n                                                                                            'argcode' => undef,\n                                                                                            'lookahead' => 0,\n                                                                                            'line' => 381\n                                                                                          }, 'Parse::RecDescent::Subrule' ),\n                                                                                   bless( {\n                                                                                            'hashname' => '__ACTION1__',\n                                                                                            'lookahead' => 0,\n                                                                                            'line' => 381,\n                                                                                            'code' => '{ $item[1] }'\n                                                                                          }, 'Parse::RecDescent::Action' )\n                                                                                 ],\n                                                                      'line' => 381\n                                                                    }, 'Parse::RecDescent::Production' )\n                                                           ],\n                                                'name' => 'arg',\n                                                'vars' => '',\n                                                'line' => 380\n                                              }, 'Parse::RecDescent::Rule' ),\n                              'IDENT' => bless( {\n                                                  'impcount' => 0,\n                                                  'calls' => [],\n                                                  'changed' => 0,\n                                                  'opcount' => 0,\n                                                  'prods' => [\n                                                               bless( {\n                                                                        'number' => '0',\n                                                                        'strcount' => 0,\n                                                                        'dircount' => 0,\n                                                                        'uncommit' => undef,\n                                                                        'error' => undef,\n                                                                        'patcount' => 1,\n                                                                        'actcount' => 1,\n                                                                        'items' => [\n                                                                                     bless( {\n                                                                                              'pattern' => '^\\\\w[\\\\w\\\\d_]*',\n                                                                                              'hashname' => '__PATTERN1__',\n                                                                                              'description' => '/^\\\\\\\\w[\\\\\\\\w\\\\\\\\d_]*/',\n                                                                                              'lookahead' => 0,\n                                                                                              'rdelim' => '/',\n                                                                                              'line' => 418,\n                                                                                              'mod' => '',\n                                                                                              'ldelim' => '/'\n                                                                                            }, 'Parse::RecDescent::Token' ),\n                                                                                     bless( {\n                                                                                              'hashname' => '__ACTION1__',\n                                                                                              'lookahead' => 0,\n                                                                                              'line' => 418,\n                                                                                              'code' => '{ $item[1] }'\n                                                                                            }, 'Parse::RecDescent::Action' )\n                                                                                   ],\n                                                                        'line' => undef\n                                                                      }, 'Parse::RecDescent::Production' )\n                                                             ],\n                                                  'name' => 'IDENT',\n                                                  'vars' => '',\n                                                  'line' => 418\n                                                }, 'Parse::RecDescent::Rule' ),\n                              'string' => bless( {\n                                                   'impcount' => 0,\n                                                   'calls' => [\n                                                                'BACKTICK',\n                                                                'text'\n                                                              ],\n                                                   'changed' => 0,\n                                                   'opcount' => 0,\n                                                   'prods' => [\n                                                                bless( {\n                                                                         'number' => '0',\n                                                                         'strcount' => 0,\n                                                                         'dircount' => 1,\n                                                                         'uncommit' => undef,\n                                                                         'error' => undef,\n                                                                         'patcount' => 0,\n                                                                         'actcount' => 1,\n                                                                         'items' => [\n                                                                                      bless( {\n                                                                                               'subrule' => 'BACKTICK',\n                                                                                               'matchrule' => 0,\n                                                                                               'implicit' => undef,\n                                                                                               'argcode' => undef,\n                                                                                               'lookahead' => 0,\n                                                                                               'line' => 402\n                                                                                             }, 'Parse::RecDescent::Subrule' ),\n                                                                                      bless( {\n                                                                                               'hashname' => '__DIRECTIVE1__',\n                                                                                               'name' => '<skip:\\'\\'>',\n                                                                                               'lookahead' => 0,\n                                                                                               'line' => 402,\n                                                                                               'code' => 'my $oldskip = $skip; $skip=\\'\\'; $oldskip'\n                                                                                             }, 'Parse::RecDescent::Directive' ),\n                                                                                      bless( {\n                                                                                               'subrule' => 'text',\n                                                                                               'matchrule' => 0,\n                                                                                               'implicit' => undef,\n                                                                                               'argcode' => undef,\n                                                                                               'lookahead' => 0,\n                                                                                               'line' => 402\n                                                                                             }, 'Parse::RecDescent::Subrule' ),\n                                                                                      bless( {\n                                                                                               'subrule' => 'BACKTICK',\n                                                                                               'matchrule' => 0,\n                                                                                               'implicit' => undef,\n                                                                                               'argcode' => undef,\n                                                                                               'lookahead' => 0,\n                                                                                               'line' => 402\n                                                                                             }, 'Parse::RecDescent::Subrule' ),\n                                                                                      bless( {\n                                                                                               'hashname' => '__ACTION1__',\n                                                                                               'lookahead' => 0,\n                                                                                               'line' => 402,\n                                                                                               'code' => '{ $item{text} }'\n                                                                                             }, 'Parse::RecDescent::Action' )\n                                                                                    ],\n                                                                         'line' => undef\n                                                                       }, 'Parse::RecDescent::Production' )\n                                                              ],\n                                                   'name' => 'string',\n                                                   'vars' => '',\n                                                   'line' => 402\n                                                 }, 'Parse::RecDescent::Rule' ),\n                              'app_config_statement' => bless( {\n                                                                 'impcount' => 0,\n                                                                 'calls' => [\n                                                                              'IDENT',\n                                                                              'arg_list',\n                                                                              'SEMI_COLON'\n                                                                            ],\n                                                                 'changed' => 0,\n                                                                 'opcount' => 0,\n                                                                 'prods' => [\n                                                                              bless( {\n                                                                                       'number' => '0',\n                                                                                       'strcount' => 0,\n                                                                                       'dircount' => 0,\n                                                                                       'uncommit' => undef,\n                                                                                       'error' => undef,\n                                                                                       'patcount' => 0,\n                                                                                       'actcount' => 1,\n                                                                                       'items' => [\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'IDENT',\n                                                                                                             'matchrule' => 0,\n                                                                                                             'implicit' => undef,\n                                                                                                             'argcode' => undef,\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 337\n                                                                                                           }, 'Parse::RecDescent::Subrule' ),\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'arg_list',\n                                                                                                             'matchrule' => 0,\n                                                                                                             'implicit' => undef,\n                                                                                                             'argcode' => undef,\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 337\n                                                                                                           }, 'Parse::RecDescent::Subrule' ),\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'SEMI_COLON',\n                                                                                                             'matchrule' => 0,\n                                                                                                             'implicit' => undef,\n                                                                                                             'argcode' => undef,\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 337\n                                                                                                           }, 'Parse::RecDescent::Subrule' ),\n                                                                                                    bless( {\n                                                                                                             'hashname' => '__ACTION1__',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 337,\n                                                                                                             'code' => '{\n                         bless {\n                            __KEYWORD__ => $item{IDENT},\n                            __ARGS__    => $item{arg_list}\n                         }, \\'app_config_statement\\'\n                       }'\n                                                                                                           }, 'Parse::RecDescent::Action' )\n                                                                                                  ],\n                                                                                       'line' => undef\n                                                                                     }, 'Parse::RecDescent::Production' ),\n                                                                              bless( {\n                                                                                       'number' => '1',\n                                                                                       'strcount' => 0,\n                                                                                       'dircount' => 0,\n                                                                                       'uncommit' => undef,\n                                                                                       'error' => undef,\n                                                                                       'patcount' => 1,\n                                                                                       'actcount' => 1,\n                                                                                       'items' => [\n                                                                                                    bless( {\n                                                                                                             'pattern' => '[^\\\\}]',\n                                                                                                             'hashname' => '__PATTERN1__',\n                                                                                                             'description' => '/[^\\\\\\\\\\\\}]/',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'rdelim' => '/',\n                                                                                                             'line' => 343,\n                                                                                                             'mod' => '',\n                                                                                                             'ldelim' => '/'\n                                                                                                           }, 'Parse::RecDescent::Token' ),\n                                                                                                    bless( {\n                                                                                                             'hashname' => '__ACTION1__',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 343,\n                                                                                                             'code' => '{\n                            my $message = \"bad config statement, \"\n                                        . \"possible extra semicolon\";\n                            if ( $backtick_warning ) {\n                                $message .= \" ($backtick_warning)\";\n                                $backtick_warning = \\'\\';\n                            }\n                            my $diag_text = $item[1] . $text;\n                            Bigtop::Parser->fatal_error_two_lines(\n                                $message, $diag_text, $thisline\n                            );\n                       }'\n                                                                                                           }, 'Parse::RecDescent::Action' )\n                                                                                                  ],\n                                                                                       'line' => 343\n                                                                                     }, 'Parse::RecDescent::Production' )\n                                                                            ],\n                                                                 'name' => 'app_config_statement',\n                                                                 'vars' => '',\n                                                                 'line' => 337\n                                                               }, 'Parse::RecDescent::Rule' ),\n                              'arg_element' => bless( {\n                                                        'impcount' => 0,\n                                                        'calls' => [\n                                                                     'module_ident',\n                                                                     'string'\n                                                                   ],\n                                                        'changed' => 0,\n                                                        'opcount' => 0,\n                                                        'prods' => [\n                                                                     bless( {\n                                                                              'number' => '0',\n                                                                              'strcount' => 0,\n                                                                              'dircount' => 0,\n                                                                              'uncommit' => undef,\n                                                                              'error' => undef,\n                                                                              'patcount' => 0,\n                                                                              'actcount' => 1,\n                                                                              'items' => [\n                                                                                           bless( {\n                                                                                                    'subrule' => 'module_ident',\n                                                                                                    'matchrule' => 0,\n                                                                                                    'implicit' => undef,\n                                                                                                    'argcode' => undef,\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 383\n                                                                                                  }, 'Parse::RecDescent::Subrule' ),\n                                                                                           bless( {\n                                                                                                    'hashname' => '__ACTION1__',\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 383,\n                                                                                                    'code' => '{ $item[1] }'\n                                                                                                  }, 'Parse::RecDescent::Action' )\n                                                                                         ],\n                                                                              'line' => undef\n                                                                            }, 'Parse::RecDescent::Production' ),\n                                                                     bless( {\n                                                                              'number' => '1',\n                                                                              'strcount' => 0,\n                                                                              'dircount' => 0,\n                                                                              'uncommit' => undef,\n                                                                              'error' => undef,\n                                                                              'patcount' => 0,\n                                                                              'actcount' => 1,\n                                                                              'items' => [\n                                                                                           bless( {\n                                                                                                    'subrule' => 'string',\n                                                                                                    'matchrule' => 0,\n                                                                                                    'implicit' => undef,\n                                                                                                    'argcode' => undef,\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 384\n                                                                                                  }, 'Parse::RecDescent::Subrule' ),\n                                                                                           bless( {\n                                                                                                    'hashname' => '__ACTION1__',\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 384,\n                                                                                                    'code' => '{ $item[1] }'\n                                                                                                  }, 'Parse::RecDescent::Action' )\n                                                                                         ],\n                                                                              'line' => 384\n                                                                            }, 'Parse::RecDescent::Production' ),\n                                                                     bless( {\n                                                                              'number' => '2',\n                                                                              'strcount' => 0,\n                                                                              'dircount' => 0,\n                                                                              'uncommit' => undef,\n                                                                              'error' => undef,\n                                                                              'patcount' => 0,\n                                                                              'actcount' => 1,\n                                                                              'items' => [\n                                                                                           bless( {\n                                                                                                    'hashname' => '__ACTION1__',\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 385,\n                                                                                                    'code' => '{\n    my $message = \"I was expecting an argument or argument list\";\n    if ( $backtick_warning ) {\n        $message .= \" ($backtick_warning)\";\n        $backtick_warning = \\'\\';\n    }\n    Bigtop::Parser->fatal_error_two_lines(\n        $message, $text, $thisline\n    );\n}'\n                                                                                                  }, 'Parse::RecDescent::Action' )\n                                                                                         ],\n                                                                              'line' => 385\n                                                                            }, 'Parse::RecDescent::Production' )\n                                                                   ],\n                                                        'name' => 'arg_element',\n                                                        'vars' => '',\n                                                        'line' => 383\n                                                      }, 'Parse::RecDescent::Rule' ),\n                              'backend_statement' => bless( {\n                                                              'impcount' => 0,\n                                                              'calls' => [\n                                                                           'IDENT',\n                                                                           'arg_element',\n                                                                           'SEMI_COLON'\n                                                                         ],\n                                                              'changed' => 0,\n                                                              'opcount' => 0,\n                                                              'prods' => [\n                                                                           bless( {\n                                                                                    'number' => '0',\n                                                                                    'strcount' => 0,\n                                                                                    'dircount' => 0,\n                                                                                    'uncommit' => undef,\n                                                                                    'error' => undef,\n                                                                                    'patcount' => 0,\n                                                                                    'actcount' => 1,\n                                                                                    'items' => [\n                                                                                                 bless( {\n                                                                                                          'subrule' => 'IDENT',\n                                                                                                          'matchrule' => 0,\n                                                                                                          'implicit' => undef,\n                                                                                                          'argcode' => undef,\n                                                                                                          'lookahead' => 0,\n                                                                                                          'line' => 57\n                                                                                                        }, 'Parse::RecDescent::Subrule' ),\n                                                                                                 bless( {\n                                                                                                          'subrule' => 'arg_element',\n                                                                                                          'matchrule' => 0,\n                                                                                                          'implicit' => undef,\n                                                                                                          'argcode' => undef,\n                                                                                                          'lookahead' => 0,\n                                                                                                          'line' => 57\n                                                                                                        }, 'Parse::RecDescent::Subrule' ),\n                                                                                                 bless( {\n                                                                                                          'subrule' => 'SEMI_COLON',\n                                                                                                          'matchrule' => 0,\n                                                                                                          'implicit' => undef,\n                                                                                                          'argcode' => undef,\n                                                                                                          'lookahead' => 0,\n                                                                                                          'line' => 57\n                                                                                                        }, 'Parse::RecDescent::Subrule' ),\n                                                                                                 bless( {\n                                                                                                          'hashname' => '__ACTION1__',\n                                                                                                          'lookahead' => 0,\n                                                                                                          'line' => 57,\n                                                                                                          'code' => '{\n    $return = [ $item{IDENT} => $item{arg_element} ];\n}'\n                                                                                                        }, 'Parse::RecDescent::Action' )\n                                                                                               ],\n                                                                                    'line' => undef\n                                                                                  }, 'Parse::RecDescent::Production' )\n                                                                         ],\n                                                              'name' => 'backend_statement',\n                                                              'vars' => '',\n                                                              'line' => 57\n                                                            }, 'Parse::RecDescent::Rule' ),\n                              'config_only' => bless( {\n                                                        'impcount' => 0,\n                                                        'calls' => [\n                                                                     'configuration',\n                                                                     'anything'\n                                                                   ],\n                                                        'changed' => 0,\n                                                        'opcount' => 0,\n                                                        'prods' => [\n                                                                     bless( {\n                                                                              'number' => '0',\n                                                                              'strcount' => 0,\n                                                                              'dircount' => 0,\n                                                                              'uncommit' => undef,\n                                                                              'error' => undef,\n                                                                              'patcount' => 0,\n                                                                              'actcount' => 1,\n                                                                              'items' => [\n                                                                                           bless( {\n                                                                                                    'subrule' => 'configuration',\n                                                                                                    'matchrule' => 0,\n                                                                                                    'implicit' => undef,\n                                                                                                    'argcode' => undef,\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 11\n                                                                                                  }, 'Parse::RecDescent::Subrule' ),\n                                                                                           bless( {\n                                                                                                    'subrule' => 'anything',\n                                                                                                    'matchrule' => 0,\n                                                                                                    'implicit' => undef,\n                                                                                                    'argcode' => undef,\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 11\n                                                                                                  }, 'Parse::RecDescent::Subrule' ),\n                                                                                           bless( {\n                                                                                                    'hashname' => '__ACTION1__',\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 11,\n                                                                                                    'code' => '{ $item[1] }'\n                                                                                                  }, 'Parse::RecDescent::Action' )\n                                                                                         ],\n                                                                              'line' => undef\n                                                                            }, 'Parse::RecDescent::Production' )\n                                                                   ],\n                                                        'name' => 'config_only',\n                                                        'vars' => '',\n                                                        'line' => 9\n                                                      }, 'Parse::RecDescent::Rule' ),\n                              'extra_sql_statement_def' => bless( {\n                                                                    'impcount' => 0,\n                                                                    'calls' => [\n                                                                                 'arg_list'\n                                                                               ],\n                                                                    'changed' => 0,\n                                                                    'opcount' => 0,\n                                                                    'prods' => [\n                                                                                 bless( {\n                                                                                          'number' => '0',\n                                                                                          'strcount' => 0,\n                                                                                          'dircount' => 0,\n                                                                                          'uncommit' => undef,\n                                                                                          'error' => undef,\n                                                                                          'patcount' => 0,\n                                                                                          'actcount' => 1,\n                                                                                          'items' => [\n                                                                                                       bless( {\n                                                                                                                'subrule' => 'arg_list',\n                                                                                                                'expected' => undef,\n                                                                                                                'min' => 0,\n                                                                                                                'argcode' => undef,\n                                                                                                                'max' => 1,\n                                                                                                                'matchrule' => 0,\n                                                                                                                'repspec' => '?',\n                                                                                                                'lookahead' => 0,\n                                                                                                                'line' => 305\n                                                                                                              }, 'Parse::RecDescent::Repetition' ),\n                                                                                                       bless( {\n                                                                                                                'hashname' => '__ACTION1__',\n                                                                                                                'lookahead' => 0,\n                                                                                                                'line' => 305,\n                                                                                                                'code' => '{\n                    bless {\n                        __ARGS__ => $item[1]->[0]\n                    }, \\'extra_sql_statement_def\\'\n                }'\n                                                                                                              }, 'Parse::RecDescent::Action' )\n                                                                                                     ],\n                                                                                          'line' => undef\n                                                                                        }, 'Parse::RecDescent::Production' )\n                                                                               ],\n                                                                    'name' => 'extra_sql_statement_def',\n                                                                    'vars' => '',\n                                                                    'line' => 305\n                                                                  }, 'Parse::RecDescent::Rule' ),\n                              'field_statement_def' => bless( {\n                                                                'impcount' => 0,\n                                                                'calls' => [\n                                                                             'arg_list'\n                                                                           ],\n                                                                'changed' => 0,\n                                                                'opcount' => 0,\n                                                                'prods' => [\n                                                                             bless( {\n                                                                                      'number' => '0',\n                                                                                      'strcount' => 0,\n                                                                                      'dircount' => 0,\n                                                                                      'uncommit' => undef,\n                                                                                      'error' => undef,\n                                                                                      'patcount' => 0,\n                                                                                      'actcount' => 1,\n                                                                                      'items' => [\n                                                                                                   bless( {\n                                                                                                            'subrule' => 'arg_list',\n                                                                                                            'expected' => undef,\n                                                                                                            'min' => 0,\n                                                                                                            'argcode' => undef,\n                                                                                                            'max' => 1,\n                                                                                                            'matchrule' => 0,\n                                                                                                            'repspec' => '?',\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 291\n                                                                                                          }, 'Parse::RecDescent::Repetition' ),\n                                                                                                   bless( {\n                                                                                                            'hashname' => '__ACTION1__',\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 291,\n                                                                                                            'code' => '{\n                        bless {\n                            __ARGS__ => $item[1]->[0]\n                        }, \\'field_statement_def\\'\n                      }'\n                                                                                                          }, 'Parse::RecDescent::Action' )\n                                                                                                 ],\n                                                                                      'line' => undef\n                                                                                    }, 'Parse::RecDescent::Production' )\n                                                                           ],\n                                                                'name' => 'field_statement_def',\n                                                                'vars' => '',\n                                                                'line' => 291\n                                                              }, 'Parse::RecDescent::Rule' ),\n                              'controller_statement' => bless( {\n                                                                 'impcount' => 0,\n                                                                 'calls' => [\n                                                                              'IDENT',\n                                                                              'method_type',\n                                                                              'method_body',\n                                                                              'CONFIG',\n                                                                              'controller_config_statement',\n                                                                              'keyword',\n                                                                              'string',\n                                                                              'SEMI_COLON',\n                                                                              'arg_list'\n                                                                            ],\n                                                                 'changed' => 0,\n                                                                 'opcount' => 0,\n                                                                 'prods' => [\n                                                                              bless( {\n                                                                                       'number' => '0',\n                                                                                       'strcount' => 3,\n                                                                                       'dircount' => 0,\n                                                                                       'uncommit' => undef,\n                                                                                       'error' => undef,\n                                                                                       'patcount' => 0,\n                                                                                       'actcount' => 1,\n                                                                                       'items' => [\n                                                                                                    bless( {\n                                                                                                             'pattern' => 'method',\n                                                                                                             'hashname' => '__STRING1__',\n                                                                                                             'description' => '\\'method\\'',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 142\n                                                                                                           }, 'Parse::RecDescent::Literal' ),\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'IDENT',\n                                                                                                             'matchrule' => 0,\n                                                                                                             'implicit' => undef,\n                                                                                                             'argcode' => undef,\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 142\n                                                                                                           }, 'Parse::RecDescent::Subrule' ),\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'method_type',\n                                                                                                             'matchrule' => 0,\n                                                                                                             'implicit' => undef,\n                                                                                                             'argcode' => undef,\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 143\n                                                                                                           }, 'Parse::RecDescent::Subrule' ),\n                                                                                                    bless( {\n                                                                                                             'pattern' => '{',\n                                                                                                             'hashname' => '__STRING2__',\n                                                                                                             'description' => '\\'\\\\{\\'',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 143\n                                                                                                           }, 'Parse::RecDescent::Literal' ),\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'method_body',\n                                                                                                             'matchrule' => 0,\n                                                                                                             'implicit' => undef,\n                                                                                                             'argcode' => undef,\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 143\n                                                                                                           }, 'Parse::RecDescent::Subrule' ),\n                                                                                                    bless( {\n                                                                                                             'pattern' => '}',\n                                                                                                             'hashname' => '__STRING3__',\n                                                                                                             'description' => '\\'\\\\}\\'',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 143\n                                                                                                           }, 'Parse::RecDescent::Literal' ),\n                                                                                                    bless( {\n                                                                                                             'hashname' => '__ACTION1__',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 143,\n                                                                                                             'code' => '{\n                            bless {\n                                __IDENT__ => Bigtop::Parser->get_ident(),\n                                __NAME__  => $item{IDENT},\n                                __BODY__  => $item{method_body},\n                                __TYPE__  => $item{method_type},\n                            }, \\'controller_method\\'\n                        }'\n                                                                                                           }, 'Parse::RecDescent::Action' )\n                                                                                                  ],\n                                                                                       'line' => undef\n                                                                                     }, 'Parse::RecDescent::Production' ),\n                                                                              bless( {\n                                                                                       'number' => '1',\n                                                                                       'strcount' => 2,\n                                                                                       'dircount' => 0,\n                                                                                       'uncommit' => undef,\n                                                                                       'error' => undef,\n                                                                                       'patcount' => 0,\n                                                                                       'actcount' => 1,\n                                                                                       'items' => [\n                                                                                                    bless( {\n                                                                                                             'pattern' => 'method',\n                                                                                                             'hashname' => '__STRING1__',\n                                                                                                             'description' => '\\'method\\'',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 151\n                                                                                                           }, 'Parse::RecDescent::Literal' ),\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'IDENT',\n                                                                                                             'matchrule' => 0,\n                                                                                                             'implicit' => undef,\n                                                                                                             'argcode' => undef,\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 151\n                                                                                                           }, 'Parse::RecDescent::Subrule' ),\n                                                                                                    bless( {\n                                                                                                             'pattern' => '{',\n                                                                                                             'hashname' => '__STRING2__',\n                                                                                                             'description' => '\\'\\\\{\\'',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 151\n                                                                                                           }, 'Parse::RecDescent::Literal' ),\n                                                                                                    bless( {\n                                                                                                             'hashname' => '__ACTION1__',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 151,\n                                                                                                             'code' => '{\n                            my $diag_text = $item[1] . \\' \\'\n                                          . $item[2] . \\' {\\'\n                                          . $text;\n                            Bigtop::Parser->fatal_error_two_lines(\n                                \\'missing method type\\', $diag_text, $thisline\n                            );\n                     }'\n                                                                                                           }, 'Parse::RecDescent::Action' )\n                                                                                                  ],\n                                                                                       'line' => 151\n                                                                                     }, 'Parse::RecDescent::Production' ),\n                                                                              bless( {\n                                                                                       'number' => '2',\n                                                                                       'strcount' => 2,\n                                                                                       'dircount' => 0,\n                                                                                       'uncommit' => undef,\n                                                                                       'error' => undef,\n                                                                                       'patcount' => 0,\n                                                                                       'actcount' => 1,\n                                                                                       'items' => [\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'CONFIG',\n                                                                                                             'matchrule' => 0,\n                                                                                                             'implicit' => undef,\n                                                                                                             'argcode' => undef,\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 159\n                                                                                                           }, 'Parse::RecDescent::Subrule' ),\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'IDENT',\n                                                                                                             'expected' => undef,\n                                                                                                             'min' => 0,\n                                                                                                             'argcode' => undef,\n                                                                                                             'max' => 1,\n                                                                                                             'matchrule' => 0,\n                                                                                                             'repspec' => '?',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 159\n                                                                                                           }, 'Parse::RecDescent::Repetition' ),\n                                                                                                    bless( {\n                                                                                                             'pattern' => '{',\n                                                                                                             'hashname' => '__STRING1__',\n                                                                                                             'description' => '\\'\\\\{\\'',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 159\n                                                                                                           }, 'Parse::RecDescent::Literal' ),\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'controller_config_statement',\n                                                                                                             'expected' => undef,\n                                                                                                             'min' => 0,\n                                                                                                             'argcode' => undef,\n                                                                                                             'max' => 100000000,\n                                                                                                             'matchrule' => 0,\n                                                                                                             'repspec' => 's?',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 159\n                                                                                                           }, 'Parse::RecDescent::Repetition' ),\n                                                                                                    bless( {\n                                                                                                             'pattern' => '}',\n                                                                                                             'hashname' => '__STRING2__',\n                                                                                                             'description' => '\\'\\\\}\\'',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 159\n                                                                                                           }, 'Parse::RecDescent::Literal' ),\n                                                                                                    bless( {\n                                                                                                             'hashname' => '__ACTION1__',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 159,\n                                                                                                             'code' => '{\n                   bless {\n                       __IDENT__ => Bigtop::Parser->get_ident(),\n                       __BODY__  => $item{\\'controller_config_statement(s?)\\'},\n                       __TYPE__  => $item{\\'IDENT(?)\\'}[0],\n                   }, \\'controller_config_block\\'\n                }'\n                                                                                                           }, 'Parse::RecDescent::Action' )\n                                                                                                  ],\n                                                                                       'line' => 159\n                                                                                     }, 'Parse::RecDescent::Production' ),\n                                                                              bless( {\n                                                                                       'number' => '3',\n                                                                                       'strcount' => 1,\n                                                                                       'dircount' => 0,\n                                                                                       'uncommit' => undef,\n                                                                                       'error' => undef,\n                                                                                       'patcount' => 0,\n                                                                                       'actcount' => 1,\n                                                                                       'items' => [\n                                                                                                    bless( {\n                                                                                                             'pattern' => 'literal',\n                                                                                                             'hashname' => '__STRING1__',\n                                                                                                             'description' => '\\'literal\\'',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 166\n                                                                                                           }, 'Parse::RecDescent::Literal' ),\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'keyword',\n                                                                                                             'matchrule' => 0,\n                                                                                                             'implicit' => undef,\n                                                                                                             'argcode' => '[ \\'controller_literal\\' ]',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 166\n                                                                                                           }, 'Parse::RecDescent::Subrule' ),\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'string',\n                                                                                                             'matchrule' => 0,\n                                                                                                             'implicit' => undef,\n                                                                                                             'argcode' => undef,\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 167\n                                                                                                           }, 'Parse::RecDescent::Subrule' ),\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'SEMI_COLON',\n                                                                                                             'matchrule' => 0,\n                                                                                                             'implicit' => undef,\n                                                                                                             'argcode' => undef,\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 167\n                                                                                                           }, 'Parse::RecDescent::Subrule' ),\n                                                                                                    bless( {\n                                                                                                             'hashname' => '__ACTION1__',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 167,\n                                                                                                             'code' => '{\n                    bless {\n                        __IDENT__   => Bigtop::Parser->get_ident(),\n                        __BACKEND__ => $item{ keyword },\n                        __BODY__    => $item{ string },\n                    }, \\'controller_literal_block\\'\n           }'\n                                                                                                           }, 'Parse::RecDescent::Action' )\n                                                                                                  ],\n                                                                                       'line' => 166\n                                                                                     }, 'Parse::RecDescent::Production' ),\n                                                                              bless( {\n                                                                                       'number' => '4',\n                                                                                       'strcount' => 0,\n                                                                                       'dircount' => 0,\n                                                                                       'uncommit' => undef,\n                                                                                       'error' => undef,\n                                                                                       'patcount' => 0,\n                                                                                       'actcount' => 1,\n                                                                                       'items' => [\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'keyword',\n                                                                                                             'matchrule' => 0,\n                                                                                                             'implicit' => undef,\n                                                                                                             'argcode' => '[\\'controller\\']',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 174\n                                                                                                           }, 'Parse::RecDescent::Subrule' ),\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'arg_list',\n                                                                                                             'expected' => undef,\n                                                                                                             'min' => 0,\n                                                                                                             'argcode' => undef,\n                                                                                                             'max' => 1,\n                                                                                                             'matchrule' => 0,\n                                                                                                             'repspec' => '?',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 174\n                                                                                                           }, 'Parse::RecDescent::Repetition' ),\n                                                                                                    bless( {\n                                                                                                             'subrule' => 'SEMI_COLON',\n                                                                                                             'matchrule' => 0,\n                                                                                                             'implicit' => undef,\n                                                                                                             'argcode' => undef,\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 174\n                                                                                                           }, 'Parse::RecDescent::Subrule' ),\n                                                                                                    bless( {\n                                                                                                             'hashname' => '__ACTION1__',\n                                                                                                             'lookahead' => 0,\n                                                                                                             'line' => 174,\n                                                                                                             'code' => '{\n                           bless {\n                               __KEYWORD__ => $item{keyword},\n                               __ARGS__    => $item{\\'arg_list(?)\\'}->[0],\n                           }, \\'controller_statement\\'\n           }'\n                                                                                                           }, 'Parse::RecDescent::Action' )\n                                                                                                  ],\n                                                                                       'line' => 174\n                                                                                     }, 'Parse::RecDescent::Production' )\n                                                                            ],\n                                                                 'name' => 'controller_statement',\n                                                                 'vars' => '',\n                                                                 'line' => 142\n                                                               }, 'Parse::RecDescent::Rule' ),\n                              'configuration' => bless( {\n                                                          'impcount' => 0,\n                                                          'calls' => [\n                                                                       'config_body'\n                                                                     ],\n                                                          'changed' => 0,\n                                                          'opcount' => 0,\n                                                          'prods' => [\n                                                                       bless( {\n                                                                                'number' => '0',\n                                                                                'strcount' => 3,\n                                                                                'dircount' => 0,\n                                                                                'uncommit' => undef,\n                                                                                'error' => undef,\n                                                                                'patcount' => 0,\n                                                                                'actcount' => 1,\n                                                                                'items' => [\n                                                                                             bless( {\n                                                                                                      'pattern' => 'config',\n                                                                                                      'hashname' => '__STRING1__',\n                                                                                                      'description' => '\\'config\\'',\n                                                                                                      'lookahead' => 0,\n                                                                                                      'line' => 17\n                                                                                                    }, 'Parse::RecDescent::Literal' ),\n                                                                                             bless( {\n                                                                                                      'pattern' => '{',\n                                                                                                      'hashname' => '__STRING2__',\n                                                                                                      'description' => '\\'\\\\{\\'',\n                                                                                                      'lookahead' => 0,\n                                                                                                      'line' => 17\n                                                                                                    }, 'Parse::RecDescent::Literal' ),\n                                                                                             bless( {\n                                                                                                      'subrule' => 'config_body',\n                                                                                                      'matchrule' => 0,\n                                                                                                      'implicit' => undef,\n                                                                                                      'argcode' => undef,\n                                                                                                      'lookahead' => 0,\n                                                                                                      'line' => 17\n                                                                                                    }, 'Parse::RecDescent::Subrule' ),\n                                                                                             bless( {\n                                                                                                      'pattern' => '}',\n                                                                                                      'hashname' => '__STRING3__',\n                                                                                                      'description' => '\\'\\\\}\\'',\n                                                                                                      'lookahead' => 0,\n                                                                                                      'line' => 17\n                                                                                                    }, 'Parse::RecDescent::Literal' ),\n                                                                                             bless( {\n                                                                                                      'hashname' => '__ACTION1__',\n                                                                                                      'lookahead' => 0,\n                                                                                                      'line' => 17,\n                                                                                                      'code' => '{ $item{config_body} }'\n                                                                                                    }, 'Parse::RecDescent::Action' )\n                                                                                           ],\n                                                                                'line' => undef\n                                                                              }, 'Parse::RecDescent::Production' )\n                                                                     ],\n                                                          'name' => 'configuration',\n                                                          'vars' => '',\n                                                          'line' => 17\n                                                        }, 'Parse::RecDescent::Rule' ),\n                              'config_statement' => bless( {\n                                                             'impcount' => 0,\n                                                             'calls' => [\n                                                                          'module_ident',\n                                                                          'IDENT',\n                                                                          'backend_body',\n                                                                          'keyword',\n                                                                          'arg_element',\n                                                                          'SEMI_COLON'\n                                                                        ],\n                                                             'changed' => 0,\n                                                             'opcount' => 0,\n                                                             'prods' => [\n                                                                          bless( {\n                                                                                   'number' => '0',\n                                                                                   'strcount' => 2,\n                                                                                   'dircount' => 0,\n                                                                                   'uncommit' => undef,\n                                                                                   'error' => undef,\n                                                                                   'patcount' => 0,\n                                                                                   'actcount' => 1,\n                                                                                   'items' => [\n                                                                                                bless( {\n                                                                                                         'subrule' => 'module_ident',\n                                                                                                         'matchrule' => 0,\n                                                                                                         'implicit' => undef,\n                                                                                                         'argcode' => undef,\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 36\n                                                                                                       }, 'Parse::RecDescent::Subrule' ),\n                                                                                                bless( {\n                                                                                                         'subrule' => 'IDENT',\n                                                                                                         'matchrule' => 0,\n                                                                                                         'implicit' => undef,\n                                                                                                         'argcode' => undef,\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 36\n                                                                                                       }, 'Parse::RecDescent::Subrule' ),\n                                                                                                bless( {\n                                                                                                         'pattern' => '{',\n                                                                                                         'hashname' => '__STRING1__',\n                                                                                                         'description' => '\\'\\\\{\\'',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 36\n                                                                                                       }, 'Parse::RecDescent::Literal' ),\n                                                                                                bless( {\n                                                                                                         'subrule' => 'backend_body',\n                                                                                                         'matchrule' => 0,\n                                                                                                         'implicit' => undef,\n                                                                                                         'argcode' => undef,\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 36\n                                                                                                       }, 'Parse::RecDescent::Subrule' ),\n                                                                                                bless( {\n                                                                                                         'pattern' => '}',\n                                                                                                         'hashname' => '__STRING2__',\n                                                                                                         'description' => '\\'\\\\}\\'',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 36\n                                                                                                       }, 'Parse::RecDescent::Literal' ),\n                                                                                                bless( {\n                                                                                                         'hashname' => '__ACTION1__',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 36,\n                                                                                                         'code' => '{\n    my $backend_data = $item{backend_body};\n    my $backend_type = $item{module_ident};\n    my $backend_name = $item{IDENT};\n\n    $backend_data->{__NAME__} = $backend_name;\n\n    $return = [ $backend_type => $backend_data ];\n}'\n                                                                                                       }, 'Parse::RecDescent::Action' )\n                                                                                              ],\n                                                                                   'line' => undef\n                                                                                 }, 'Parse::RecDescent::Production' ),\n                                                                          bless( {\n                                                                                   'number' => '1',\n                                                                                   'strcount' => 0,\n                                                                                   'dircount' => 0,\n                                                                                   'uncommit' => undef,\n                                                                                   'error' => undef,\n                                                                                   'patcount' => 0,\n                                                                                   'actcount' => 1,\n                                                                                   'items' => [\n                                                                                                bless( {\n                                                                                                         'subrule' => 'keyword',\n                                                                                                         'matchrule' => 0,\n                                                                                                         'implicit' => undef,\n                                                                                                         'argcode' => '[ \\'config\\' ]',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 45\n                                                                                                       }, 'Parse::RecDescent::Subrule' ),\n                                                                                                bless( {\n                                                                                                         'subrule' => 'arg_element',\n                                                                                                         'matchrule' => 0,\n                                                                                                         'implicit' => undef,\n                                                                                                         'argcode' => undef,\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 45\n                                                                                                       }, 'Parse::RecDescent::Subrule' ),\n                                                                                                bless( {\n                                                                                                         'subrule' => 'SEMI_COLON',\n                                                                                                         'matchrule' => 0,\n                                                                                                         'implicit' => undef,\n                                                                                                         'argcode' => undef,\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 45\n                                                                                                       }, 'Parse::RecDescent::Subrule' ),\n                                                                                                bless( {\n                                                                                                         'hashname' => '__ACTION1__',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 45,\n                                                                                                         'code' => '{\n    $return = [ $item{keyword} => $item{arg_element} ];\n}'\n                                                                                                       }, 'Parse::RecDescent::Action' )\n                                                                                              ],\n                                                                                   'line' => 45\n                                                                                 }, 'Parse::RecDescent::Production' )\n                                                                        ],\n                                                             'name' => 'config_statement',\n                                                             'vars' => '',\n                                                             'line' => 36\n                                                           }, 'Parse::RecDescent::Rule' ),\n                              'table_ident' => bless( {\n                                                        'impcount' => 0,\n                                                        'calls' => [\n                                                                     'IDENT'\n                                                                   ],\n                                                        'changed' => 0,\n                                                        'opcount' => 0,\n                                                        'prods' => [\n                                                                     bless( {\n                                                                              'number' => '0',\n                                                                              'strcount' => 1,\n                                                                              'dircount' => 0,\n                                                                              'uncommit' => undef,\n                                                                              'error' => undef,\n                                                                              'patcount' => 0,\n                                                                              'actcount' => 1,\n                                                                              'items' => [\n                                                                                           bless( {\n                                                                                                    'subrule' => 'IDENT',\n                                                                                                    'matchrule' => 0,\n                                                                                                    'implicit' => undef,\n                                                                                                    'argcode' => undef,\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 396\n                                                                                                  }, 'Parse::RecDescent::Subrule' ),\n                                                                                           bless( {\n                                                                                                    'pattern' => '.',\n                                                                                                    'hashname' => '__STRING1__',\n                                                                                                    'description' => '\\'.\\'',\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 396\n                                                                                                  }, 'Parse::RecDescent::Literal' ),\n                                                                                           bless( {\n                                                                                                    'subrule' => 'IDENT',\n                                                                                                    'matchrule' => 0,\n                                                                                                    'implicit' => undef,\n                                                                                                    'argcode' => undef,\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 396\n                                                                                                  }, 'Parse::RecDescent::Subrule' ),\n                                                                                           bless( {\n                                                                                                    'hashname' => '__ACTION1__',\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 396,\n                                                                                                    'code' => '{ $item[1] . \\'.\\' . $item[3] }'\n                                                                                                  }, 'Parse::RecDescent::Action' )\n                                                                                         ],\n                                                                              'line' => undef\n                                                                            }, 'Parse::RecDescent::Production' ),\n                                                                     bless( {\n                                                                              'number' => '1',\n                                                                              'strcount' => 0,\n                                                                              'dircount' => 0,\n                                                                              'uncommit' => undef,\n                                                                              'error' => undef,\n                                                                              'patcount' => 0,\n                                                                              'actcount' => 1,\n                                                                              'items' => [\n                                                                                           bless( {\n                                                                                                    'subrule' => 'IDENT',\n                                                                                                    'matchrule' => 0,\n                                                                                                    'implicit' => undef,\n                                                                                                    'argcode' => undef,\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 397\n                                                                                                  }, 'Parse::RecDescent::Subrule' ),\n                                                                                           bless( {\n                                                                                                    'hashname' => '__ACTION1__',\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 397,\n                                                                                                    'code' => '{ $item[1] }'\n                                                                                                  }, 'Parse::RecDescent::Action' )\n                                                                                         ],\n                                                                              'line' => 397\n                                                                            }, 'Parse::RecDescent::Production' )\n                                                                   ],\n                                                        'name' => 'table_ident',\n                                                        'vars' => '',\n                                                        'line' => 396\n                                                      }, 'Parse::RecDescent::Rule' ),\n                              'table_body' => bless( {\n                                                       'impcount' => 0,\n                                                       'calls' => [\n                                                                    'table_element_block'\n                                                                  ],\n                                                       'changed' => 0,\n                                                       'opcount' => 0,\n                                                       'prods' => [\n                                                                    bless( {\n                                                                             'number' => '0',\n                                                                             'strcount' => 0,\n                                                                             'dircount' => 0,\n                                                                             'uncommit' => undef,\n                                                                             'error' => undef,\n                                                                             'patcount' => 0,\n                                                                             'actcount' => 0,\n                                                                             'items' => [\n                                                                                          bless( {\n                                                                                                   'subrule' => 'table_element_block',\n                                                                                                   'expected' => undef,\n                                                                                                   'min' => 0,\n                                                                                                   'argcode' => undef,\n                                                                                                   'max' => 100000000,\n                                                                                                   'matchrule' => 0,\n                                                                                                   'repspec' => 's?',\n                                                                                                   'lookahead' => 0,\n                                                                                                   'line' => 253\n                                                                                                 }, 'Parse::RecDescent::Repetition' )\n                                                                                        ],\n                                                                             'line' => undef\n                                                                           }, 'Parse::RecDescent::Production' )\n                                                                  ],\n                                                       'name' => 'table_body',\n                                                       'vars' => '',\n                                                       'line' => 253\n                                                     }, 'Parse::RecDescent::Rule' ),\n                              'anything' => bless( {\n                                                     'impcount' => 0,\n                                                     'calls' => [],\n                                                     'changed' => 0,\n                                                     'opcount' => 0,\n                                                     'prods' => [\n                                                                  bless( {\n                                                                           'number' => '0',\n                                                                           'strcount' => 0,\n                                                                           'dircount' => 0,\n                                                                           'uncommit' => undef,\n                                                                           'error' => undef,\n                                                                           'patcount' => 1,\n                                                                           'actcount' => 0,\n                                                                           'items' => [\n                                                                                        bless( {\n                                                                                                 'pattern' => '.*',\n                                                                                                 'hashname' => '__PATTERN1__',\n                                                                                                 'description' => '/.*/s',\n                                                                                                 'lookahead' => 0,\n                                                                                                 'rdelim' => '/',\n                                                                                                 'line' => 13,\n                                                                                                 'mod' => 's',\n                                                                                                 'ldelim' => '/'\n                                                                                               }, 'Parse::RecDescent::Token' )\n                                                                                      ],\n                                                                           'line' => undef\n                                                                         }, 'Parse::RecDescent::Production' )\n                                                                ],\n                                                     'name' => 'anything',\n                                                     'vars' => '',\n                                                     'line' => 13\n                                                   }, 'Parse::RecDescent::Rule' ),\n                              'app_statement' => bless( {\n                                                          'impcount' => 0,\n                                                          'calls' => [\n                                                                       'keyword',\n                                                                       'arg_list',\n                                                                       'SEMI_COLON'\n                                                                     ],\n                                                          'changed' => 0,\n                                                          'opcount' => 0,\n                                                          'prods' => [\n                                                                       bless( {\n                                                                                'number' => '0',\n                                                                                'strcount' => 0,\n                                                                                'dircount' => 0,\n                                                                                'uncommit' => undef,\n                                                                                'error' => undef,\n                                                                                'patcount' => 0,\n                                                                                'actcount' => 1,\n                                                                                'items' => [\n                                                                                             bless( {\n                                                                                                      'subrule' => 'keyword',\n                                                                                                      'matchrule' => 0,\n                                                                                                      'implicit' => undef,\n                                                                                                      'argcode' => '[ \\'app\\' ]',\n                                                                                                      'lookahead' => 0,\n                                                                                                      'line' => 87\n                                                                                                    }, 'Parse::RecDescent::Subrule' ),\n                                                                                             bless( {\n                                                                                                      'subrule' => 'arg_list',\n                                                                                                      'expected' => undef,\n                                                                                                      'min' => 0,\n                                                                                                      'argcode' => undef,\n                                                                                                      'max' => 1,\n                                                                                                      'matchrule' => 0,\n                                                                                                      'repspec' => '?',\n                                                                                                      'lookahead' => 0,\n                                                                                                      'line' => 87\n                                                                                                    }, 'Parse::RecDescent::Repetition' ),\n                                                                                             bless( {\n                                                                                                      'subrule' => 'SEMI_COLON',\n                                                                                                      'matchrule' => 0,\n                                                                                                      'implicit' => undef,\n                                                                                                      'argcode' => undef,\n                                                                                                      'lookahead' => 0,\n                                                                                                      'line' => 87\n                                                                                                    }, 'Parse::RecDescent::Subrule' ),\n                                                                                             bless( {\n                                                                                                      'hashname' => '__ACTION1__',\n                                                                                                      'lookahead' => 0,\n                                                                                                      'line' => 87,\n                                                                                                      'code' => '{\n                           bless {\n                               __KEYWORD__ => $item{keyword},\n                               __ARGS__    => $item{\\'arg_list(?)\\'}->[0],\n                           }, \\'app_statement\\'\n                }'\n                                                                                                    }, 'Parse::RecDescent::Action' )\n                                                                                           ],\n                                                                                'line' => undef\n                                                                              }, 'Parse::RecDescent::Production' )\n                                                                     ],\n                                                          'name' => 'app_statement',\n                                                          'vars' => '',\n                                                          'line' => 87\n                                                        }, 'Parse::RecDescent::Rule' ),\n                              'BACKTICK' => bless( {\n                                                     'impcount' => 0,\n                                                     'calls' => [],\n                                                     'changed' => 0,\n                                                     'opcount' => 0,\n                                                     'prods' => [\n                                                                  bless( {\n                                                                           'number' => '0',\n                                                                           'strcount' => 1,\n                                                                           'dircount' => 0,\n                                                                           'uncommit' => undef,\n                                                                           'error' => undef,\n                                                                           'patcount' => 0,\n                                                                           'actcount' => 1,\n                                                                           'items' => [\n                                                                                        bless( {\n                                                                                                 'pattern' => '`',\n                                                                                                 'hashname' => '__STRING1__',\n                                                                                                 'description' => '\\'`\\'',\n                                                                                                 'lookahead' => 0,\n                                                                                                 'line' => 416\n                                                                                               }, 'Parse::RecDescent::InterpLit' ),\n                                                                                        bless( {\n                                                                                                 'hashname' => '__ACTION1__',\n                                                                                                 'lookahead' => 0,\n                                                                                                 'line' => 416,\n                                                                                                 'code' => '{ $backtick_line = $thisline; }'\n                                                                                               }, 'Parse::RecDescent::Action' )\n                                                                                      ],\n                                                                           'line' => undef\n                                                                         }, 'Parse::RecDescent::Production' )\n                                                                ],\n                                                     'name' => 'BACKTICK',\n                                                     'vars' => '',\n                                                     'line' => 416\n                                                   }, 'Parse::RecDescent::Rule' ),\n                              'join_table_body' => bless( {\n                                                            'impcount' => 0,\n                                                            'calls' => [\n                                                                         'join_table_statement'\n                                                                       ],\n                                                            'changed' => 0,\n                                                            'opcount' => 0,\n                                                            'prods' => [\n                                                                         bless( {\n                                                                                  'number' => '0',\n                                                                                  'strcount' => 0,\n                                                                                  'dircount' => 0,\n                                                                                  'uncommit' => undef,\n                                                                                  'error' => undef,\n                                                                                  'patcount' => 0,\n                                                                                  'actcount' => 0,\n                                                                                  'items' => [\n                                                                                               bless( {\n                                                                                                        'subrule' => 'join_table_statement',\n                                                                                                        'expected' => undef,\n                                                                                                        'min' => 0,\n                                                                                                        'argcode' => undef,\n                                                                                                        'max' => 100000000,\n                                                                                                        'matchrule' => 0,\n                                                                                                        'repspec' => 's?',\n                                                                                                        'lookahead' => 0,\n                                                                                                        'line' => 311\n                                                                                                      }, 'Parse::RecDescent::Repetition' )\n                                                                                             ],\n                                                                                  'line' => undef\n                                                                                }, 'Parse::RecDescent::Production' )\n                                                                       ],\n                                                            'name' => 'join_table_body',\n                                                            'vars' => '',\n                                                            'line' => 311\n                                                          }, 'Parse::RecDescent::Rule' ),\n                              'literal_block' => bless( {\n                                                          'impcount' => 0,\n                                                          'calls' => [\n                                                                       'keyword',\n                                                                       'string',\n                                                                       'SEMI_COLON'\n                                                                     ],\n                                                          'changed' => 0,\n                                                          'opcount' => 0,\n                                                          'prods' => [\n                                                                       bless( {\n                                                                                'number' => '0',\n                                                                                'strcount' => 1,\n                                                                                'dircount' => 0,\n                                                                                'uncommit' => undef,\n                                                                                'error' => undef,\n                                                                                'patcount' => 0,\n                                                                                'actcount' => 1,\n                                                                                'items' => [\n                                                                                             bless( {\n                                                                                                      'pattern' => 'literal',\n                                                                                                      'hashname' => '__STRING1__',\n                                                                                                      'description' => '\\'literal\\'',\n                                                                                                      'lookahead' => 0,\n                                                                                                      'line' => 94\n                                                                                                    }, 'Parse::RecDescent::Literal' ),\n                                                                                             bless( {\n                                                                                                      'subrule' => 'keyword',\n                                                                                                      'matchrule' => 0,\n                                                                                                      'implicit' => undef,\n                                                                                                      'argcode' => '[ \\'app_literal\\' ]',\n                                                                                                      'lookahead' => 0,\n                                                                                                      'line' => 94\n                                                                                                    }, 'Parse::RecDescent::Subrule' ),\n                                                                                             bless( {\n                                                                                                      'subrule' => 'string',\n                                                                                                      'matchrule' => 0,\n                                                                                                      'implicit' => undef,\n                                                                                                      'argcode' => undef,\n                                                                                                      'lookahead' => 0,\n                                                                                                      'line' => 95\n                                                                                                    }, 'Parse::RecDescent::Subrule' ),\n                                                                                             bless( {\n                                                                                                      'subrule' => 'SEMI_COLON',\n                                                                                                      'matchrule' => 0,\n                                                                                                      'implicit' => undef,\n                                                                                                      'argcode' => undef,\n                                                                                                      'lookahead' => 0,\n                                                                                                      'line' => 95\n                                                                                                    }, 'Parse::RecDescent::Subrule' ),\n                                                                                             bless( {\n                                                                                                      'hashname' => '__ACTION1__',\n                                                                                                      'lookahead' => 0,\n                                                                                                      'line' => 95,\n                                                                                                      'code' => '{\n                    bless {\n                        __IDENT__   => Bigtop::Parser->get_ident(),\n                        __BACKEND__ => $item{ keyword },\n                        __BODY__    => $item{ string },\n                    }, \\'literal_block\\'\n                }'\n                                                                                                    }, 'Parse::RecDescent::Action' )\n                                                                                           ],\n                                                                                'line' => undef\n                                                                              }, 'Parse::RecDescent::Production' )\n                                                                     ],\n                                                          'name' => 'literal_block',\n                                                          'vars' => '',\n                                                          'line' => 94\n                                                        }, 'Parse::RecDescent::Rule' ),\n                              'field_statement' => bless( {\n                                                            'impcount' => 0,\n                                                            'calls' => [\n                                                                         'keyword',\n                                                                         'field_statement_def',\n                                                                         'SEMI_COLON'\n                                                                       ],\n                                                            'changed' => 0,\n                                                            'opcount' => 0,\n                                                            'prods' => [\n                                                                         bless( {\n                                                                                  'number' => '0',\n                                                                                  'strcount' => 0,\n                                                                                  'dircount' => 0,\n                                                                                  'uncommit' => undef,\n                                                                                  'error' => undef,\n                                                                                  'patcount' => 0,\n                                                                                  'actcount' => 1,\n                                                                                  'items' => [\n                                                                                               bless( {\n                                                                                                        'subrule' => 'keyword',\n                                                                                                        'matchrule' => 0,\n                                                                                                        'implicit' => undef,\n                                                                                                        'argcode' => '[\\'field\\']',\n                                                                                                        'lookahead' => 0,\n                                                                                                        'line' => 285\n                                                                                                      }, 'Parse::RecDescent::Subrule' ),\n                                                                                               bless( {\n                                                                                                        'subrule' => 'field_statement_def',\n                                                                                                        'matchrule' => 0,\n                                                                                                        'implicit' => undef,\n                                                                                                        'argcode' => undef,\n                                                                                                        'lookahead' => 0,\n                                                                                                        'line' => 285\n                                                                                                      }, 'Parse::RecDescent::Subrule' ),\n                                                                                               bless( {\n                                                                                                        'subrule' => 'SEMI_COLON',\n                                                                                                        'matchrule' => 0,\n                                                                                                        'implicit' => undef,\n                                                                                                        'argcode' => undef,\n                                                                                                        'lookahead' => 0,\n                                                                                                        'line' => 285\n                                                                                                      }, 'Parse::RecDescent::Subrule' ),\n                                                                                               bless( {\n                                                                                                        'hashname' => '__ACTION1__',\n                                                                                                        'lookahead' => 0,\n                                                                                                        'line' => 285,\n                                                                                                        'code' => '{\n                      bless {\n                          __KEYWORD__ => $item[1], __DEF__ => $item[2]\n                      }, \\'field_statement\\'\n                  }'\n                                                                                                      }, 'Parse::RecDescent::Action' )\n                                                                                             ],\n                                                                                  'line' => undef\n                                                                                }, 'Parse::RecDescent::Production' )\n                                                                       ],\n                                                            'name' => 'field_statement',\n                                                            'vars' => '',\n                                                            'line' => 285\n                                                          }, 'Parse::RecDescent::Rule' ),\n                              'method_statement' => bless( {\n                                                             'impcount' => 0,\n                                                             'calls' => [\n                                                                          'keyword',\n                                                                          'arg_list',\n                                                                          'SEMI_COLON'\n                                                                        ],\n                                                             'changed' => 0,\n                                                             'opcount' => 0,\n                                                             'prods' => [\n                                                                          bless( {\n                                                                                   'number' => '0',\n                                                                                   'strcount' => 0,\n                                                                                   'dircount' => 0,\n                                                                                   'uncommit' => undef,\n                                                                                   'error' => undef,\n                                                                                   'patcount' => 0,\n                                                                                   'actcount' => 1,\n                                                                                   'items' => [\n                                                                                                bless( {\n                                                                                                         'subrule' => 'keyword',\n                                                                                                         'matchrule' => 0,\n                                                                                                         'implicit' => undef,\n                                                                                                         'argcode' => '[\\'method\\']',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 204\n                                                                                                       }, 'Parse::RecDescent::Subrule' ),\n                                                                                                bless( {\n                                                                                                         'subrule' => 'arg_list',\n                                                                                                         'matchrule' => 0,\n                                                                                                         'implicit' => undef,\n                                                                                                         'argcode' => undef,\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 204\n                                                                                                       }, 'Parse::RecDescent::Subrule' ),\n                                                                                                bless( {\n                                                                                                         'subrule' => 'SEMI_COLON',\n                                                                                                         'matchrule' => 0,\n                                                                                                         'implicit' => undef,\n                                                                                                         'argcode' => undef,\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 204\n                                                                                                       }, 'Parse::RecDescent::Subrule' ),\n                                                                                                bless( {\n                                                                                                         'hashname' => '__ACTION1__',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 204,\n                                                                                                         'code' => '{\n                        bless {\n                            __KEYWORD__ => $item{keyword},\n                            __ARGS__    => $item{arg_list}\n                        }, \\'method_statement\\'\n                   }'\n                                                                                                       }, 'Parse::RecDescent::Action' )\n                                                                                              ],\n                                                                                   'line' => undef\n                                                                                 }, 'Parse::RecDescent::Production' )\n                                                                        ],\n                                                             'name' => 'method_statement',\n                                                             'vars' => '',\n                                                             'line' => 204\n                                                           }, 'Parse::RecDescent::Rule' ),\n                              'controller_body' => bless( {\n                                                            'impcount' => 0,\n                                                            'calls' => [\n                                                                         'controller_statement'\n                                                                       ],\n                                                            'changed' => 0,\n                                                            'opcount' => 0,\n                                                            'prods' => [\n                                                                         bless( {\n                                                                                  'number' => '0',\n                                                                                  'strcount' => 0,\n                                                                                  'dircount' => 0,\n                                                                                  'uncommit' => undef,\n                                                                                  'error' => undef,\n                                                                                  'patcount' => 0,\n                                                                                  'actcount' => 0,\n                                                                                  'items' => [\n                                                                                               bless( {\n                                                                                                        'subrule' => 'controller_statement',\n                                                                                                        'expected' => undef,\n                                                                                                        'min' => 0,\n                                                                                                        'argcode' => undef,\n                                                                                                        'max' => 100000000,\n                                                                                                        'matchrule' => 0,\n                                                                                                        'repspec' => 's?',\n                                                                                                        'lookahead' => 0,\n                                                                                                        'line' => 140\n                                                                                                      }, 'Parse::RecDescent::Repetition' )\n                                                                                             ],\n                                                                                  'line' => undef\n                                                                                }, 'Parse::RecDescent::Production' )\n                                                                       ],\n                                                            'name' => 'controller_body',\n                                                            'vars' => '',\n                                                            'line' => 140\n                                                          }, 'Parse::RecDescent::Rule' ),\n                              'keyword' => bless( {\n                                                    'impcount' => 0,\n                                                    'calls' => [\n                                                                 'IDENT'\n                                                               ],\n                                                    'changed' => 0,\n                                                    'opcount' => 0,\n                                                    'prods' => [\n                                                                 bless( {\n                                                                          'number' => '0',\n                                                                          'strcount' => 0,\n                                                                          'dircount' => 0,\n                                                                          'uncommit' => undef,\n                                                                          'error' => undef,\n                                                                          'patcount' => 0,\n                                                                          'actcount' => 1,\n                                                                          'items' => [\n                                                                                       bless( {\n                                                                                                'subrule' => 'IDENT',\n                                                                                                'matchrule' => 0,\n                                                                                                'implicit' => undef,\n                                                                                                'argcode' => undef,\n                                                                                                'lookahead' => 0,\n                                                                                                'line' => 356\n                                                                                              }, 'Parse::RecDescent::Subrule' ),\n                                                                                       bless( {\n                                                                                                'hashname' => '__ACTION1__',\n                                                                                                'lookahead' => 0,\n                                                                                                'line' => 356,\n                                                                                                'code' => '{\n    if ( Bigtop::Parser->is_valid_keyword( $arg[0], $item[1] ) ) {\n        $return = $item[1];\n    }\n    else {\n        my @expected = Bigtop::Parser->get_valid_keywords( $arg[0] );\n        Bigtop::Parser->fatal_keyword_error(\n            {\n                bad_keyword   => $item[1],\n                diag_text     => $text,\n                input_linenum => $thisline,\n                expected      => \\\\@expected,\n                type          => $arg[0],\n            }\n        );\n    }\n}'\n                                                                                              }, 'Parse::RecDescent::Action' )\n                                                                                     ],\n                                                                          'line' => undef\n                                                                        }, 'Parse::RecDescent::Production' )\n                                                               ],\n                                                    'name' => 'keyword',\n                                                    'vars' => '',\n                                                    'line' => 356\n                                                  }, 'Parse::RecDescent::Rule' ),\n                              'SEMI_COLON' => bless( {\n                                                       'impcount' => 0,\n                                                       'calls' => [],\n                                                       'changed' => 0,\n                                                       'opcount' => 0,\n                                                       'prods' => [\n                                                                    bless( {\n                                                                             'number' => '0',\n                                                                             'strcount' => 1,\n                                                                             'dircount' => 0,\n                                                                             'uncommit' => undef,\n                                                                             'error' => undef,\n                                                                             'patcount' => 0,\n                                                                             'actcount' => 0,\n                                                                             'items' => [\n                                                                                          bless( {\n                                                                                                   'pattern' => ';',\n                                                                                                   'hashname' => '__STRING1__',\n                                                                                                   'description' => '\\';\\'',\n                                                                                                   'lookahead' => 0,\n                                                                                                   'line' => 420\n                                                                                                 }, 'Parse::RecDescent::Literal' )\n                                                                                        ],\n                                                                             'line' => undef\n                                                                           }, 'Parse::RecDescent::Production' ),\n                                                                    bless( {\n                                                                             'number' => '1',\n                                                                             'strcount' => 0,\n                                                                             'dircount' => 0,\n                                                                             'uncommit' => undef,\n                                                                             'error' => undef,\n                                                                             'patcount' => 0,\n                                                                             'actcount' => 1,\n                                                                             'items' => [\n                                                                                          bless( {\n                                                                                                   'hashname' => '__ACTION1__',\n                                                                                                   'lookahead' => 0,\n                                                                                                   'line' => 421,\n                                                                                                   'code' => '{\n    my $message = \"missing semi-colon\";\n    if ( $backtick_warning ) {\n        $message .= \" ($backtick_warning)\";\n        $backtick_warning = \\'\\';\n    }\n    Bigtop::Parser->fatal_error_two_lines(\n        $message, $text, $thisline\n    );\n}'\n                                                                                                 }, 'Parse::RecDescent::Action' )\n                                                                                        ],\n                                                                             'line' => 421\n                                                                           }, 'Parse::RecDescent::Production' )\n                                                                  ],\n                                                       'name' => 'SEMI_COLON',\n                                                       'vars' => '',\n                                                       'line' => 420\n                                                     }, 'Parse::RecDescent::Rule' ),\n                              'app_config_block' => bless( {\n                                                             'impcount' => 0,\n                                                             'calls' => [\n                                                                          'CONFIG',\n                                                                          'IDENT',\n                                                                          'app_config_statement'\n                                                                        ],\n                                                             'changed' => 0,\n                                                             'opcount' => 0,\n                                                             'prods' => [\n                                                                          bless( {\n                                                                                   'number' => '0',\n                                                                                   'strcount' => 2,\n                                                                                   'dircount' => 0,\n                                                                                   'uncommit' => undef,\n                                                                                   'error' => undef,\n                                                                                   'patcount' => 0,\n                                                                                   'actcount' => 1,\n                                                                                   'items' => [\n                                                                                                bless( {\n                                                                                                         'subrule' => 'CONFIG',\n                                                                                                         'matchrule' => 0,\n                                                                                                         'implicit' => undef,\n                                                                                                         'argcode' => undef,\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 329\n                                                                                                       }, 'Parse::RecDescent::Subrule' ),\n                                                                                                bless( {\n                                                                                                         'subrule' => 'IDENT',\n                                                                                                         'expected' => undef,\n                                                                                                         'min' => 0,\n                                                                                                         'argcode' => undef,\n                                                                                                         'max' => 1,\n                                                                                                         'matchrule' => 0,\n                                                                                                         'repspec' => '?',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 329\n                                                                                                       }, 'Parse::RecDescent::Repetition' ),\n                                                                                                bless( {\n                                                                                                         'pattern' => '{',\n                                                                                                         'hashname' => '__STRING1__',\n                                                                                                         'description' => '\\'\\\\{\\'',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 329\n                                                                                                       }, 'Parse::RecDescent::Literal' ),\n                                                                                                bless( {\n                                                                                                         'subrule' => 'app_config_statement',\n                                                                                                         'expected' => undef,\n                                                                                                         'min' => 0,\n                                                                                                         'argcode' => undef,\n                                                                                                         'max' => 100000000,\n                                                                                                         'matchrule' => 0,\n                                                                                                         'repspec' => 's?',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 329\n                                                                                                       }, 'Parse::RecDescent::Repetition' ),\n                                                                                                bless( {\n                                                                                                         'pattern' => '}',\n                                                                                                         'hashname' => '__STRING2__',\n                                                                                                         'description' => '\\'\\\\}\\'',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 329\n                                                                                                       }, 'Parse::RecDescent::Literal' ),\n                                                                                                bless( {\n                                                                                                         'hashname' => '__ACTION1__',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 329,\n                                                                                                         'code' => '{\n                   bless {\n                       __IDENT__ => Bigtop::Parser->get_ident(),\n                       __BODY__ => $item{\\'app_config_statement(s?)\\'},\n                       __TYPE__ => $item{\\'IDENT(?)\\'}[0],\n                   }, \\'app_config_block\\'\n                }'\n                                                                                                       }, 'Parse::RecDescent::Action' )\n                                                                                              ],\n                                                                                   'line' => undef\n                                                                                 }, 'Parse::RecDescent::Production' )\n                                                                        ],\n                                                             'name' => 'app_config_block',\n                                                             'vars' => '',\n                                                             'line' => 329\n                                                           }, 'Parse::RecDescent::Rule' ),\n                              'controller_block' => bless( {\n                                                             'impcount' => 0,\n                                                             'calls' => [\n                                                                          'controller_body',\n                                                                          'module_ident',\n                                                                          'is_type'\n                                                                        ],\n                                                             'changed' => 0,\n                                                             'opcount' => 0,\n                                                             'prods' => [\n                                                                          bless( {\n                                                                                   'number' => '0',\n                                                                                   'strcount' => 5,\n                                                                                   'dircount' => 0,\n                                                                                   'uncommit' => undef,\n                                                                                   'error' => undef,\n                                                                                   'patcount' => 0,\n                                                                                   'actcount' => 1,\n                                                                                   'items' => [\n                                                                                                bless( {\n                                                                                                         'pattern' => 'controller',\n                                                                                                         'hashname' => '__STRING1__',\n                                                                                                         'description' => '\\'controller\\'',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 103\n                                                                                                       }, 'Parse::RecDescent::Literal' ),\n                                                                                                bless( {\n                                                                                                         'pattern' => 'is',\n                                                                                                         'hashname' => '__STRING2__',\n                                                                                                         'description' => '\\'is\\'',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 103\n                                                                                                       }, 'Parse::RecDescent::Literal' ),\n                                                                                                bless( {\n                                                                                                         'pattern' => 'base_controller',\n                                                                                                         'hashname' => '__STRING3__',\n                                                                                                         'description' => '\\'base_controller\\'',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 103\n                                                                                                       }, 'Parse::RecDescent::Literal' ),\n                                                                                                bless( {\n                                                                                                         'pattern' => '{',\n                                                                                                         'hashname' => '__STRING4__',\n                                                                                                         'description' => '\\'\\\\{\\'',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 103\n                                                                                                       }, 'Parse::RecDescent::Literal' ),\n                                                                                                bless( {\n                                                                                                         'subrule' => 'controller_body',\n                                                                                                         'matchrule' => 0,\n                                                                                                         'implicit' => undef,\n                                                                                                         'argcode' => '[ \\'base_controller\\' ]',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 104\n                                                                                                       }, 'Parse::RecDescent::Subrule' ),\n                                                                                                bless( {\n                                                                                                         'pattern' => '}',\n                                                                                                         'hashname' => '__STRING5__',\n                                                                                                         'description' => '\\'\\\\}\\'',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 105\n                                                                                                       }, 'Parse::RecDescent::Literal' ),\n                                                                                                bless( {\n                                                                                                         'hashname' => '__ACTION1__',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 105,\n                                                                                                         'code' => '{\n                        bless {\n                            __IDENT__ => Bigtop::Parser->get_ident(),\n                            __BODY__  => $item{controller_body}\n                                              {\\'controller_statement(s?)\\'},\n                            __NAME__  => \\'base_controller\\',\n                            __TYPE__  => \\'base_controller\\',\n                        }, \\'controller_block\\'\n                    }'\n                                                                                                       }, 'Parse::RecDescent::Action' )\n                                                                                              ],\n                                                                                   'line' => undef\n                                                                                 }, 'Parse::RecDescent::Production' ),\n                                                                          bless( {\n                                                                                   'number' => '1',\n                                                                                   'strcount' => 3,\n                                                                                   'dircount' => 0,\n                                                                                   'uncommit' => undef,\n                                                                                   'error' => undef,\n                                                                                   'patcount' => 0,\n                                                                                   'actcount' => 1,\n                                                                                   'items' => [\n                                                                                                bless( {\n                                                                                                         'pattern' => 'controller',\n                                                                                                         'hashname' => '__STRING1__',\n                                                                                                         'description' => '\\'controller\\'',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 114\n                                                                                                       }, 'Parse::RecDescent::Literal' ),\n                                                                                                bless( {\n                                                                                                         'subrule' => 'module_ident',\n                                                                                                         'matchrule' => 0,\n                                                                                                         'implicit' => undef,\n                                                                                                         'argcode' => undef,\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 114\n                                                                                                       }, 'Parse::RecDescent::Subrule' ),\n                                                                                                bless( {\n                                                                                                         'subrule' => 'is_type',\n                                                                                                         'expected' => undef,\n                                                                                                         'min' => 0,\n                                                                                                         'argcode' => undef,\n                                                                                                         'max' => 1,\n                                                                                                         'matchrule' => 0,\n                                                                                                         'repspec' => '?',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 114\n                                                                                                       }, 'Parse::RecDescent::Repetition' ),\n                                                                                                bless( {\n                                                                                                         'pattern' => '{',\n                                                                                                         'hashname' => '__STRING2__',\n                                                                                                         'description' => '\\'\\\\{\\'',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 114\n                                                                                                       }, 'Parse::RecDescent::Literal' ),\n                                                                                                bless( {\n                                                                                                         'subrule' => 'controller_body',\n                                                                                                         'matchrule' => 0,\n                                                                                                         'implicit' => undef,\n                                                                                                         'argcode' => '[ $item{module_ident} ]',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 115\n                                                                                                       }, 'Parse::RecDescent::Subrule' ),\n                                                                                                bless( {\n                                                                                                         'pattern' => '}',\n                                                                                                         'hashname' => '__STRING3__',\n                                                                                                         'description' => '\\'\\\\}\\'',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 116\n                                                                                                       }, 'Parse::RecDescent::Literal' ),\n                                                                                                bless( {\n                                                                                                         'hashname' => '__ACTION1__',\n                                                                                                         'lookahead' => 0,\n                                                                                                         'line' => 116,\n                                                                                                         'code' => '{\n                        if ( defined $item{\\'is_type(?)\\'}[0]\n                                and\n                             $item{\\'is_type(?)\\'}[0] eq \\'base_controller\\'\n                        ) {\n                            my $message = \"base_controller cannot have an \"\n                                        . \"explicit name\";\n                            my $diag_text = \"controller $item{module_ident} \"\n                                          . \"is base_controller\";\n                            Bigtop::Parser->fatal_error_two_lines(\n                                $message, $diag_text, $thisline\n                            );\n                        }\n                        bless {\n                            __IDENT__ => Bigtop::Parser->get_ident(),\n                            __NAME__  => $item{module_ident},\n                            __BODY__  => $item{controller_body}\n                                              {\\'controller_statement(s?)\\'},\n                            __TYPE__        => $item{\\'is_type(?)\\'}[0],\n                        }, \\'controller_block\\'\n                   }'\n                                                                                                       }, 'Parse::RecDescent::Action' )\n                                                                                              ],\n                                                                                   'line' => 114\n                                                                                 }, 'Parse::RecDescent::Production' )\n                                                                        ],\n                                                             'name' => 'controller_block',\n                                                             'vars' => '',\n                                                             'line' => 103\n                                                           }, 'Parse::RecDescent::Rule' ),\n                              'field_body' => bless( {\n                                                       'impcount' => 0,\n                                                       'calls' => [\n                                                                    'field_statement'\n                                                                  ],\n                                                       'changed' => 0,\n                                                       'opcount' => 0,\n                                                       'prods' => [\n                                                                    bless( {\n                                                                             'number' => '0',\n                                                                             'strcount' => 0,\n                                                                             'dircount' => 0,\n                                                                             'uncommit' => undef,\n                                                                             'error' => undef,\n                                                                             'patcount' => 0,\n                                                                             'actcount' => 0,\n                                                                             'items' => [\n                                                                                          bless( {\n                                                                                                   'subrule' => 'field_statement',\n                                                                                                   'expected' => undef,\n                                                                                                   'min' => 0,\n                                                                                                   'argcode' => undef,\n                                                                                                   'max' => 100000000,\n                                                                                                   'matchrule' => 0,\n                                                                                                   'repspec' => 's?',\n                                                                                                   'lookahead' => 0,\n                                                                                                   'line' => 283\n                                                                                                 }, 'Parse::RecDescent::Repetition' )\n                                                                                        ],\n                                                                             'line' => undef\n                                                                           }, 'Parse::RecDescent::Production' )\n                                                                  ],\n                                                       'name' => 'field_body',\n                                                       'vars' => '',\n                                                       'line' => 283\n                                                     }, 'Parse::RecDescent::Rule' ),\n                              'CONFIG' => bless( {\n                                                   'impcount' => 0,\n                                                   'calls' => [],\n                                                   'changed' => 0,\n                                                   'opcount' => 0,\n                                                   'prods' => [\n                                                                bless( {\n                                                                         'number' => '0',\n                                                                         'strcount' => 1,\n                                                                         'dircount' => 0,\n                                                                         'uncommit' => undef,\n                                                                         'error' => undef,\n                                                                         'patcount' => 0,\n                                                                         'actcount' => 0,\n                                                                         'items' => [\n                                                                                      bless( {\n                                                                                               'pattern' => 'config',\n                                                                                               'hashname' => '__STRING1__',\n                                                                                               'description' => '\\'config\\'',\n                                                                                               'lookahead' => 0,\n                                                                                               'line' => 414\n                                                                                             }, 'Parse::RecDescent::Literal' )\n                                                                                    ],\n                                                                         'line' => undef\n                                                                       }, 'Parse::RecDescent::Production' ),\n                                                                bless( {\n                                                                         'number' => '1',\n                                                                         'strcount' => 1,\n                                                                         'dircount' => 0,\n                                                                         'uncommit' => undef,\n                                                                         'error' => undef,\n                                                                         'patcount' => 0,\n                                                                         'actcount' => 0,\n                                                                         'items' => [\n                                                                                      bless( {\n                                                                                               'pattern' => 'set_vars',\n                                                                                               'hashname' => '__STRING1__',\n                                                                                               'description' => '\\'set_vars\\'',\n                                                                                               'lookahead' => 0,\n                                                                                               'line' => 414\n                                                                                             }, 'Parse::RecDescent::Literal' )\n                                                                                    ],\n                                                                         'line' => 414\n                                                                       }, 'Parse::RecDescent::Production' )\n                                                              ],\n                                                   'name' => 'CONFIG',\n                                                   'vars' => '',\n                                                   'line' => 414\n                                                 }, 'Parse::RecDescent::Rule' ),\n                              'config_body' => bless( {\n                                                        'impcount' => 0,\n                                                        'calls' => [\n                                                                     'config_statement'\n                                                                   ],\n                                                        'changed' => 0,\n                                                        'opcount' => 0,\n                                                        'prods' => [\n                                                                     bless( {\n                                                                              'number' => '0',\n                                                                              'strcount' => 0,\n                                                                              'dircount' => 0,\n                                                                              'uncommit' => undef,\n                                                                              'error' => undef,\n                                                                              'patcount' => 0,\n                                                                              'actcount' => 1,\n                                                                              'items' => [\n                                                                                           bless( {\n                                                                                                    'subrule' => 'config_statement',\n                                                                                                    'expected' => undef,\n                                                                                                    'min' => 0,\n                                                                                                    'argcode' => undef,\n                                                                                                    'max' => 100000000,\n                                                                                                    'matchrule' => 0,\n                                                                                                    'repspec' => 's?',\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 19\n                                                                                                  }, 'Parse::RecDescent::Repetition' ),\n                                                                                           bless( {\n                                                                                                    'hashname' => '__ACTION1__',\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 19,\n                                                                                                    'code' => '{\n    my %config;\n    my %backend_lookup;\n    my @statements;\n    foreach my $statement ( @{ $item{\\'config_statement(s?)\\'} } ) {\n        $config{ $statement->[0] } = $statement->[1];\n        push @statements, [ $statement->[0], $statement->[1] ];\n\n        if ( ref( $statement->[1] ) eq \\'HASH\\' ) {\n            push @{ $backend_lookup{ $statement->[0] } }, $statement->[1];\n        }\n    }\n    $config{__STATEMENTS__} = \\\\@statements;\n    $config{__BACKENDS__}   = \\\\%backend_lookup;\n    $return = \\\\%config;\n}'\n                                                                                                  }, 'Parse::RecDescent::Action' )\n                                                                                         ],\n                                                                              'line' => undef\n                                                                            }, 'Parse::RecDescent::Production' )\n                                                                   ],\n                                                        'name' => 'config_body',\n                                                        'vars' => '',\n                                                        'line' => 17\n                                                      }, 'Parse::RecDescent::Rule' ),\n                              'extra_sql_statement' => bless( {\n                                                                'impcount' => 0,\n                                                                'calls' => [\n                                                                             'keyword',\n                                                                             'extra_sql_statement_def',\n                                                                             'SEMI_COLON'\n                                                                           ],\n                                                                'changed' => 0,\n                                                                'opcount' => 0,\n                                                                'prods' => [\n                                                                             bless( {\n                                                                                      'number' => '0',\n                                                                                      'strcount' => 0,\n                                                                                      'dircount' => 0,\n                                                                                      'uncommit' => undef,\n                                                                                      'error' => undef,\n                                                                                      'patcount' => 0,\n                                                                                      'actcount' => 1,\n                                                                                      'items' => [\n                                                                                                   bless( {\n                                                                                                            'subrule' => 'keyword',\n                                                                                                            'matchrule' => 0,\n                                                                                                            'implicit' => undef,\n                                                                                                            'argcode' => '[\\'extra_sql\\']',\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 299\n                                                                                                          }, 'Parse::RecDescent::Subrule' ),\n                                                                                                   bless( {\n                                                                                                            'subrule' => 'extra_sql_statement_def',\n                                                                                                            'matchrule' => 0,\n                                                                                                            'implicit' => undef,\n                                                                                                            'argcode' => undef,\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 299\n                                                                                                          }, 'Parse::RecDescent::Subrule' ),\n                                                                                                   bless( {\n                                                                                                            'subrule' => 'SEMI_COLON',\n                                                                                                            'matchrule' => 0,\n                                                                                                            'implicit' => undef,\n                                                                                                            'argcode' => undef,\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 299\n                                                                                                          }, 'Parse::RecDescent::Subrule' ),\n                                                                                                   bless( {\n                                                                                                            'hashname' => '__ACTION1__',\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 299,\n                                                                                                            'code' => '{\n                        bless {\n                            __KEYWORD__ => $item[1], __DEF__ => $item[2]\n                        }, \\'extra_sql_statement\\'\n                      }'\n                                                                                                          }, 'Parse::RecDescent::Action' )\n                                                                                                 ],\n                                                                                      'line' => undef\n                                                                                    }, 'Parse::RecDescent::Production' )\n                                                                           ],\n                                                                'name' => 'extra_sql_statement',\n                                                                'vars' => '',\n                                                                'line' => 299\n                                                              }, 'Parse::RecDescent::Rule' ),\n                              'app_body' => bless( {\n                                                     'impcount' => 0,\n                                                     'calls' => [\n                                                                  'block'\n                                                                ],\n                                                     'changed' => 0,\n                                                     'opcount' => 0,\n                                                     'prods' => [\n                                                                  bless( {\n                                                                           'number' => '0',\n                                                                           'strcount' => 0,\n                                                                           'dircount' => 0,\n                                                                           'uncommit' => undef,\n                                                                           'error' => undef,\n                                                                           'patcount' => 0,\n                                                                           'actcount' => 0,\n                                                                           'items' => [\n                                                                                        bless( {\n                                                                                                 'subrule' => 'block',\n                                                                                                 'expected' => undef,\n                                                                                                 'min' => 0,\n                                                                                                 'argcode' => undef,\n                                                                                                 'max' => 100000000,\n                                                                                                 'matchrule' => 0,\n                                                                                                 'repspec' => 's?',\n                                                                                                 'lookahead' => 0,\n                                                                                                 'line' => 79\n                                                                                               }, 'Parse::RecDescent::Repetition' )\n                                                                                      ],\n                                                                           'line' => undef\n                                                                         }, 'Parse::RecDescent::Production' )\n                                                                ],\n                                                     'name' => 'app_body',\n                                                     'vars' => '',\n                                                     'line' => 79\n                                                   }, 'Parse::RecDescent::Rule' ),\n                              'arg_list' => bless( {\n                                                     'impcount' => 0,\n                                                     'calls' => [\n                                                                  'arg',\n                                                                  'arg_list'\n                                                                ],\n                                                     'changed' => 0,\n                                                     'opcount' => 0,\n                                                     'prods' => [\n                                                                  bless( {\n                                                                           'number' => '0',\n                                                                           'strcount' => 1,\n                                                                           'dircount' => 0,\n                                                                           'uncommit' => undef,\n                                                                           'error' => undef,\n                                                                           'patcount' => 0,\n                                                                           'actcount' => 1,\n                                                                           'items' => [\n                                                                                        bless( {\n                                                                                                 'subrule' => 'arg',\n                                                                                                 'matchrule' => 0,\n                                                                                                 'implicit' => undef,\n                                                                                                 'argcode' => undef,\n                                                                                                 'lookahead' => 0,\n                                                                                                 'line' => 374\n                                                                                               }, 'Parse::RecDescent::Subrule' ),\n                                                                                        bless( {\n                                                                                                 'pattern' => ',',\n                                                                                                 'hashname' => '__STRING1__',\n                                                                                                 'description' => '\\',\\'',\n                                                                                                 'lookahead' => 0,\n                                                                                                 'line' => 374\n                                                                                               }, 'Parse::RecDescent::Literal' ),\n                                                                                        bless( {\n                                                                                                 'subrule' => 'arg_list',\n                                                                                                 'matchrule' => 0,\n                                                                                                 'implicit' => undef,\n                                                                                                 'argcode' => undef,\n                                                                                                 'lookahead' => 0,\n                                                                                                 'line' => 374\n                                                                                               }, 'Parse::RecDescent::Subrule' ),\n                                                                                        bless( {\n                                                                                                 'hashname' => '__ACTION1__',\n                                                                                                 'lookahead' => 0,\n                                                                                                 'line' => 374,\n                                                                                                 'code' => '{\n               unshift @{ $item[3] }, $item[1];\n               $return = $item[3];\n           }'\n                                                                                               }, 'Parse::RecDescent::Action' )\n                                                                                      ],\n                                                                           'line' => undef\n                                                                         }, 'Parse::RecDescent::Production' ),\n                                                                  bless( {\n                                                                           'number' => '1',\n                                                                           'strcount' => 0,\n                                                                           'dircount' => 0,\n                                                                           'uncommit' => undef,\n                                                                           'error' => undef,\n                                                                           'patcount' => 0,\n                                                                           'actcount' => 1,\n                                                                           'items' => [\n                                                                                        bless( {\n                                                                                                 'subrule' => 'arg',\n                                                                                                 'matchrule' => 0,\n                                                                                                 'implicit' => undef,\n                                                                                                 'argcode' => undef,\n                                                                                                 'lookahead' => 0,\n                                                                                                 'line' => 378\n                                                                                               }, 'Parse::RecDescent::Subrule' ),\n                                                                                        bless( {\n                                                                                                 'hashname' => '__ACTION1__',\n                                                                                                 'lookahead' => 0,\n                                                                                                 'line' => 378,\n                                                                                                 'code' => '{ bless [ $item[1] ], \\'arg_list\\' }'\n                                                                                               }, 'Parse::RecDescent::Action' )\n                                                                                      ],\n                                                                           'line' => 378\n                                                                         }, 'Parse::RecDescent::Production' )\n                                                                ],\n                                                     'name' => 'arg_list',\n                                                     'vars' => '',\n                                                     'line' => 374\n                                                   }, 'Parse::RecDescent::Rule' ),\n                              'is_type' => bless( {\n                                                    'impcount' => 0,\n                                                    'calls' => [\n                                                                 'module_ident'\n                                                               ],\n                                                    'changed' => 0,\n                                                    'opcount' => 0,\n                                                    'prods' => [\n                                                                 bless( {\n                                                                          'number' => '0',\n                                                                          'strcount' => 1,\n                                                                          'dircount' => 0,\n                                                                          'uncommit' => undef,\n                                                                          'error' => undef,\n                                                                          'patcount' => 0,\n                                                                          'actcount' => 1,\n                                                                          'items' => [\n                                                                                       bless( {\n                                                                                                'pattern' => 'is',\n                                                                                                'hashname' => '__STRING1__',\n                                                                                                'description' => '\\'is\\'',\n                                                                                                'lookahead' => 0,\n                                                                                                'line' => 138\n                                                                                              }, 'Parse::RecDescent::Literal' ),\n                                                                                       bless( {\n                                                                                                'subrule' => 'module_ident',\n                                                                                                'matchrule' => 0,\n                                                                                                'implicit' => undef,\n                                                                                                'argcode' => undef,\n                                                                                                'lookahead' => 0,\n                                                                                                'line' => 138\n                                                                                              }, 'Parse::RecDescent::Subrule' ),\n                                                                                       bless( {\n                                                                                                'hashname' => '__ACTION1__',\n                                                                                                'lookahead' => 0,\n                                                                                                'line' => 138,\n                                                                                                'code' => '{ $item{module_ident} }'\n                                                                                              }, 'Parse::RecDescent::Action' )\n                                                                                     ],\n                                                                          'line' => undef\n                                                                        }, 'Parse::RecDescent::Production' )\n                                                               ],\n                                                    'name' => 'is_type',\n                                                    'vars' => '',\n                                                    'line' => 138\n                                                  }, 'Parse::RecDescent::Rule' ),\n                              'table_element_block' => bless( {\n                                                                'impcount' => 0,\n                                                                'calls' => [\n                                                                             'IDENT',\n                                                                             'field_body',\n                                                                             'extra_sql_body',\n                                                                             'keyword',\n                                                                             'arg_list',\n                                                                             'SEMI_COLON'\n                                                                           ],\n                                                                'changed' => 0,\n                                                                'opcount' => 0,\n                                                                'prods' => [\n                                                                             bless( {\n                                                                                      'number' => '0',\n                                                                                      'strcount' => 3,\n                                                                                      'dircount' => 1,\n                                                                                      'uncommit' => undef,\n                                                                                      'error' => undef,\n                                                                                      'patcount' => 0,\n                                                                                      'actcount' => 1,\n                                                                                      'items' => [\n                                                                                                   bless( {\n                                                                                                            'pattern' => 'field',\n                                                                                                            'hashname' => '__STRING1__',\n                                                                                                            'description' => '\\'field\\'',\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 255\n                                                                                                          }, 'Parse::RecDescent::Literal' ),\n                                                                                                   bless( {\n                                                                                                            'hashname' => '__DIRECTIVE1__',\n                                                                                                            'name' => '<commit>',\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 255,\n                                                                                                            'code' => '$commit = 1'\n                                                                                                          }, 'Parse::RecDescent::Directive' ),\n                                                                                                   bless( {\n                                                                                                            'subrule' => 'IDENT',\n                                                                                                            'matchrule' => 0,\n                                                                                                            'implicit' => undef,\n                                                                                                            'argcode' => undef,\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 255\n                                                                                                          }, 'Parse::RecDescent::Subrule' ),\n                                                                                                   bless( {\n                                                                                                            'pattern' => '{',\n                                                                                                            'hashname' => '__STRING2__',\n                                                                                                            'description' => '\\'\\\\{\\'',\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 255\n                                                                                                          }, 'Parse::RecDescent::Literal' ),\n                                                                                                   bless( {\n                                                                                                            'subrule' => 'field_body',\n                                                                                                            'matchrule' => 0,\n                                                                                                            'implicit' => undef,\n                                                                                                            'argcode' => undef,\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 255\n                                                                                                          }, 'Parse::RecDescent::Subrule' ),\n                                                                                                   bless( {\n                                                                                                            'pattern' => '}',\n                                                                                                            'hashname' => '__STRING3__',\n                                                                                                            'description' => '\\'\\\\}\\'',\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 255\n                                                                                                          }, 'Parse::RecDescent::Literal' ),\n                                                                                                   bless( {\n                                                                                                            'hashname' => '__ACTION1__',\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 255,\n                                                                                                            'code' => '{\n                           bless {\n                               __IDENT__ => Bigtop::Parser->get_ident(),\n                               __TYPE__  => \\'field\\',\n                               __NAME__  => $item{IDENT},\n                               __BODY__  =>\n                                    $item{field_body}{\\'field_statement(s?)\\'},\n                           }, \\'table_element_block\\'\n                       }'\n                                                                                                          }, 'Parse::RecDescent::Action' )\n                                                                                                 ],\n                                                                                      'line' => undef\n                                                                                    }, 'Parse::RecDescent::Production' ),\n                                                                             bless( {\n                                                                                      'number' => '1',\n                                                                                      'strcount' => 3,\n                                                                                      'dircount' => 1,\n                                                                                      'uncommit' => undef,\n                                                                                      'error' => undef,\n                                                                                      'patcount' => 0,\n                                                                                      'actcount' => 1,\n                                                                                      'items' => [\n                                                                                                   bless( {\n                                                                                                            'pattern' => 'extra_sql',\n                                                                                                            'hashname' => '__STRING1__',\n                                                                                                            'description' => '\\'extra_sql\\'',\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 264\n                                                                                                          }, 'Parse::RecDescent::Literal' ),\n                                                                                                   bless( {\n                                                                                                            'hashname' => '__DIRECTIVE1__',\n                                                                                                            'name' => '<commit>',\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 264,\n                                                                                                            'code' => '$commit = 1'\n                                                                                                          }, 'Parse::RecDescent::Directive' ),\n                                                                                                   bless( {\n                                                                                                            'subrule' => 'IDENT',\n                                                                                                            'matchrule' => 0,\n                                                                                                            'implicit' => undef,\n                                                                                                            'argcode' => undef,\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 264\n                                                                                                          }, 'Parse::RecDescent::Subrule' ),\n                                                                                                   bless( {\n                                                                                                            'pattern' => '{',\n                                                                                                            'hashname' => '__STRING2__',\n                                                                                                            'description' => '\\'\\\\{\\'',\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 264\n                                                                                                          }, 'Parse::RecDescent::Literal' ),\n                                                                                                   bless( {\n                                                                                                            'subrule' => 'extra_sql_body',\n                                                                                                            'matchrule' => 0,\n                                                                                                            'implicit' => undef,\n                                                                                                            'argcode' => undef,\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 264\n                                                                                                          }, 'Parse::RecDescent::Subrule' ),\n                                                                                                   bless( {\n                                                                                                            'pattern' => '}',\n                                                                                                            'hashname' => '__STRING3__',\n                                                                                                            'description' => '\\'\\\\}\\'',\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 264\n                                                                                                          }, 'Parse::RecDescent::Literal' ),\n                                                                                                   bless( {\n                                                                                                            'hashname' => '__ACTION1__',\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 264,\n                                                                                                            'code' => '{\n                           bless {\n                               __IDENT__ => Bigtop::Parser->get_ident(),\n                               __TYPE__  => \\'extra_sql\\',\n                               __NAME__  => $item{IDENT},\n                               __BODY__  =>\n                                    $item{extra_sql_body}\n                                         {\\'extra_sql_statement(s?)\\'},\n                           }, \\'extra_sql_block\\'\n                       }'\n                                                                                                          }, 'Parse::RecDescent::Action' )\n                                                                                                 ],\n                                                                                      'line' => 264\n                                                                                    }, 'Parse::RecDescent::Production' ),\n                                                                             bless( {\n                                                                                      'number' => '2',\n                                                                                      'strcount' => 0,\n                                                                                      'dircount' => 0,\n                                                                                      'uncommit' => undef,\n                                                                                      'error' => undef,\n                                                                                      'patcount' => 0,\n                                                                                      'actcount' => 1,\n                                                                                      'items' => [\n                                                                                                   bless( {\n                                                                                                            'subrule' => 'keyword',\n                                                                                                            'matchrule' => 0,\n                                                                                                            'implicit' => undef,\n                                                                                                            'argcode' => '[\\'table\\']',\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 274\n                                                                                                          }, 'Parse::RecDescent::Subrule' ),\n                                                                                                   bless( {\n                                                                                                            'subrule' => 'arg_list',\n                                                                                                            'matchrule' => 0,\n                                                                                                            'implicit' => undef,\n                                                                                                            'argcode' => undef,\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 274\n                                                                                                          }, 'Parse::RecDescent::Subrule' ),\n                                                                                                   bless( {\n                                                                                                            'subrule' => 'SEMI_COLON',\n                                                                                                            'matchrule' => 0,\n                                                                                                            'implicit' => undef,\n                                                                                                            'argcode' => undef,\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 274\n                                                                                                          }, 'Parse::RecDescent::Subrule' ),\n                                                                                                   bless( {\n                                                                                                            'hashname' => '__ACTION1__',\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 274,\n                                                                                                            'code' => '{\n                           bless {\n                               __TYPE__  => $item[1],\n                               __ARGS__  => $item[2],\n                               __BODY__  => $item[1],\n                           }, \\'table_element_block\\'\n                       }'\n                                                                                                          }, 'Parse::RecDescent::Action' )\n                                                                                                 ],\n                                                                                      'line' => 274\n                                                                                    }, 'Parse::RecDescent::Production' ),\n                                                                             bless( {\n                                                                                      'number' => '3',\n                                                                                      'strcount' => 0,\n                                                                                      'dircount' => 1,\n                                                                                      'uncommit' => 0,\n                                                                                      'error' => 1,\n                                                                                      'patcount' => 0,\n                                                                                      'actcount' => 0,\n                                                                                      'items' => [\n                                                                                                   bless( {\n                                                                                                            'msg' => '',\n                                                                                                            'hashname' => '__DIRECTIVE1__',\n                                                                                                            'commitonly' => '',\n                                                                                                            'lookahead' => 0,\n                                                                                                            'line' => 281\n                                                                                                          }, 'Parse::RecDescent::Error' )\n                                                                                                 ],\n                                                                                      'line' => 281\n                                                                                    }, 'Parse::RecDescent::Production' )\n                                                                           ],\n                                                                'name' => 'table_element_block',\n                                                                'vars' => '',\n                                                                'line' => 255\n                                                              }, 'Parse::RecDescent::Rule' ),\n                              'text' => bless( {\n                                                 'impcount' => 0,\n                                                 'calls' => [],\n                                                 'changed' => 0,\n                                                 'opcount' => 0,\n                                                 'prods' => [\n                                                              bless( {\n                                                                       'number' => '0',\n                                                                       'strcount' => 0,\n                                                                       'dircount' => 0,\n                                                                       'uncommit' => undef,\n                                                                       'error' => undef,\n                                                                       'patcount' => 1,\n                                                                       'actcount' => 1,\n                                                                       'items' => [\n                                                                                    bless( {\n                                                                                             'pattern' => '[^`]*',\n                                                                                             'hashname' => '__PATTERN1__',\n                                                                                             'description' => '/[^`]*/',\n                                                                                             'lookahead' => 0,\n                                                                                             'rdelim' => '/',\n                                                                                             'line' => 404,\n                                                                                             'mod' => '',\n                                                                                             'ldelim' => '/'\n                                                                                           }, 'Parse::RecDescent::Token' ),\n                                                                                    bless( {\n                                                                                             'hashname' => '__ACTION1__',\n                                                                                             'lookahead' => 0,\n                                                                                             'line' => 404,\n                                                                                             'code' => '{\n    my @lines = split /\\\\n/, $item[1];\n    if ( @lines > 1 ) {\n        $backtick_warning\n            = \"possible run-away string beginning on line \"\n            . \"$backtick_line.\";\n    }\n    $item[1];\n}'\n                                                                                           }, 'Parse::RecDescent::Action' )\n                                                                                  ],\n                                                                       'line' => undef\n                                                                     }, 'Parse::RecDescent::Production' )\n                                                            ],\n                                                 'name' => 'text',\n                                                 'vars' => '',\n                                                 'line' => 404\n                                               }, 'Parse::RecDescent::Rule' ),\n                              'sequence_statement' => bless( {\n                                                               'impcount' => 0,\n                                                               'calls' => [\n                                                                            'IDENT',\n                                                                            'arg_list',\n                                                                            'SEMI_COLON'\n                                                                          ],\n                                                               'changed' => 0,\n                                                               'opcount' => 0,\n                                                               'prods' => [\n                                                                            bless( {\n                                                                                     'number' => '0',\n                                                                                     'strcount' => 0,\n                                                                                     'dircount' => 0,\n                                                                                     'uncommit' => undef,\n                                                                                     'error' => undef,\n                                                                                     'patcount' => 0,\n                                                                                     'actcount' => 1,\n                                                                                     'items' => [\n                                                                                                  bless( {\n                                                                                                           'subrule' => 'IDENT',\n                                                                                                           'matchrule' => 0,\n                                                                                                           'implicit' => undef,\n                                                                                                           'argcode' => undef,\n                                                                                                           'lookahead' => 0,\n                                                                                                           'line' => 247\n                                                                                                         }, 'Parse::RecDescent::Subrule' ),\n                                                                                                  bless( {\n                                                                                                           'subrule' => 'arg_list',\n                                                                                                           'matchrule' => 0,\n                                                                                                           'implicit' => undef,\n                                                                                                           'argcode' => undef,\n                                                                                                           'lookahead' => 0,\n                                                                                                           'line' => 247\n                                                                                                         }, 'Parse::RecDescent::Subrule' ),\n                                                                                                  bless( {\n                                                                                                           'subrule' => 'SEMI_COLON',\n                                                                                                           'matchrule' => 0,\n                                                                                                           'implicit' => undef,\n                                                                                                           'argcode' => undef,\n                                                                                                           'lookahead' => 0,\n                                                                                                           'line' => 247\n                                                                                                         }, 'Parse::RecDescent::Subrule' ),\n                                                                                                  bless( {\n                                                                                                           'hashname' => '__ACTION1__',\n                                                                                                           'lookahead' => 0,\n                                                                                                           'line' => 247,\n                                                                                                           'code' => '{\n        bless {\n            __NAME__ => $item[1], __ARGS__ => $item{arg_list}\n        }, \\'sequence_statement\\'\n    }'\n                                                                                                         }, 'Parse::RecDescent::Action' )\n                                                                                                ],\n                                                                                     'line' => undef\n                                                                                   }, 'Parse::RecDescent::Production' )\n                                                                          ],\n                                                               'name' => 'sequence_statement',\n                                                               'vars' => '',\n                                                               'line' => 246\n                                                             }, 'Parse::RecDescent::Rule' ),\n                              'module_ident' => bless( {\n                                                         'impcount' => 0,\n                                                         'calls' => [\n                                                                      'IDENT',\n                                                                      'module_ident'\n                                                                    ],\n                                                         'changed' => 0,\n                                                         'opcount' => 0,\n                                                         'prods' => [\n                                                                      bless( {\n                                                                               'number' => '0',\n                                                                               'strcount' => 1,\n                                                                               'dircount' => 0,\n                                                                               'uncommit' => undef,\n                                                                               'error' => undef,\n                                                                               'patcount' => 0,\n                                                                               'actcount' => 1,\n                                                                               'items' => [\n                                                                                            bless( {\n                                                                                                     'subrule' => 'IDENT',\n                                                                                                     'matchrule' => 0,\n                                                                                                     'implicit' => undef,\n                                                                                                     'argcode' => undef,\n                                                                                                     'lookahead' => 0,\n                                                                                                     'line' => 399\n                                                                                                   }, 'Parse::RecDescent::Subrule' ),\n                                                                                            bless( {\n                                                                                                     'pattern' => '::',\n                                                                                                     'hashname' => '__STRING1__',\n                                                                                                     'description' => '\\'::\\'',\n                                                                                                     'lookahead' => 0,\n                                                                                                     'line' => 399\n                                                                                                   }, 'Parse::RecDescent::Literal' ),\n                                                                                            bless( {\n                                                                                                     'subrule' => 'module_ident',\n                                                                                                     'matchrule' => 0,\n                                                                                                     'implicit' => undef,\n                                                                                                     'argcode' => undef,\n                                                                                                     'lookahead' => 0,\n                                                                                                     'line' => 399\n                                                                                                   }, 'Parse::RecDescent::Subrule' ),\n                                                                                            bless( {\n                                                                                                     'hashname' => '__ACTION1__',\n                                                                                                     'lookahead' => 0,\n                                                                                                     'line' => 399,\n                                                                                                     'code' => '{ $item[1] . \\'::\\' . $item[3] }'\n                                                                                                   }, 'Parse::RecDescent::Action' )\n                                                                                          ],\n                                                                               'line' => undef\n                                                                             }, 'Parse::RecDescent::Production' ),\n                                                                      bless( {\n                                                                               'number' => '1',\n                                                                               'strcount' => 0,\n                                                                               'dircount' => 0,\n                                                                               'uncommit' => undef,\n                                                                               'error' => undef,\n                                                                               'patcount' => 0,\n                                                                               'actcount' => 1,\n                                                                               'items' => [\n                                                                                            bless( {\n                                                                                                     'subrule' => 'IDENT',\n                                                                                                     'matchrule' => 0,\n                                                                                                     'implicit' => undef,\n                                                                                                     'argcode' => undef,\n                                                                                                     'lookahead' => 0,\n                                                                                                     'line' => 400\n                                                                                                   }, 'Parse::RecDescent::Subrule' ),\n                                                                                            bless( {\n                                                                                                     'hashname' => '__ACTION1__',\n                                                                                                     'lookahead' => 0,\n                                                                                                     'line' => 400,\n                                                                                                     'code' => '{ $item[1] }'\n                                                                                                   }, 'Parse::RecDescent::Action' )\n                                                                                          ],\n                                                                               'line' => 400\n                                                                             }, 'Parse::RecDescent::Production' )\n                                                                    ],\n                                                         'name' => 'module_ident',\n                                                         'vars' => '',\n                                                         'line' => 399\n                                                       }, 'Parse::RecDescent::Rule' ),\n                              'bigtop_file' => bless( {\n                                                        'impcount' => 0,\n                                                        'calls' => [\n                                                                     'configuration',\n                                                                     'application'\n                                                                   ],\n                                                        'changed' => 0,\n                                                        'opcount' => 0,\n                                                        'prods' => [\n                                                                     bless( {\n                                                                              'number' => '0',\n                                                                              'strcount' => 0,\n                                                                              'dircount' => 0,\n                                                                              'uncommit' => undef,\n                                                                              'error' => undef,\n                                                                              'patcount' => 0,\n                                                                              'actcount' => 0,\n                                                                              'items' => [\n                                                                                           bless( {\n                                                                                                    'subrule' => 'configuration',\n                                                                                                    'matchrule' => 0,\n                                                                                                    'implicit' => undef,\n                                                                                                    'argcode' => undef,\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 15\n                                                                                                  }, 'Parse::RecDescent::Subrule' ),\n                                                                                           bless( {\n                                                                                                    'subrule' => 'application',\n                                                                                                    'matchrule' => 0,\n                                                                                                    'implicit' => undef,\n                                                                                                    'argcode' => undef,\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 15\n                                                                                                  }, 'Parse::RecDescent::Subrule' )\n                                                                                         ],\n                                                                              'line' => undef\n                                                                            }, 'Parse::RecDescent::Production' )\n                                                                   ],\n                                                        'name' => 'bigtop_file',\n                                                        'vars' => '',\n                                                        'line' => 15\n                                                      }, 'Parse::RecDescent::Rule' ),\n                              'sequence_body' => bless( {\n                                                          'impcount' => 0,\n                                                          'calls' => [\n                                                                       'sequence_statement'\n                                                                     ],\n                                                          'changed' => 0,\n                                                          'opcount' => 0,\n                                                          'prods' => [\n                                                                       bless( {\n                                                                                'number' => '0',\n                                                                                'strcount' => 0,\n                                                                                'dircount' => 0,\n                                                                                'uncommit' => undef,\n                                                                                'error' => undef,\n                                                                                'patcount' => 0,\n                                                                                'actcount' => 0,\n                                                                                'items' => [\n                                                                                             bless( {\n                                                                                                      'subrule' => 'sequence_statement',\n                                                                                                      'expected' => undef,\n                                                                                                      'min' => 0,\n                                                                                                      'argcode' => undef,\n                                                                                                      'max' => 100000000,\n                                                                                                      'matchrule' => 0,\n                                                                                                      'repspec' => 's?',\n                                                                                                      'lookahead' => 0,\n                                                                                                      'line' => 244\n                                                                                                    }, 'Parse::RecDescent::Repetition' )\n                                                                                           ],\n                                                                                'line' => undef\n                                                                              }, 'Parse::RecDescent::Production' )\n                                                                     ],\n                                                          'name' => 'sequence_body',\n                                                          'vars' => '',\n                                                          'line' => 244\n                                                        }, 'Parse::RecDescent::Rule' ),\n                              'application' => bless( {\n                                                        'impcount' => 0,\n                                                        'calls' => [\n                                                                     'module_ident',\n                                                                     'app_body'\n                                                                   ],\n                                                        'changed' => 0,\n                                                        'opcount' => 0,\n                                                        'prods' => [\n                                                                     bless( {\n                                                                              'number' => '0',\n                                                                              'strcount' => 3,\n                                                                              'dircount' => 0,\n                                                                              'uncommit' => undef,\n                                                                              'error' => undef,\n                                                                              'patcount' => 0,\n                                                                              'actcount' => 1,\n                                                                              'items' => [\n                                                                                           bless( {\n                                                                                                    'pattern' => 'app',\n                                                                                                    'hashname' => '__STRING1__',\n                                                                                                    'description' => '\\'app\\'',\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 61\n                                                                                                  }, 'Parse::RecDescent::Literal' ),\n                                                                                           bless( {\n                                                                                                    'subrule' => 'module_ident',\n                                                                                                    'matchrule' => 0,\n                                                                                                    'implicit' => undef,\n                                                                                                    'argcode' => undef,\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 61\n                                                                                                  }, 'Parse::RecDescent::Subrule' ),\n                                                                                           bless( {\n                                                                                                    'pattern' => '{',\n                                                                                                    'hashname' => '__STRING2__',\n                                                                                                    'description' => '\\'\\\\{\\'',\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 61\n                                                                                                  }, 'Parse::RecDescent::Literal' ),\n                                                                                           bless( {\n                                                                                                    'subrule' => 'app_body',\n                                                                                                    'matchrule' => 0,\n                                                                                                    'implicit' => undef,\n                                                                                                    'argcode' => undef,\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 61\n                                                                                                  }, 'Parse::RecDescent::Subrule' ),\n                                                                                           bless( {\n                                                                                                    'pattern' => '}',\n                                                                                                    'hashname' => '__STRING3__',\n                                                                                                    'description' => '\\'\\\\}\\'',\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 61\n                                                                                                  }, 'Parse::RecDescent::Literal' ),\n                                                                                           bless( {\n                                                                                                    'hashname' => '__ACTION1__',\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 61,\n                                                                                                    'code' => '{\n                  my $retval = bless {\n                      __NAME__ => $item{module_ident},\n                      __BODY__ => $item{app_body},\n                  }, \\'application\\';\n\n                  $retval->walk_postorder( \\'set_parent\\' );\n\n                  my $lookup_hash = $retval->walk_postorder(\n                        \\'build_lookup_hash\\'\n                  );\n\n                  $retval->{lookup} = { @{ $lookup_hash } };\n\n                  $retval;\n              }'\n                                                                                                  }, 'Parse::RecDescent::Action' )\n                                                                                         ],\n                                                                              'line' => undef\n                                                                            }, 'Parse::RecDescent::Production' ),\n                                                                     bless( {\n                                                                              'number' => '1',\n                                                                              'strcount' => 0,\n                                                                              'dircount' => 1,\n                                                                              'uncommit' => 0,\n                                                                              'error' => 1,\n                                                                              'patcount' => 0,\n                                                                              'actcount' => 0,\n                                                                              'items' => [\n                                                                                           bless( {\n                                                                                                    'msg' => '',\n                                                                                                    'hashname' => '__DIRECTIVE1__',\n                                                                                                    'commitonly' => '',\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 77\n                                                                                                  }, 'Parse::RecDescent::Error' )\n                                                                                         ],\n                                                                              'line' => 77\n                                                                            }, 'Parse::RecDescent::Production' )\n                                                                   ],\n                                                        'name' => 'application',\n                                                        'vars' => '',\n                                                        'line' => 61\n                                                      }, 'Parse::RecDescent::Rule' ),\n                              'controller_config_statement' => bless( {\n                                                                        'impcount' => 0,\n                                                                        'calls' => [\n                                                                                     'IDENT',\n                                                                                     'arg_list',\n                                                                                     'SEMI_COLON'\n                                                                                   ],\n                                                                        'changed' => 0,\n                                                                        'opcount' => 0,\n                                                                        'prods' => [\n                                                                                     bless( {\n                                                                                              'number' => '0',\n                                                                                              'strcount' => 0,\n                                                                                              'dircount' => 0,\n                                                                                              'uncommit' => undef,\n                                                                                              'error' => undef,\n                                                                                              'patcount' => 0,\n                                                                                              'actcount' => 1,\n                                                                                              'items' => [\n                                                                                                           bless( {\n                                                                                                                    'subrule' => 'IDENT',\n                                                                                                                    'matchrule' => 0,\n                                                                                                                    'implicit' => undef,\n                                                                                                                    'argcode' => undef,\n                                                                                                                    'lookahead' => 0,\n                                                                                                                    'line' => 181\n                                                                                                                  }, 'Parse::RecDescent::Subrule' ),\n                                                                                                           bless( {\n                                                                                                                    'subrule' => 'arg_list',\n                                                                                                                    'matchrule' => 0,\n                                                                                                                    'implicit' => undef,\n                                                                                                                    'argcode' => undef,\n                                                                                                                    'lookahead' => 0,\n                                                                                                                    'line' => 181\n                                                                                                                  }, 'Parse::RecDescent::Subrule' ),\n                                                                                                           bless( {\n                                                                                                                    'subrule' => 'SEMI_COLON',\n                                                                                                                    'matchrule' => 0,\n                                                                                                                    'implicit' => undef,\n                                                                                                                    'argcode' => undef,\n                                                                                                                    'lookahead' => 0,\n                                                                                                                    'line' => 181\n                                                                                                                  }, 'Parse::RecDescent::Subrule' ),\n                                                                                                           bless( {\n                                                                                                                    'hashname' => '__ACTION1__',\n                                                                                                                    'lookahead' => 0,\n                                                                                                                    'line' => 181,\n                                                                                                                    'code' => '{\n                        bless {\n                            __KEYWORD__ => $item{IDENT},\n                            __ARGS__    => $item{arg_list}\n                        }, \\'controller_config_statement\\'\n                    }'\n                                                                                                                  }, 'Parse::RecDescent::Action' )\n                                                                                                         ],\n                                                                                              'line' => undef\n                                                                                            }, 'Parse::RecDescent::Production' ),\n                                                                                     bless( {\n                                                                                              'number' => '1',\n                                                                                              'strcount' => 0,\n                                                                                              'dircount' => 0,\n                                                                                              'uncommit' => undef,\n                                                                                              'error' => undef,\n                                                                                              'patcount' => 1,\n                                                                                              'actcount' => 1,\n                                                                                              'items' => [\n                                                                                                           bless( {\n                                                                                                                    'pattern' => '[^\\\\}]',\n                                                                                                                    'hashname' => '__PATTERN1__',\n                                                                                                                    'description' => '/[^\\\\\\\\\\\\}]/',\n                                                                                                                    'lookahead' => 0,\n                                                                                                                    'rdelim' => '/',\n                                                                                                                    'line' => 187,\n                                                                                                                    'mod' => '',\n                                                                                                                    'ldelim' => '/'\n                                                                                                                  }, 'Parse::RecDescent::Token' ),\n                                                                                                           bless( {\n                                                                                                                    'hashname' => '__ACTION1__',\n                                                                                                                    'lookahead' => 0,\n                                                                                                                    'line' => 187,\n                                                                                                                    'code' => '{\n                            my $message = \"bad config statement, \"\n                                        . \"possible extra semicolon\";\n                            if ( $backtick_warning ) {\n                                $message .= \" ($backtick_warning)\";\n                                $backtick_warning = \\'\\';\n                            }\n                            my $diag_text = $item[1] . $text;\n                            Bigtop::Parser->fatal_error_two_lines(\n                                $message, $diag_text, $thisline\n                            );\n                      }'\n                                                                                                                  }, 'Parse::RecDescent::Action' )\n                                                                                                         ],\n                                                                                              'line' => 187\n                                                                                            }, 'Parse::RecDescent::Production' )\n                                                                                   ],\n                                                                        'name' => 'controller_config_statement',\n                                                                        'vars' => '',\n                                                                        'line' => 181\n                                                                      }, 'Parse::RecDescent::Rule' ),\n                              'block' => bless( {\n                                                  'impcount' => 0,\n                                                  'calls' => [\n                                                               'literal_block',\n                                                               'controller_block',\n                                                               'sql_block',\n                                                               'app_config_block',\n                                                               'app_statement'\n                                                             ],\n                                                  'changed' => 0,\n                                                  'opcount' => 0,\n                                                  'prods' => [\n                                                               bless( {\n                                                                        'number' => '0',\n                                                                        'strcount' => 0,\n                                                                        'dircount' => 0,\n                                                                        'uncommit' => undef,\n                                                                        'error' => undef,\n                                                                        'patcount' => 0,\n                                                                        'actcount' => 0,\n                                                                        'items' => [\n                                                                                     bless( {\n                                                                                              'subrule' => 'literal_block',\n                                                                                              'matchrule' => 0,\n                                                                                              'implicit' => undef,\n                                                                                              'argcode' => undef,\n                                                                                              'lookahead' => 0,\n                                                                                              'line' => 81\n                                                                                            }, 'Parse::RecDescent::Subrule' )\n                                                                                   ],\n                                                                        'line' => undef\n                                                                      }, 'Parse::RecDescent::Production' ),\n                                                               bless( {\n                                                                        'number' => '1',\n                                                                        'strcount' => 0,\n                                                                        'dircount' => 0,\n                                                                        'uncommit' => undef,\n                                                                        'error' => undef,\n                                                                        'patcount' => 0,\n                                                                        'actcount' => 0,\n                                                                        'items' => [\n                                                                                     bless( {\n                                                                                              'subrule' => 'controller_block',\n                                                                                              'matchrule' => 0,\n                                                                                              'implicit' => undef,\n                                                                                              'argcode' => undef,\n                                                                                              'lookahead' => 0,\n                                                                                              'line' => 82\n                                                                                            }, 'Parse::RecDescent::Subrule' )\n                                                                                   ],\n                                                                        'line' => 82\n                                                                      }, 'Parse::RecDescent::Production' ),\n                                                               bless( {\n                                                                        'number' => '2',\n                                                                        'strcount' => 0,\n                                                                        'dircount' => 0,\n                                                                        'uncommit' => undef,\n                                                                        'error' => undef,\n                                                                        'patcount' => 0,\n                                                                        'actcount' => 0,\n                                                                        'items' => [\n                                                                                     bless( {\n                                                                                              'subrule' => 'sql_block',\n                                                                                              'matchrule' => 0,\n                                                                                              'implicit' => undef,\n                                                                                              'argcode' => undef,\n                                                                                              'lookahead' => 0,\n                                                                                              'line' => 83\n                                                                                            }, 'Parse::RecDescent::Subrule' )\n                                                                                   ],\n                                                                        'line' => 83\n                                                                      }, 'Parse::RecDescent::Production' ),\n                                                               bless( {\n                                                                        'number' => '3',\n                                                                        'strcount' => 0,\n                                                                        'dircount' => 0,\n                                                                        'uncommit' => undef,\n                                                                        'error' => undef,\n                                                                        'patcount' => 0,\n                                                                        'actcount' => 0,\n                                                                        'items' => [\n                                                                                     bless( {\n                                                                                              'subrule' => 'app_config_block',\n                                                                                              'matchrule' => 0,\n                                                                                              'implicit' => undef,\n                                                                                              'argcode' => undef,\n                                                                                              'lookahead' => 0,\n                                                                                              'line' => 84\n                                                                                            }, 'Parse::RecDescent::Subrule' )\n                                                                                   ],\n                                                                        'line' => 84\n                                                                      }, 'Parse::RecDescent::Production' ),\n                                                               bless( {\n                                                                        'number' => '4',\n                                                                        'strcount' => 0,\n                                                                        'dircount' => 0,\n                                                                        'uncommit' => undef,\n                                                                        'error' => undef,\n                                                                        'patcount' => 0,\n                                                                        'actcount' => 0,\n                                                                        'items' => [\n                                                                                     bless( {\n                                                                                              'subrule' => 'app_statement',\n                                                                                              'matchrule' => 0,\n                                                                                              'implicit' => undef,\n                                                                                              'argcode' => undef,\n                                                                                              'lookahead' => 0,\n                                                                                              'line' => 85\n                                                                                            }, 'Parse::RecDescent::Subrule' )\n                                                                                   ],\n                                                                        'line' => 85\n                                                                      }, 'Parse::RecDescent::Production' )\n                                                             ],\n                                                  'name' => 'block',\n                                                  'vars' => '',\n                                                  'line' => 81\n                                                }, 'Parse::RecDescent::Rule' ),\n                              'sql_block' => bless( {\n                                                      'impcount' => 0,\n                                                      'calls' => [\n                                                                   'table_ident',\n                                                                   'sequence_body',\n                                                                   'table_body',\n                                                                   'join_table_body',\n                                                                   'IDENT'\n                                                                 ],\n                                                      'changed' => 0,\n                                                      'opcount' => 0,\n                                                      'prods' => [\n                                                                   bless( {\n                                                                            'number' => '0',\n                                                                            'strcount' => 3,\n                                                                            'dircount' => 1,\n                                                                            'uncommit' => undef,\n                                                                            'error' => undef,\n                                                                            'patcount' => 0,\n                                                                            'actcount' => 1,\n                                                                            'items' => [\n                                                                                         bless( {\n                                                                                                  'pattern' => 'sequence',\n                                                                                                  'hashname' => '__STRING1__',\n                                                                                                  'description' => '\\'sequence\\'',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 211\n                                                                                                }, 'Parse::RecDescent::Literal' ),\n                                                                                         bless( {\n                                                                                                  'hashname' => '__DIRECTIVE1__',\n                                                                                                  'name' => '<commit>',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 211,\n                                                                                                  'code' => '$commit = 1'\n                                                                                                }, 'Parse::RecDescent::Directive' ),\n                                                                                         bless( {\n                                                                                                  'subrule' => 'table_ident',\n                                                                                                  'matchrule' => 0,\n                                                                                                  'implicit' => undef,\n                                                                                                  'argcode' => undef,\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 211\n                                                                                                }, 'Parse::RecDescent::Subrule' ),\n                                                                                         bless( {\n                                                                                                  'pattern' => '{',\n                                                                                                  'hashname' => '__STRING2__',\n                                                                                                  'description' => '\\'\\\\{\\'',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 211\n                                                                                                }, 'Parse::RecDescent::Literal' ),\n                                                                                         bless( {\n                                                                                                  'subrule' => 'sequence_body',\n                                                                                                  'matchrule' => 0,\n                                                                                                  'implicit' => undef,\n                                                                                                  'argcode' => undef,\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 211\n                                                                                                }, 'Parse::RecDescent::Subrule' ),\n                                                                                         bless( {\n                                                                                                  'pattern' => '}',\n                                                                                                  'hashname' => '__STRING3__',\n                                                                                                  'description' => '\\'\\\\}\\'',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 211\n                                                                                                }, 'Parse::RecDescent::Literal' ),\n                                                                                         bless( {\n                                                                                                  'hashname' => '__ACTION1__',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 211,\n                                                                                                  'code' => '{\n                bless {\n                            __IDENT__ => Bigtop::Parser->get_ident(),\n                            __NAME__  => $item{table_ident},\n                            __TYPE__  => \\'sequences\\',\n                            __BODY__  => $item{sequence_body}\n                                              {\\'sequence_statement(s?)\\'},\n                }, \\'seq_block\\'\n            }'\n                                                                                                }, 'Parse::RecDescent::Action' )\n                                                                                       ],\n                                                                            'line' => undef\n                                                                          }, 'Parse::RecDescent::Production' ),\n                                                                   bless( {\n                                                                            'number' => '1',\n                                                                            'strcount' => 3,\n                                                                            'dircount' => 1,\n                                                                            'uncommit' => undef,\n                                                                            'error' => undef,\n                                                                            'patcount' => 0,\n                                                                            'actcount' => 1,\n                                                                            'items' => [\n                                                                                         bless( {\n                                                                                                  'pattern' => 'table',\n                                                                                                  'hashname' => '__STRING1__',\n                                                                                                  'description' => '\\'table\\'',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 220\n                                                                                                }, 'Parse::RecDescent::Literal' ),\n                                                                                         bless( {\n                                                                                                  'hashname' => '__DIRECTIVE1__',\n                                                                                                  'name' => '<commit>',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 220,\n                                                                                                  'code' => '$commit = 1'\n                                                                                                }, 'Parse::RecDescent::Directive' ),\n                                                                                         bless( {\n                                                                                                  'subrule' => 'table_ident',\n                                                                                                  'matchrule' => 0,\n                                                                                                  'implicit' => undef,\n                                                                                                  'argcode' => undef,\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 220\n                                                                                                }, 'Parse::RecDescent::Subrule' ),\n                                                                                         bless( {\n                                                                                                  'pattern' => '{',\n                                                                                                  'hashname' => '__STRING2__',\n                                                                                                  'description' => '\\'\\\\{\\'',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 220\n                                                                                                }, 'Parse::RecDescent::Literal' ),\n                                                                                         bless( {\n                                                                                                  'subrule' => 'table_body',\n                                                                                                  'matchrule' => 0,\n                                                                                                  'implicit' => undef,\n                                                                                                  'argcode' => undef,\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 220\n                                                                                                }, 'Parse::RecDescent::Subrule' ),\n                                                                                         bless( {\n                                                                                                  'pattern' => '}',\n                                                                                                  'hashname' => '__STRING3__',\n                                                                                                  'description' => '\\'\\\\}\\'',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 220\n                                                                                                }, 'Parse::RecDescent::Literal' ),\n                                                                                         bless( {\n                                                                                                  'hashname' => '__ACTION1__',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 220,\n                                                                                                  'code' => '{\n                bless {\n                            __IDENT__ => Bigtop::Parser->get_ident(),\n                            __NAME__  => $item{table_ident},\n                            __TYPE__  => \\'tables\\',\n                            __BODY__  => $item{table_body}\n                                              {\\'table_element_block(s?)\\'},\n                }, \\'table_block\\'\n            }'\n                                                                                                }, 'Parse::RecDescent::Action' )\n                                                                                       ],\n                                                                            'line' => 220\n                                                                          }, 'Parse::RecDescent::Production' ),\n                                                                   bless( {\n                                                                            'number' => '2',\n                                                                            'strcount' => 3,\n                                                                            'dircount' => 1,\n                                                                            'uncommit' => undef,\n                                                                            'error' => undef,\n                                                                            'patcount' => 0,\n                                                                            'actcount' => 1,\n                                                                            'items' => [\n                                                                                         bless( {\n                                                                                                  'pattern' => 'join_table',\n                                                                                                  'hashname' => '__STRING1__',\n                                                                                                  'description' => '\\'join_table\\'',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 229\n                                                                                                }, 'Parse::RecDescent::Literal' ),\n                                                                                         bless( {\n                                                                                                  'hashname' => '__DIRECTIVE1__',\n                                                                                                  'name' => '<commit>',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 229,\n                                                                                                  'code' => '$commit = 1'\n                                                                                                }, 'Parse::RecDescent::Directive' ),\n                                                                                         bless( {\n                                                                                                  'subrule' => 'table_ident',\n                                                                                                  'matchrule' => 0,\n                                                                                                  'implicit' => undef,\n                                                                                                  'argcode' => undef,\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 229\n                                                                                                }, 'Parse::RecDescent::Subrule' ),\n                                                                                         bless( {\n                                                                                                  'pattern' => '{',\n                                                                                                  'hashname' => '__STRING2__',\n                                                                                                  'description' => '\\'\\\\{\\'',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 229\n                                                                                                }, 'Parse::RecDescent::Literal' ),\n                                                                                         bless( {\n                                                                                                  'subrule' => 'join_table_body',\n                                                                                                  'matchrule' => 0,\n                                                                                                  'implicit' => undef,\n                                                                                                  'argcode' => undef,\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 229\n                                                                                                }, 'Parse::RecDescent::Subrule' ),\n                                                                                         bless( {\n                                                                                                  'pattern' => '}',\n                                                                                                  'hashname' => '__STRING3__',\n                                                                                                  'description' => '\\'\\\\}\\'',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 229\n                                                                                                }, 'Parse::RecDescent::Literal' ),\n                                                                                         bless( {\n                                                                                                  'hashname' => '__ACTION1__',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 229,\n                                                                                                  'code' => '{\n                bless {\n                            __IDENT__ => Bigtop::Parser->get_ident(),\n                            __NAME__  => $item{table_ident},\n                            __BODY__  => $item{join_table_body}\n                                              {\\'join_table_statement(s?)\\'},\n                }, \\'join_table\\'\n            }'\n                                                                                                }, 'Parse::RecDescent::Action' )\n                                                                                       ],\n                                                                            'line' => 229\n                                                                          }, 'Parse::RecDescent::Production' ),\n                                                                   bless( {\n                                                                            'number' => '3',\n                                                                            'strcount' => 3,\n                                                                            'dircount' => 1,\n                                                                            'uncommit' => undef,\n                                                                            'error' => undef,\n                                                                            'patcount' => 0,\n                                                                            'actcount' => 1,\n                                                                            'items' => [\n                                                                                         bless( {\n                                                                                                  'pattern' => 'schema',\n                                                                                                  'hashname' => '__STRING1__',\n                                                                                                  'description' => '\\'schema\\'',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 237\n                                                                                                }, 'Parse::RecDescent::Literal' ),\n                                                                                         bless( {\n                                                                                                  'hashname' => '__DIRECTIVE1__',\n                                                                                                  'name' => '<commit>',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 237,\n                                                                                                  'code' => '$commit = 1'\n                                                                                                }, 'Parse::RecDescent::Directive' ),\n                                                                                         bless( {\n                                                                                                  'subrule' => 'IDENT',\n                                                                                                  'matchrule' => 0,\n                                                                                                  'implicit' => undef,\n                                                                                                  'argcode' => undef,\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 237\n                                                                                                }, 'Parse::RecDescent::Subrule' ),\n                                                                                         bless( {\n                                                                                                  'pattern' => '{',\n                                                                                                  'hashname' => '__STRING2__',\n                                                                                                  'description' => '\\'\\\\{\\'',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 237\n                                                                                                }, 'Parse::RecDescent::Literal' ),\n                                                                                         bless( {\n                                                                                                  'pattern' => '}',\n                                                                                                  'hashname' => '__STRING3__',\n                                                                                                  'description' => '\\'\\\\}\\'',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 237\n                                                                                                }, 'Parse::RecDescent::Literal' ),\n                                                                                         bless( {\n                                                                                                  'hashname' => '__ACTION1__',\n                                                                                                  'lookahead' => 0,\n                                                                                                  'line' => 237,\n                                                                                                  'code' => '{\n                bless {\n                            __IDENT__ => Bigtop::Parser->get_ident(),\n                            __NAME__  => $item{ IDENT },\n                }, \\'schema_block\\'\n            }'\n                                                                                                }, 'Parse::RecDescent::Action' )\n                                                                                       ],\n                                                                            'line' => 237\n                                                                          }, 'Parse::RecDescent::Production' )\n                                                                 ],\n                                                      'name' => 'sql_block',\n                                                      'vars' => '',\n                                                      'line' => 211\n                                                    }, 'Parse::RecDescent::Rule' ),\n                              'extra_sql_body' => bless( {\n                                                           'impcount' => 0,\n                                                           'calls' => [\n                                                                        'extra_sql_statement'\n                                                                      ],\n                                                           'changed' => 0,\n                                                           'opcount' => 0,\n                                                           'prods' => [\n                                                                        bless( {\n                                                                                 'number' => '0',\n                                                                                 'strcount' => 0,\n                                                                                 'dircount' => 0,\n                                                                                 'uncommit' => undef,\n                                                                                 'error' => undef,\n                                                                                 'patcount' => 0,\n                                                                                 'actcount' => 0,\n                                                                                 'items' => [\n                                                                                              bless( {\n                                                                                                       'subrule' => 'extra_sql_statement',\n                                                                                                       'expected' => undef,\n                                                                                                       'min' => 0,\n                                                                                                       'argcode' => undef,\n                                                                                                       'max' => 100000000,\n                                                                                                       'matchrule' => 0,\n                                                                                                       'repspec' => 's?',\n                                                                                                       'lookahead' => 0,\n                                                                                                       'line' => 297\n                                                                                                     }, 'Parse::RecDescent::Repetition' )\n                                                                                            ],\n                                                                                 'line' => undef\n                                                                               }, 'Parse::RecDescent::Production' )\n                                                                      ],\n                                                           'name' => 'extra_sql_body',\n                                                           'vars' => '',\n                                                           'line' => 297\n                                                         }, 'Parse::RecDescent::Rule' ),\n                              'method_body' => bless( {\n                                                        'impcount' => 0,\n                                                        'calls' => [\n                                                                     'method_statement'\n                                                                   ],\n                                                        'changed' => 0,\n                                                        'opcount' => 0,\n                                                        'prods' => [\n                                                                     bless( {\n                                                                              'number' => '0',\n                                                                              'strcount' => 0,\n                                                                              'dircount' => 0,\n                                                                              'uncommit' => undef,\n                                                                              'error' => undef,\n                                                                              'patcount' => 0,\n                                                                              'actcount' => 0,\n                                                                              'items' => [\n                                                                                           bless( {\n                                                                                                    'subrule' => 'method_statement',\n                                                                                                    'expected' => undef,\n                                                                                                    'min' => 0,\n                                                                                                    'argcode' => undef,\n                                                                                                    'max' => 100000000,\n                                                                                                    'matchrule' => 0,\n                                                                                                    'repspec' => 's?',\n                                                                                                    'lookahead' => 0,\n                                                                                                    'line' => 202\n                                                                                                  }, 'Parse::RecDescent::Repetition' )\n                                                                                         ],\n                                                                              'line' => undef\n                                                                            }, 'Parse::RecDescent::Production' )\n                                                                   ],\n                                                        'name' => 'method_body',\n                                                        'vars' => '',\n                                                        'line' => 202\n                                                      }, 'Parse::RecDescent::Rule' )\n                            }\n               }, 'Parse::RecDescent' );\n}",
      "file" : "/var/tmp/arv_XvsJqn/Bigtop-0.38/lib/Bigtop/Grammar.pm",
      "package" : "Bigtop::Grammar"
   }
]
