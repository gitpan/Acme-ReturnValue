[
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "method install ($class: %args) {\n    croak q{You cannot use 'simple' as a syntax extension. You need to }\n        . q{select a specific version, for example 'simple/v1'}\n        if $class eq __PACKAGE__;\n    my $target     = $args{into};\n    my @extensions = $class->_available_extensions;\n    $class->_setup_extension($_, $target)\n        for @extensions;\n    return 1;\n}\n\nmethod _check_is_moose_param_role ($class: $target) {\n    return $class->_check_meta_isa($target, $role_meta);\n}\n\nmethod _check_has_meta ($class: $target) {\n    return $INC{'Moose.pm'}\n        ? do { require Moose::Util; Moose::Util::find_meta($target) }\n        : undef;\n}\n\nmethod _check_meta_isa ($class: $target, $check) {\n    my $meta = $class->_check_has_meta($target)\n        or return undef;\n    return $meta->isa($check);\n}\n\nmethod _setup_extension ($class: $extension, $target) {\n    my $setup_method = \"_setup_${extension}_ext\";\n    my $check_method = \"_can${setup_method}\";\n    return undef\n        if $class->can($check_method)\n           and not $class->$check_method($target);\n    return $class->$setup_method($target);\n}\n\nmethod _setup_moose_param_role_body_sugar_ext ($class: $target) {\n    Syntax::Feature::Sugar::Callbacks->install(\n        into    => $target,\n        options => {\n            -invocant   => '',\n            -callbacks  => {\n                role    => {\n                    -only_anon  => 1,\n                    -stmt       => 1,\n                    -default    => ['$parameter'],\n                },\n            },\n        },\n    );\n}\n\nmethod _setup_function_keyword_ext ($class: $target) {\n    Syntax::Feature::Function->install(\n        into    => $target,\n        options => { -as => 'fun' },\n    );\n    return 1;\n}\n\nmethod _setup_moose_param_role_method_sugar_ext ($class: $target) {\n    my $orig = $target->can('method')\n        or croak qq{There is no 'method' callback installed in '$target'};\n    reinstall_sub {\n        into    => $target,\n        as      => 'method',\n        code    => sub {\n            return $_[0] if ref $_[0] eq 'CODE';\n            goto $orig;\n        },\n    };\n    Syntax::Feature::Sugar::Callbacks->install(\n        into    => $target,\n        options => {\n            -invocant   => '$self',\n            -callbacks  => {\n                method  => { -allow_anon => 1 },\n            },\n        },\n    );\n    return 1;\n}\n\nmethod _setup_method_keyword_ext ($class: $target) {\n    Syntax::Feature::Method->install(\n        into    => $target,\n        options => { -as => 'method' },\n    );\n    return 1;\n}\n\nmethod _setup_modifier_sugar_ext ($class: $target) {\n    Syntax::Feature::Sugar::Callbacks->install(\n        into    => $target,\n        options => {\n            -invocant   => '$self',\n            -callbacks  => {\n                before  => {},\n                after   => {},\n                around  => { -before => ['$orig'] },\n            },\n        },\n    );\n    return 1;\n}\n\n1",
      "file" : "/var/tmp/arv_sECc4z/Syntax-Feature-Simple-0.002/lib/Syntax/Feature/Simple.pm",
      "package" : "Syntax::Feature::Simple"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "method _available_extensions {\n    return qw(\n        function_keyword\n        moose_param_role_method_sugar\n        method_keyword\n        modifier_sugar\n        moose_param_role_body_sugar\n    );\n}\n\nmethod _can_setup_moose_param_role_body_sugar_ext ($class: $target) {\n    $class->_check_is_moose_param_role($target)\n}\n\nmethod _can_setup_method_keyword_ext ($class: $target) {\n    not $class->_check_is_moose_param_role($target)\n}\n\n1",
      "file" : "/var/tmp/arv_sECc4z/Syntax-Feature-Simple-0.002/lib/Syntax/Feature/Simple/V2.pm",
      "package" : "Syntax::Feature::Simple::V2"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "method _available_extensions {\n    return qw(\n        function_keyword\n        moose_param_role_method_sugar\n        method_keyword\n        modifier_sugar\n    );\n}\n\nmethod _can_setup_moose_param_role_method_sugar_ext ($class: $target) {\n    $class->_check_is_moose_param_role($target)\n}\n\nmethod _can_setup_method_keyword_ext ($class: $target) {\n    $class->_check_has_meta($target)\n    and not\n    $class->_check_is_moose_param_role($target)\n}\n\nmethod _can_setup_modifier_sugar_ext ($class: $target) {\n    $class->_check_has_meta($target)\n}\n\n1",
      "file" : "/var/tmp/arv_sECc4z/Syntax-Feature-Simple-0.002/lib/Syntax/Feature/Simple/V1.pm",
      "package" : "Syntax::Feature::Simple::V1"
   }
]
