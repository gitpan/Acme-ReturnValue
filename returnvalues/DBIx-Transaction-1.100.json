[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub _transaction {\n  my($self, $run) = @_;\n  my $rv;\n\n  $self->begin_work;\n\n  eval { $rv = $run->() };\n\n  if(my $re = $@) {\n    $self->rollback;\n    croak $re;\n  } elsif(!$rv) {\n    my $err = $self->err;\n    my $errstr = $self->errstr;\n    my $state = $self->state;\n    $self->rollback;\n    $self->set_err($err, $errstr, $state);\n  } else {\n    $self->commit;\n  }\n\n  return $rv;    \n}",
      "file" : "/var/tmp/arv_PhvM29/DBIx-Transaction-1.100/lib/DBIx/Transaction/db.pm",
      "package" : "DBIx::Transaction::db"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub execute {\n    my $self = shift;\n    my $rv = eval { DBI::st::execute($self, @_); };\n    if($@) {\n        $self->{Database}->inc_transaction_error(caller, $self->errstr);\n        croak \"$@\\n\";\n    }\n    if(!$rv) {\n        $self->{Database}->inc_transaction_error(caller, $self->errstr);\n    }\n    return $rv;\n}",
      "file" : "/var/tmp/arv_PhvM29/DBIx-Transaction-1.100/lib/DBIx/Transaction/st.pm",
      "package" : "DBIx::Transaction::st"
   }
]
