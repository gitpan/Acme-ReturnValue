[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub send {\n    my $self = shift;\n    my @items = @_;\n    my ($item, $enc_item);\n\n    if (defined($self->{'HCE'})) {\n\tforeach $item (@items) {\n\t    $enc_item = $self->{'HCE'}->hce_block_encode_mime($item);\n\t    print { $self->{'Socket'} } \"$enc_item\\n;\n\t}\n\t$enc_item = $self->{'HCE'}->hce_block_encode_mime(\"+END_OF_LIST\");\n\tprint { $self->{'Socket'} } \"$enc_item\\n\";\n    } else {\n\tforeach $item (@items) {\n#\t    syslog('debug','Client sending: %s',$item);\n\t    print { $self->{'Socket'} } \"$item\\n\";\n\t}\n\tprint { $self->{'Socket'} } \"+END_OF_LIST\\n\";\n    }\n    return 0;\n}\n\nsub recv {\n    my $self = shift;\n    my $fh = $self->{'Socket'};\n    my ($data, $dec_data);\n\n    if (defined($self->{'HCE'})) {\n\t$data = \"\";\n\tundef(@response);    \n\twhile (<$fh>) {\n\t    chomp;\n\t    $data = 1;\n#\t    syslog('debug','Client recv: %s', $_);\n\t    $dec_data = $self->{'HCE'}->hce_block_decode_mime($_);\n#\t    syslog('debug','Client decode: %s', $dec_data);\n\t    last if ($dec_data eq \"+END_OF_LIST\");\n\t    push @response, $dec_data;\n\t};\n\tif (!defined $data) {\n\t    close ($self->{'Socket'});\n\t    return $data;\n\t    \n\t} else {\n\t    close ($self->{'Socket'});\n\t    return @response;\n\t};\n    } else {\n\t$data = \"\";\n\tundef(@response);    \n\twhile (<$fh>) {\n\t    chomp;\n\t    $data = 1;\n\t    push @response, $_;\n\t};\n\tif (!defined $data) {\n\t    close ($self->{'Socket'});\n\t    return $data;\n\t} else {\n\t    close ($self->{'Socket'});\n\t    return @response;\n\t};\n    }\n}\n\n1;\n__END__\n\n#------- POD ------\n",
      "file" : "/var/tmp/arv_T1EWyH/Crypt-HCE_SHA-0.70/examples/Client.pm",
      "package" : "Client"
   }
]
