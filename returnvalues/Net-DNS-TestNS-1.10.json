[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub make_reply {\n    my ($self, $query, $peerhost) = @_;\n    print \"Using the customized make_reply\\n\" if $self->{\"Verbose\"};\t\n    my $reply;\n    my $transporthash;\n    \n\n    if (not $query) {\n\tprint \"ERROR: invalid packet\\n\" if $self->{\"Verbose\"};\n\t$reply = Net::DNS::Packet->new(\"\", \"ANY\", \"ANY\");\n\t$reply->header->rcode(\"FORMERR\");\n\treturn $reply;\n    }\n    \n    \n    my $qr = ($query->question)[0];\n    my $qname  = $qr ? $qr->qname  : \"\";\n    my $qclass = $qr ? $qr->qclass : \"ANY\";\n    my $qtype  = $qr ? $qr->qtype  : \"ANY\";\n    \n    $reply = Net::DNS::TestNS::Packet->new($qname, $qtype, $qclass);\n    \n\n    \n    if ($query->header->opcode eq \"QUERY\") {\n\tif ($query->header->qdcount == 1) {\n\t    print \"query \", $query->header->id,\n\t    \": ($qname, $qclass, $qtype)...\" if $self->{\"Verbose\"};\n\t    \n\t    my ($rcode, $ans, $auth, $add);\n\t    \n\t    ($rcode, $ans, $auth, $add, $transporthash) =\n\t\t&{$self->{\"ReplyHandler\"}}($qname, $qclass, $qtype, $peerhost, $query);\n\t    \n\t    print \"$rcode\\n\" if $self->{\"Verbose\"};\n\t    \n\t    $reply->header->rcode($rcode);\n\n\n\t    if ($transporthash->{'raw'}){\n\t\tprint \"Raw data in Net::DNS::TestNS::Nameserver\\n\"if $self->{\"Verbose\"}; \n\t\t$reply->{\"rawhack\"}=1; \n\t\tmy$packetdata=$reply->header->data().$transporthash->{'raw'};\n\t\t$reply->{\"data\"}=$packetdata;\n\t    }else{\t    \n\t\t$reply->push(\"answer\", @$ans)  if $ans;\n\t\t$reply->push(\"authority\",  @$auth) if $auth;\n\t\t$reply->push(\"additional\", @$add)  if $add;\n\t    }\n\t} else {\n\t    print \"ERROR: qdcount \", $query->header->qdcount,\n\t    \"unsupported\\n\" if $self->{\"Verbose\"};\n\t    $reply->header->rcode(\"FORMERR\");\n\t}\n    } else {\n\tprint \"ERROR: opcode \", $query->header->opcode, \" unsupported\\n\"\n\t    if $self->{\"Verbose\"};\n\t$reply->header->rcode(\"FORMERR\");\n    }\n    \n    $reply->header->qr(1);\n    $reply->header->cd($query->header->cd);\n    $reply->header->rd($query->header->rd);\t\n    $reply->header->id($query->header->id);\n\n    if (!defined ($transporthash)) {\n\t$reply->header->ra(1);\n\t$reply->header->ad(0);\n    } else {\n\t$reply->headermask($transporthash);\n\n    }\n\n\n    $reply->headermask($transporthash);\n    \n    $reply->header->print if $self->{\"Verbose\"} && defined $transporthash;\n\n    return $reply;\n}",
      "file" : "/var/tmp/arv_kXxmvY/Net-DNS-TestNS-1.10/TestNS/Nameserver.pm",
      "package" : "Net::DNS::TestNS::Nameserver"
   }
]
