[
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nmy $cookie = pack(\"n\", $reqid & 0xFFFF) . $data{cookie};\nif($COOKIES{$cookie}) {\n\tmy $peer = delete $COOKIES{$cookie};\n\tmy $screenname = $peer->{sn};\n\tprint \"$screenname initiating BOS handshake.\\n\";\n\t$connection->{screenname} = $screenname;\n\n\tmy $sess = $SESSIONS->{$screenname};\n\tpush @{$sess->{sessions}}, $connection;\n\t$sess->{extstatus} ||= \"\";\n\t$sess->{away} = 0;\n\t$sess->{stealth} = 0;\n\t\n\t$connection->proto_send(protobit => \"server_ready\", protodata => {\n\t\tfamilies => [grep { !OSCAR_TOOLDATA()->{$_}->{nobos} } keys %{OSCAR_TOOLDATA()}]\n\t});\n} else {\n\t$connection->log_print(OSCAR_DBG_DEBUG, \"No cookie: $cookie\");\n\t$session->delconn($connection);\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/ServerCallbacks/0/BOS_signon.pm",
      "package" : "Net::OSCAR::ServerCallbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$connection->proto_send(protobit => \"locate_rights_response\", reqid => $reqid);\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/ServerCallbacks/2/locate_rights_request.pm",
      "package" : "Net::OSCAR::ServerCallbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$connection->proto_send(reqid => $reqid, protobit => \"incoming_profile\", protodata => {\n\tscreenname => $data{screenname},\n\tawaymsg => \"Got away message at \" . scalar(ctime(time())),\n\tevil => 0,\n\tflags => 0x20,\n\tonsince => 0,\n\tmembersince => 0,\n\tidle => 0,\n\tcapabilities => \"\"\n});\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/ServerCallbacks/2/get_away.pm",
      "package" : "Net::OSCAR::ServerCallbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$connection->proto_send(protobit => \"BOS_rights_response\", reqid => $reqid);\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/ServerCallbacks/9/BOS_rights_request.pm",
      "package" : "Net::OSCAR::ServerCallbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nsend_versions($connection, 0, 1);\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/ServerCallbacks/1/set_service_versions.pm",
      "package" : "Net::OSCAR::ServerCallbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/ServerCallbacks/1/rate_acknowledgement.pm",
      "package" : "Net::OSCAR::ServerCallbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nif($data{status_message}) {\n\t$SESSIONS->{$screenname}->{status}->{extstatus} = $data{status_message}->{message};\n} elsif($data{stealth}) {\n\t$SESSIONS->{$screenname}->{status}->{stealth} = $data{stealth}->{state} & 0x100;\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/ServerCallbacks/1/set_extended_status.pm",
      "package" : "Net::OSCAR::ServerCallbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nprint \"$screenname finished signing on.\\n\";\n$connection->{signon_done} = 1;\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/ServerCallbacks/1/set_tool_versions.pm",
      "package" : "Net::OSCAR::ServerCallbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$connection->proto_send(reqid => $reqid, protobit => \"rate_info_response\", protodata => {\n\tclasses => [],\n\tclassmembers => []\n});\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/ServerCallbacks/1/rate_info_request.pm",
      "package" : "Net::OSCAR::ServerCallbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$connection->proto_send(reqid => $reqid, protobit => \"self_information\", protodata => {\n\tscreenname => $screenname,\n \t\t\tevil => 0,\n\tflags => 0x20,\n\tonsince => time(),\n\tidle => 0,\n\tsession_length => 0,\n\tip => 0\n});\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/ServerCallbacks/1/personal_info_request.pm",
      "package" : "Net::OSCAR::ServerCallbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$connection->proto_send(protobit => \"buddy_rights_response\", reqid => $reqid);\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/ServerCallbacks/3/buddy_rights_request.pm",
      "package" : "Net::OSCAR::ServerCallbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nmy $hash;\n($screenname, $hash) = ($data{screenname}, $data{auth_response});\n\nif(!$SCREENNAMES->{$screenname}) {\n\t$connection->proto_send(protobit => \"authorization_response\", protodata => {error => 1});\n}\n\nmy @valid_hashes = map {\n\t[$_, encode_password($session, exists($data{pass_is_hashed}) ? md5($SCREENNAMES->{$screenname}->{pw}) : $SCREENNAMES->{$screenname}->{pw}, $_)];\n} keys %{$SESSIONS->{$screenname}->{keys}};\n\nmy $valid = 0;\nforeach (@valid_hashes) {\n\tnext unless $_->[1] eq $hash;\n\t$valid = 1;\n\tdelete $SCREENNAMES->{$screenname}->{keys}->{$_->[0]};\n\tlast;\n}\n\nif($valid) {\n\tmy $key = randchars(256);\n\t$connection->proto_send(protobit => \"authorization_response\", protodata => {\n\t\tscreenname => $SCREENNAMES->{$screenname}->{sn},\n\t\temail => $SCREENNAMES->{$screenname}->{email},\n\t\tauth_cookie => $key,\n\t\tserver_ip => \"127.0.0.1\"\n\t});\n\t$session->delconn($connection);\n\n\t$COOKIES{$key} = {sn => $screenname, conntype => CONNTYPE_BOS};\n} else {\n\t$connection->proto_send(protobit => \"authorization_response\", protodata => {error => 5});\n\t$session->delconn($connection);\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/ServerCallbacks/23/signon.pm",
      "package" : "Net::OSCAR::ServerCallbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nif(exists($SCREENNAMES->{$data{screenname}})) {\n\t$screenname = $data{screenname};\n\tmy $key = sprintf(\"%08d\", int(rand(99999999)));\n\tprint \"$screenname would like to sign on.  Generated key '$key'\\n\";\n\n\t$SESSIONS->{$screenname} ||= {};\n\t$SESSIONS->{$screenname}->{keys} ||= {};\n\t$SESSIONS->{$screenname}->{sessions} ||= [];\n\t$SESSIONS->{$screenname}->{status} ||= {\n\t\tonline => 0,\n\t};\n\n\t$SESSIONS->{$screenname}->{keys}->{$key} = 1;\n\t$connection->proto_send(protobit => \"authentication_key\", protodata => {key => $key});\n} else {\n\t$connection->proto_send(protobit => \"authorization_response\", protodata => {error => 1});\n\t$session->delconn($connection);\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/ServerCallbacks/23/initial_signon_request.pm",
      "package" : "Net::OSCAR::ServerCallbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$connection->proto_send(protobit => \"buddylist_3_response\", reqid => $reqid, protodata => {maximums => [\n\t200, 50, 128, 128, 1, 1, 50, 0, 0, 3, 0, 0, 0, 128, 128, 20, 200, 1, 0, 1, 0\n]});\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/ServerCallbacks/19/buddylist_rights_request.pm",
      "package" : "Net::OSCAR::ServerCallbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nmy $blist;\n\nmy $visdata = tlv_encode(tlv(\n\t0xCA => 0,\n\t0xCB => 0xFFFFFFFF,\n));\n$blist = \"xxx\";\n$blist .= pack(\"n5a*\", 0, 0, 0xCB, 4, length($visdata), $visdata);\n$blist .= pack(\"na*n4\", length(\"Buddies\"), \"Buddies\", 1, 0, 1, 0);\nmy $i = 1;\n$blist .= pack(\"na*n4\", length($_), $_, 1, $i++, 0, 0) foreach @{$SCREENNAMES->{$screenname}->{blist}};\n\n$connection->proto_send(reqid => $reqid, protobit => \"buddylist\", protodata => {data => $blist});\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/ServerCallbacks/19/buddylist_request.pm",
      "package" : "Net::OSCAR::ServerCallbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$connection->proto_send(protobit => \"IM_parameter_response\", reqid => $reqid, protodata => {channel => $data{channel}});\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/ServerCallbacks/4/add_IM_parameters.pm",
      "package" : "Net::OSCAR::ServerCallbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$connection->proto_send(protobit => \"IM_parameter_response\", reqid => $reqid, protodata => {channel => $data{channel}});\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/ServerCallbacks/4/IM_parameter_request.pm",
      "package" : "Net::OSCAR::ServerCallbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nmy $target = $SESSIONS->{$data{screenname}};\nif(!$target or !$target->{sessions}->[0]) {\n\treturn srv_send_error($connection, $family, 4);\n}\n\n$connection->proto_send(reqid => $reqid, protobit => \"IM_acknowledgement\", protodata => {\n\tcookie => $data{cookie},\n\tchannel => $data{channel},\n\tscreenname => $data{screenname}\n});\n\n\n$data{screenname} = $screenname;\n$data{evil} = 0;\n$data{flags} = 0;\n\n$target->{sessions}->[0]->proto_send(protobit => \"incoming_IM\", protodata => {%data});\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/ServerCallbacks/4/outgoing_IM.pm",
      "package" : "Net::OSCAR::ServerCallbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nmy $error = \"\";\nif($family == 0x4) {\n\t$error = \"Your message could not be sent for the following reason: \";\n} else {\n\t$error = \"Error in \".$connection->{description}.\": \";\n}\n$session->log_printf(OSCAR_DBG_DEBUG, \"Got error %d on req 0x%04X/0x%08X.\", $data{errno}, $family, $reqid);\nreturn if $data{errno} == 0;\n$error .= (ERRORS)[$data{errno}] || \"unknown error\";\n$error .= \" (\".$data{error_details}.\").\" if $data{error_details};\nsend_error($session, $connection, $data{errno}, $error, 0, $reqdata);\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/0/error.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$session->callback_chat_joined($connection->{name}, $connection) unless $connection->{sent_joined}++;\n\n$session->callback_chat_buddy_in(Net::OSCAR::Screenname->new(\\$_->{screenname}), $connection) foreach @{$data{occupants}};\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/14/chat_room_status.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nforeach (@{$data{departures}}) {\n\t$session->callback_chat_buddy_out(Net::OSCAR::Screenname->new(\\$_), $connection);\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/14/chat_buddy_departure.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$session->callback_chat_im_in($data{sender}, $connection, $data{message});\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/14/incoming_chat_IM.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nforeach (@{$data{arrivals}}) {\n\t$session->callback_chat_buddy_in(Net::OSCAR::Screenname->new(\\$_->{screenname}), $connection, $_);\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/14/chat_buddy_arrival.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$session->postprocess_userinfo(\\%data);\n$session->callback_buddy_info($data{screenname}, \\%data);\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/2/incoming_profile.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$session->set_info(\"\");\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/9/BOS_rights_response.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$session->{__old_loglevel} = $session->loglevel();\n$session->loglevel(10);\n$connection->log_print(OSCAR_DBG_WARN, \"Server initiated migration.  Migration support is experimental.  Please tell matthewg\\@zevils.com that this happened and whether or not it worked!  Include the information below.\");\n$connection->log_print(OSCAR_DBG_WARN, \"Migration families sent: \", join(\" \", keys %{$connection->{families}}));\n$connection->proto_send(protobit => \"pause_ack\", protodata => {\n\tfamilies => [keys %{$connection->{families}}]\n});\n$connection->pause();\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/1/pause.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$connection->{families} = { map { $_ => 1 } @{$data{families}} };\nsend_versions($connection, 0);\n$connection->proto_send(protobit => \"rate_info_request\", nopause => 1);\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/1/server_ready.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$session->callback_evil($data{new_level} / 10, Net::OSCAR::Screenname->new(\\$data{screenname}) || undef);\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/1/incoming_warning.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$connection->log_print(OSCAR_DBG_WARN, \"Migration cancelled by server!\");\n$connection->unpause();\n$connection->loglevel(delete $connection->{__old_loglevel});\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/1/unpause.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nmy @migfamilies = grep { $_ != 0 } @{$data{families}};\n\n$connection->log_print(OSCAR_DBG_WARN, \"Migration families received: \", join(\" \", @migfamilies));\n$session->loglevel(10);\n\nmy $pause_queue;\nif(@{$data{families}} == keys %{$connection->{families}} or @migfamilies == 0) {\n\t$connection->log_print(OSCAR_DBG_WARN, \"Full migration, disconnecting...\");\n\t$pause_queue = $connection->{pause_queue};\n\n\tmy $conntype = $connection->{conntype};\n\t$connection->{conntype} = -1 if $connection->{conntype} == CONNTYPE_BOS;\n\t$session->delconn($connection);\n\t$connection->{conntype} = $conntype;\n\n\t$session->log_print(OSCAR_DBG_WARN, \"Disconnected.\");\n} else {\n\t$connection->log_print(OSCAR_DBG_WARN, \"Partial migration\");\n\n\tmy @all_families = keys %{$connection->{families}};\n\t$connection->{families} = {};\n\tforeach my $fam (@all_families) {\n\t\tnext if grep { $_ == $fam } @migfamilies;\n\t\t$connection->{families}->{$fam} = 1;\n\t}\n\n\tmy $all_pause_queue = $connection->{pause_queue};\n\t$connection->{pause_queue} = [];\n\tforeach my $item (@$all_pause_queue) {\n\t\tif(grep { $item->{family} == $_ } @migfamilies) {\n\t\t\tpush @$pause_queue, $item;\n\t\t} else {\n\t\t\tpush @{$connection->{pause_queue}}, $item;\n\t\t}\n\t}\n\n\t$connection->log_printf(OSCAR_DBG_WARN, \"Migration pause queue: %d/%d\", @{$pause_queue || []}, @{$connection->{pause_queue} || []});\n}\n\n$session->log_print(OSCAR_DBG_WARN, \"Creating new connection\");\nmy $newconn = $session->addconn(\n\tauth => $data{cookie},\n\tconntype => $connection->{conntype},\n\tdescription => $connection->{description},\n\tpeer => $data{peer},\n\tpaused => 1,\n\tpause_queue => $pause_queue\n);\n$session->log_print(OSCAR_DBG_WARN, \"Created.\");\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/1/migrate.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$connection->unpause();\n\nif($session->{rate_manage_mode} != OSCAR_RATE_MANAGE_NONE) {\n\t$connection->{rate_limits} ||= {classmap => {}};\n\n\tmy $rinfo = $connection->{rate_limits};\n\tmy $time = millitime();\n\tforeach my $class (@{$data{classes}}) {\n\t\t$class->{time_offset} = $time - $class->{last_time};\n\t\t$rinfo->{$class->{class_id}} = $class;\n\t}\n\n\tmy $map = $rinfo->{classmap};\n\tforeach my $class (@{$data{classmembers}}) {\n\t\tmy $id = $class->{class_id};\n\t\tforeach my $snacfam (@{$class->{snacs}}) {\n\t\t\tmy $key = pack(\"nn\", $snacfam->{family}, $snacfam->{subtype});\n\t\t\t$map->{$key} = $id;\n\t\t}\n\t}\n}\n\n$connection->proto_send(protobit => \"rate_acknowledgement\",\n\tclasses => [map {$_->{class_id}} @{$data{classes}}]);\n$connection->log_print(OSCAR_DBG_NOTICE, \"BOS handshake complete!\");\n\nif($conntype == CONNTYPE_BOS) {\n\t$connection->log_print(OSCAR_DBG_SIGNON, \"Signon BOS handshake complete!\");\n\n\t$connection->proto_send(protobit => \"personal_info_request\");\n\t$session->set_stealth(1) if $session->{stealth};\n\n\t$connection->proto_send(protobit => \"buddylist_rights_request\");\n\t$connection->proto_send(protobit => \"buddylist_request\");\n\t$connection->proto_send(protobit => \"locate_rights_request\");\n\t$connection->proto_send(protobit => \"buddy_rights_request\");\n\t$connection->proto_send(protobit => \"IM_parameter_request\");\n\t$connection->proto_send(protobit => \"BOS_rights_request\");\n} elsif($conntype == CONNTYPE_CHAT) {\n\t$connection->ready();\n\n\t$session->callback_chat_joined($connection->name, $connection) unless $connection->{sent_joined}++;\n} else {\n\tif($conntype == CONNTYPE_CHATNAV) {\n\t\t$connection->proto_send(protobit => \"chat_navigator_rights_request\");\n\t}\n\n\t$session->{services}->{$conntype} = $connection;\n\t$connection->ready();\n\n\tif($session->{svcqueues}->{$conntype}) {\n\t\tforeach my $proto_item(@{$session->{svcqueues}->{$conntype}}) {\n\t\t\t$connection->proto_send(%$proto_item);\n\t\t}\n\t}\n\n\tdelete $session->{svcqueues}->{$conntype};\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/1/rate_info_response.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$session->{ip} = $data{ip} if $data{ip};\n\nif(exists($data{stealth_status})) {\n\tmy $stealth_state;\n\tif($data{stealth_status} & 0x100) {\n\t\t$stealth_state = 1;\n\t} else {\n\t\t$stealth_state = 0;\n\t}\n\n\tif($stealth_state xor $session->{stealth}) {\n\t\t$connection->log_print(OSCAR_DBG_DEBUG, \"Stealth state changed: \", $stealth_state);\n\t\t$session->{stealth} = $stealth_state;\n\t\t$session->callback_stealth_changed($stealth_state);\n\t}\n}\n\n\nif($data{session_length}) {\n\t$connection->log_print(OSCAR_DBG_DEBUG, \"Someone else signed on with this screenname?  Session length == $data{session_length}\");\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/1/self_information.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nmy $conntype;\nmy %chatdata;\n\nmy $svctype = $data{service_type};\n\nmy $svcmap = tlv();\n$svcmap->{$_} = $_ foreach (CONNTYPE_LOGIN, CONNTYPE_CHATNAV, CONNTYPE_CHAT, CONNTYPE_ADMIN, CONNTYPE_BOS, CONNTYPE_ICON);\n$conntype = $svcmap->{$svctype} || sprintf(\"unknown (0x%04X)\", $svctype);\nif($svctype == CONNTYPE_CHAT) {\n\t%chatdata = %{$session->{chats}->{$reqid}};\n\t$conntype = \"chat $chatdata{name}\";\n}\n\n$connection->log_print(OSCAR_DBG_NOTICE, \"Got redirect for $svctype.\");\n\nmy $newconn = $session->addconn(auth => $data{auth_cookie}, conntype => $svctype, description => $conntype, peer => $data{server_ip});\nif($svctype == CONNTYPE_CHAT) {\n\t$session->{chats}->{$reqid} = $newconn;\n\tmy($key, $val);\n\twhile(($key, $val) = each(%chatdata)) { $session->{chats}->{$reqid}->{$key} = $val; }\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/1/service_redirect_response.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nif(exists($data{upload_checksum})) {\n\tif($connection->{conntype} != CONNTYPE_ICON) {\n\t\tif($session->{icon} and $session->{is_on}) {\n\t\t\t$connection->log_print(OSCAR_DBG_INFO, \"Uploading buddy icon.\");\n\t\t\t$session->svcdo(CONNTYPE_ICON, protobit => \"icon_upload\", protodata => {\n\t\t\t\ticon => $session->{icon}\n\t\t\t});\n\t\t}\n\t}\n} elsif(exists($data{resend_checksum})) {\n\t$connection->log_print(OSCAR_DBG_INFO, \"Got icon resend request!\");\n\t$session->set_icon($session->{icon}) if $session->{icon};\n} elsif(exists($data{status_message})) {\n\t$session->callback_extended_status($data{status_message});\n} else {\n\t$connection->log_print(OSCAR_DBG_WARN, \"Unknown extended info request\");\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/1/incoming_extended_information.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nmy($rate, $worrisome);\n\nif($session->{rate_manage_mode} != OSCAR_RATE_MANAGE_NONE) {\n\tdelete $data{message_type};\n\n\tmy $cinfo = $connection->{rate_limits}->{$data{class_id}};\n\t$cinfo->{$_} = $data{$_} foreach keys(%data);\n}\n\n\nif($data{current} <= $data{disconnect}) {\n\t$rate = RATE_DISCONNECT;\n\t$worrisome = 1;\n} elsif($data{limit} && $data{current} <= $data{limit}) {\n\t$rate = RATE_LIMIT;\n\t$worrisome = 1;\n} elsif($data{alert} && $data{current} <= $data{alert}) {\n\t$rate = RATE_ALERT;\n\tif($data{current} - $data{limit} < 500) {\n\t\t$worrisome = 1;\n\t} else {\n\t\t$worrisome = 0;\n\t}\n} else { \n\t$rate = RATE_CLEAR;\n\t$worrisome = 0;\n}\n\n$session->callback_rate_alert($rate, $data{clear}, $data{window}, $worrisome, 0);\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/1/rate_change.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nmy $buddy = $data{screenname};\nmy($grpname, $group) = $session->findbuddy($buddy);\nreturn unless $grpname;\n\n \t\tdelete $session->{userinfo}->{$buddy};\nmy $budinfo = $group->{members}->{$buddy};\nforeach (keys %$budinfo) {\n\tdelete $budinfo->{$_} unless /^(?:buddyid|data|__BLI.*|alias|online|comment|screenname)$/;\n}\n$budinfo->{online} = 0;\n\n$connection->log_print(OSCAR_DBG_DEBUG, \"And so, another former ally has abandoned us.  Curse you, $buddy!\");\n$session->callback_buddy_out($budinfo->{screenname}, $grpname);\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/3/buddy_signoff.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nif($session->{bl_limits}->{buddies}) {\n\tif($data{maxbuddies} < $session->{bl_limits}->{buddies}) {\n\t\t$session->{bl_limits}->{buddies} = $data{maxbuddies};\n\t}\n} else {\n\t$session->{bl_limits}->{buddies} = $data{maxbuddies};\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/3/buddy_rights_response.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$connection->log_print(OSCAR_DBG_DEBUG, \"Incoming bogey - er, I mean buddy - $data{screenname}\");\n$session->postprocess_userinfo(\\%data);\nmy $screenname = $data{screenname};\n\nmy($grpname, $group) = $session->findbuddy($screenname);\nreturn unless $grpname; \nmy $budinfo = $group->{members}->{$screenname};\n\n$data{buddyid} = $budinfo->{buddyid};\n$data{online} = 1;\nforeach my $key(keys %data) {\n\tnext if $key eq \"__UNKNOWN\";\n\t$budinfo->{$key} = delete $data{$key};\n}\nif(exists($budinfo->{idle}) and !exists($data{idle})) {\n\tdelete $budinfo->{idle};\n\tdelete $budinfo->{idle_since};\n}\n\nif(exists($session->{userinfo}->{$screenname})) {\n\tif($session->{userinfo}->{$screenname} != $budinfo)  {\n\t\tmy $info = $session->{userinfo}->{$screenname};\n\t\tforeach my $key(keys %$info) {\n\t\t\t$budinfo->{$key} = $info->{$key};\n\t\t}\n\t\t$session->{userinfo}->{$screenname} = $budinfo;\n\t}\n} else {\n\t$session->{userinfo}->{$screenname} = $budinfo;\n}\n$session->callback_buddy_in($screenname, $grpname, $budinfo);\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/3/buddy_status_update.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nmy $uin = $data{our_uin};\n\nif($data{type} == 2010) {\n\t$session->{icq_meta_info_cache}->{$uin} ||= {};\n\n\t(%data) = protoparse($session, \"ICQ_meta_info_response\")->unpack($data{typedata});\n\tif($data{status} != 10) {\n\t\tdelete $session->{icq_meta_info_cache}->{$uin};\n\n\t\tmy $error = \"Bad ICQ meta info response\";\n\t\tif($data{status} == 20) {\n\t\t\t$error = \"Could not get ICQ info for $uin.\";\n\t\t}\n\n\t\tsend_error($session, $connection, $data{status}, $error, 0, $reqdata);\n\t\treturn;\n\t}\n\n\tif(!exists(ICQ_META_INFO_INVERSE()->{$data{subtype}})) {\n\t\t$session->log_printf(OSCAR_DBG_WARN, \"Bad ICQ meta response subtype %d\", $data{subtype});\n\t\treturn;\n\t}\n\tmy $subtype = ICQ_META_INFO_INVERSE()->{$data{subtype}};\n\n\t(%data) = protoparse($session, \"ICQ_meta_info_response:_$subtype\")->unpack($data{response_data});\n\tif($subtype eq \"basic\") {\n\t\t$session->{icq_meta_info_cache}->{$uin}->{home} = delete $data{home};\n\t\t$session->{icq_meta_info_cache}->{$uin}->{basic} = \\%data;\n\t} elsif($subtype eq \"office\") {\n\t\t$session->{icq_meta_info_cache}->{$uin}->{office} = \\%data;\n\t} elsif($subtype eq \"background\") {\n\t\t$session->{icq_meta_info_cache}->{$uin}->{background} = \\%data;\n\t\t$session->{icq_meta_info_cache}->{$uin}->{background}->{spoken_languages} =\n\t\t\t[delete @data{qw(language_1 language_2 language_3)}];\n\t} elsif($subtype eq \"notes\") {\n\t\t$session->{icq_meta_info_cache}->{$uin}->{notes} = $data{notes};\n\t} elsif($subtype eq \"email\") {\n\t\t$session->{icq_meta_info_cache}->{$uin}->{email_addresses} = $data{addresses};\n\t} elsif($subtype eq \"interests\") {\n\t\t$session->{icq_meta_info_cache}->{$uin}->{interests} = $data{interests};\n\t} elsif($subtype eq \"affiliations\") {\n\t\t$session->{icq_meta_info_cache}->{$uin}->{past_affiliations} = $data{past_affilations};\n\t\t$session->{icq_meta_info_cache}->{$uin}->{present_affiliations} = $data{affiliations};\n\t} elsif($subtype eq \"homepage\") {\n\t\t$session->{icq_meta_info_cache}->{$uin}->{email_addresses} = $data{homepage};\n\t}\n\n\tif(!$snac->{flags2}) {\n\t\t$session->callback_buddy_icq_info($uin, delete $session->{icq_meta_info_cache}->{$uin});\n\t}\n} else {\n\t$session->log_printf(OSCAR_DBG_WARN, \"Unknown ICQ meta response %d\", $data{type});\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/21/ICQ_meta_response.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nmy $reqdesc = \"\";\n$data{subrequest} ||= 0;\nif($data{request_type} == 2) {\n\t$reqdesc = ADMIN_TYPE_PASSWORD_CHANGE;\n} elsif($data{request_type} == 3) {\n\tif(exists($data{new_email})) {\n\t\t$reqdesc = ADMIN_TYPE_EMAIL_CHANGE;\n\t} else {\n\t\t$reqdesc = ADMIN_TYPE_SCREENNAME_FORMAT;\n\t}\n} elsif($data{request_type} == 0x1E) {\n\t$reqdesc = ADMIN_TYPE_ACCOUNT_CONFIRM;\n}\ndelete $session->{adminreq}->{0+$reqdesc} if $reqdesc;\n$reqdesc ||= sprintf \"unknown admin reply type 0x%04X/0x%04X\", $data{request_type}, $data{subrequest};\n\nmy $errdesc = \"\";\nif(exists($data{error_code})) {\n\tif($reqdesc eq \"account confirm\") {\n\t\t$errdesc = \"Your account is already confirmed.\";\n\t} else {\n\t\tif($data{error_code} == 1) {\n\t\t\t$errdesc = ADMIN_ERROR_DIFFSN;\n\t\t} elsif($data{error_code} == 2) {\n\t\t\t$errdesc = ADMIN_ERROR_BADPASS;\n\t\t} elsif($data{error_code} == 6) {\n\t\t\t$errdesc = ADMIN_ERROR_BADINPUT;\n\t\t} elsif($data{error_code} == 0xB or $data{error_code} == 0xC) {\n\t\t\t$errdesc = ADMIN_ERROR_BADLENGTH;\n\t\t} elsif($data{error_code} == 0x13) {\n\t\t\t$errdesc = ADMIN_ERROR_TRYLATER;\n\t\t} elsif($data{error_code} == 0x1D) {\n\t\t\t$errdesc = ADMIN_ERROR_REQPENDING;\n\t\t} elsif($data{error_code} == 0x21) {\n\t\t\t$errdesc = ADMIN_ERROR_EMAILLIM;\n\t\t} elsif($data{error_code} == 0x23) {\n\t\t\t$errdesc = ADMIN_ERROR_EMAILBAD;\n\t\t} else {\n\t\t\t$errdesc = sprintf(\"Unknown error 0x%04X.\", $data{error_code});\n\t\t}\n\t}\n\t$session->callback_admin_error($reqdesc, $errdesc, $data{error_url});\n} else {\n\tif($reqdesc eq \"screenname format\") {\n\t\t$session->{screenname} = Net::OSCAR::Screenname->new(\\$data{new_screenname});\n\t} elsif($reqdesc eq \"email change\") {\n\t\t$session->{email} = $data{new_email};\n\t}\n\t$session->callback_admin_ok($reqdesc);\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/7/admin_request_response.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$session->callback_admin_ok(ADMIN_TYPE_ACCOUNT_CONFIRM);\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/7/confirm_account_response.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nif($data{error}) {\n\tmy $error = $data{error};\n\t$session->crapout($connection, \"Invalid screenname.\") if $error == 0x01;\n\t$session->crapout($connection, \"Invalid password.\") if $error == 0x05;\n\t$session->crapout($connection, \"You've been connecting too frequently.\") if $error == 0x18;\n\tmy($errstr) = ((ERRORS)[$error]) || \"unknown error\";\n\t$errstr .= \" ($data{error_details})\" if $data{error_details};\n\t$session->crapout($connection, $errstr, $error);\n\treturn 0;\n} else {\n\t$connection->log_print(OSCAR_DBG_SIGNON, \"Login OK - connecting to BOS\");\n\t$session->addconn(\n\t\tauth => $data{auth_cookie},\n\t\tconntype => CONNTYPE_BOS,\n\t\tdescription => \"basic OSCAR service\",\n\t\tpeer => $data{server_ip}\n\t);\n\t$connection->{closing} = 1;\n\t$connection->disconnect;\n\t$session->{screenname} = $data{screenname};\n\t$session->{email} = $data{email};\n\n\tNet::OSCAR::Screenname->new(\\$session->{screenname});\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/23/authorization_response.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nif(defined($connection->{auth})) {\n\t$connection->log_print(OSCAR_DBG_SIGNON, \"Sending password.\");\n\tmy(%signon_data) = signon_tlv($session, delete($connection->{auth}), $data{key});\n\n\t$session->svcdo(CONNTYPE_BOS, protobit => \"signon\", protodata => \\%signon_data);\n} else {\n\t$connection->log_print(OSCAR_DBG_SIGNON, \"Giving client authentication challenge.\");\n\t$session->callback_auth_challenge($data{key}, \"AOL Instant Messenger (SM)\");\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/23/authentication_key.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nif($session->{gotbl}) {\n\tdelete $session->{gotbl};\n\t$connection->log_print(OSCAR_DBG_WARN, \"Couldn't get your buddylist - probably because you don't have one.\");\n\tgot_buddylist($session, $connection);\t\t\t\n} else {\n\t$connection->log_print_cond(OSCAR_DBG_INFO, sub { \"Buddylist error:\", hexdump($data{data}) });\n}\n\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/19/buddylist_error.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$session->{blarray} ||= [];\nsubstr($data{data}, 0, 3) = \"\";\nsubstr($data{data}, -4, 4) = \"\" if $snac->{flags2};\npush @{$session->{blarray}}, $data{data};\n\nif($snac->{flags2}) {\n\t$connection->log_printf(OSCAR_DBG_SIGNON, \"Got buddylist segment -- need %d more.\", $snac->{flags2});\n} else {\n\tdelete $session->{gotbl};\n\n\tNet::OSCAR::_BLInternal::blparse($session, join(\"\", @{$session->{blarray}}));\n\tdelete $session->{blarray};\n\tgot_buddylist($session, $connection);\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/19/buddylist.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nmy $type = \"delete\";\n%data = protoparse($session, \"buddylist_change\")->unpack($snac->{data});\n\nforeach my $change (@{$data{changes}}) {\n\t$connection->log_print_cond(OSCAR_DBG_DEBUG, sub { \"Buddylist change $type:\\n\", Data::Dumper::Dumper($change) });\n\tif($type eq \"delete\") {\n\t\tNet::OSCAR::_BLInternal::blentry_clear($session, %$change);\n\t} else {\n\t\tNet::OSCAR::_BLInternal::blentry_set($session, %$change);\n\t}\n}\n\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/19/buddylist_delete.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$session->{__BLI_locked} = 0;\n$session->callback_buddylist_changed(Net::OSCAR::_BLInternal::BLI_to_NO($session));\n\nif($session->{__BLI_commit_later}) {\n\t$session->{__BLI_commit_later} = 0;\n\t$session->commit_buddylist();\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/19/end_buddylist_modifications.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nmy $type = \"add\";\n%data = protoparse($session, \"buddylist_change\")->unpack($snac->{data});\n\nforeach my $change (@{$data{changes}}) {\n\t$connection->log_print_cond(OSCAR_DBG_DEBUG, sub { \"Buddylist change $type:\\n\", Data::Dumper::Dumper($change) });\n\tif($type eq \"delete\") {\n\t\tNet::OSCAR::_BLInternal::blentry_clear($session, %$change);\n\t} else {\n\t\tNet::OSCAR::_BLInternal::blentry_set($session, %$change);\n\t}\n}\n\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/19/buddylist_add.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nmy $type = \"modify\";\n%data = protoparse($session, \"buddylist_change\")->unpack($snac->{data});\n\nforeach my $change (@{$data{changes}}) {\n\t$connection->log_print_cond(OSCAR_DBG_DEBUG, sub { \"Buddylist change $type:\\n\", Data::Dumper::Dumper($change) });\n\tif($type eq \"delete\") {\n\t\tNet::OSCAR::_BLInternal::blentry_clear($session, %$change);\n\t} else {\n\t\tNet::OSCAR::_BLInternal::blentry_set($session, %$change);\n\t}\n}\n\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/19/buddylist_modify.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$session->{__BLI_locked} = 1;\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/19/start_buddylist_modifications.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nif(!ref($session->{budmods}) || !@{$session->{budmods}}) {\n\t$connection->log_print(OSCAR_DBG_WARN, \"Unexpected blmod ack!\");\n\treturn;\n}\nmy $budmods = $session->{budmods};\n\n$connection->log_print(OSCAR_DBG_DEBUG, \"Got blmod ack (\", scalar(@$budmods), \" left).\");\nmy(@errors) = @{$data{error}};\n\nmy @reqdata = @$reqdata;\nforeach my $error(reverse @errors) {\n\tmy($errdata) = shift @reqdata;\n\tlast unless $errdata;\n\tif($error != 0) {\n\t\t$session->{buderrors} = 1;\n\t\tmy($type, $gid, $bid) = ($errdata->{type}, $errdata->{gid}, $errdata->{bid});\n\t\tif(exists($session->{blold}->{$type}) and exists($session->{blold}->{$type}->{$gid}) and exists($session->{blold}->{$type}->{$gid}->{$bid})) {\n\t\t\t$session->{blinternal}->{$type}->{$gid}->{$bid} = $session->{blold}->{$type}->{$gid}->{$bid};\n\t\t} else {\n\t\t\tdelete $session->{blinternal}->{$type} unless exists($session->{blold}->{$type});\n\t\t\tdelete $session->{blinternal}->{$type}->{$gid} unless exists($session->{blold}->{$type}) and exists($session->{blold}->{$type}->{$gid});\n\t\t\tdelete $session->{blinternal}->{$type}->{$gid}->{$bid} unless exists($session->{blold}->{$type}) and exists($session->{blold}->{$type}->{$gid}) and exists($session->{blold}->{$type}->{$gid}->{$bid});\n\t\t}\n\n\t\t$connection->proto_send(%{pop @$budmods}); \n\t\tdelete $session->{budmods};\n\t\t$session->callback_buddylist_error($error, $errdata->{desc});\n\t\tlast;\n\t}\n}\n\nif($session->{buderrors}) {\n\tNet::OSCAR::_BLInternal::BLI_to_NO($session) if $session->{buderrors};\n\tdelete $session->{qw(blold buderrors budmods)};\n} else {\n\tif(@$budmods) {\n\t\t$connection->proto_send(%{shift @$budmods});\n\t}\n\n\tif(!@$budmods) {\n\t\tdelete $session->{budmods};\n\t\t$session->callback_buddylist_ok;\n\t}\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/19/buddylist_modification_acknowledgement.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$session->{gotbl} = 1;\n\n$session->{bl_limits}->{groups} = $data{maximums}->[1];\n$session->{bl_limits}->{permits} = $data{maximums}->[2];\n$session->{bl_limits}->{denies} = $data{maximums}->[3];\n\nif($session->{bl_limits}->{buddies}) {\n\tif($data{maximums}->[0] < $session->{bl_limits}->{buddies}) {\n\t\t$session->{bl_limits}->{buddies} = $data{maximums}->[0];\n\t}\n} else {\n\t$session->{bl_limits}->{buddies} = $data{maximums}->[0];\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/19/buddylist_3_response.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nreturn if exists($data{exchange}); \n\nforeach my $room (@{$data{room}}) {\n\tmy($reqid) = \"\";\n\t$reqid = pack(\"n\", 4);\n\t$reqid .= randchars(2);\n\t($reqid) = unpack(\"N\", $reqid);\n\n\t$session->{chats}->{$reqid} = $room;\n\n\t$session->svcdo(CONNTYPE_BOS, protobit => \"service_request\", reqid => $reqid, protodata => {\n\t\ttype => CONNTYPE_CHAT,\n\t\tchat => {\n\t\t\texchange => $room->{exchange},\n\t\t\turl => $room->{url}\n\t\t}\n\t});\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/13/chat_navigator_response.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$session->callback_typing_status(Net::OSCAR::Screenname->new(\\$data{screenname}), $data{typing_status});\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/4/typing_notification.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\ndelete $session->{rv_proposals}->{$data{cookie}};\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/4/chat_invitation_decline.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nmy $sender = Net::OSCAR::Screenname->new(\\$data{screenname});\nmy $sender_info = $session->{userinfo}->{$sender} ||= {};\n\nif($data{channel} == 1) { \n\t%data = protoparse($session, \"standard_IM_footer\")->unpack($data{message_body});\n\n\tmy $typing_status = 0;\n\tif(exists($data{supports_typing_status})) {\n\t\t$sender_info->{typing_status} = 1;\n\t} else {\n\t\tdelete $sender_info->{typing_status};\n\t}\n\n\n\tmy $new_icon = 0;\n\tif(exists($data{icon_data}->{icon_length}) and $session->{capabilities}->{buddy_icons}) {\n\t\tif(!exists($sender_info->{icon_timestamp})\n\t\t  or $data{icon_data}->{icon_timestamp} > $sender_info->{icon_timestamp}\n\t\t  or $data{icon_data}->{icon_checksum} != $sender_info->{icon_checksum}\n\t\t) {\n\t\t\t$new_icon = 1;\n\t\t}\n\t}\n\n\t$sender_info->{$_} = $data{icon_data}->{$_} foreach keys %{$data{icon_data}};\n\n\t$session->callback_new_buddy_icon($sender, $sender_info) if $new_icon;\n\n\n\t$session->callback_im_in($sender, $data{message}, exists($data{is_automatic}) ? 1 : 0);\n\n} elsif($data{channel} == 2) {\n\t%data = protoparse($session, \"rendezvous_IM\")->unpack($data{message_body});\n\tmy $type = OSCAR_CAPS_INVERSE()->{$data{capability}};\n\t$session->{rv_proposals}->{$data{cookie}} ||= {};\n\tmy $rv = $session->{rv_proposals}->{$data{cookie}};\n\n\tif($data{status} eq \"cancel\") {\n\t\t$connection->log_print(OSCAR_DBG_DEBUG, \"Peer rejected proposal.\");\n\t\t$session->callback_rendezvous_reject($data{cookie});\n\t\t$session->delconn($rv->{connection}) if $rv->{connection};\n\t\tdelete $session->{rv_proposals}->{$data{cookie}};\n\t\treturn;\n\t} elsif($data{status} eq \"accept\") {\n\t\t$connection->log_print(OSCAR_DBG_DEBUG, \"Peer accepted proposal.\");\n\t\t$rv->{accepted} = 1;\n\n\t\tdelete $session->{rv_proposals}->{$data{cookie}};\n\t\t$session->callback_rendezvous_accept($data{cookie});\n\t\treturn;\n\t}\n\n\tif(!$type) {\n\t\t$connection->log_print_cond(OSCAR_DBG_INFO, sub { \"Unknown rendezvous type: \", hexdump($data{capability}) });\n\t\t$session->rendezvous_reject($data{cookie});\n\t\treturn;\n\t}\n\n\tif(!$rv->{cookie}) {\n\t\t$rv->{type} = $type;\n\t\t$rv->{sender} = $sender;\n\t\t$rv->{recipient} = $session->{screenname};\n\t\t$rv->{cookie} = $data{cookie};\n\t} elsif($rv->{peer} ne $sender) {\n\t\t$connection->log_printf(OSCAR_DBG_WARN, \"$sender tried to send a rendezvous which was previously sent by %s; discarding.\", $rv->{peer});\n\t\treturn;\n\t}\n\n\tif($type eq \"chat\") {\n\t\tmy %svcdata = protoparse($session, \"chat_invite_rendezvous_data\")->unpack($data{svcdata});\n\n\t\tif(not grep { $_->{url} eq $svcdata{url} }\n\t\t   grep { $_->{conntype} == CONNTYPE_CHAT }\n\t\t      @{$session->{connections}}\n\t\t) {\n\t\t\t$rv->{chat_url} = $svcdata{url};\n\t\t\t$svcdata{url} =~ /-.*?-(.*?)(\\0*)$/;\n\t\t\tmy $chat = $1;\n\t\t\t$chat =~ s/%([0-9A-Z]{1,2})/chr(hex($1))/eig;\n\t\t\t$rv->{name} = $chat;\n\t\t\t$rv->{exchange} = $svcdata{exchange};\n\n\t\t\t$session->callback_chat_invite($sender, $data{invitation_msg}, $chat, $svcdata{url});\n\t\t}\n\t} elsif($type eq \"filexfer\") {\n\t\tmy %svcdata;\n\t\tif($data{svcdata}) {\n\t\t\t%svcdata = protoparse($session, \"file_transfer_rendezvous_data\")->unpack($data{svcdata});\n\n\t\t\t$rv->{direction} = \"receive\";\n\t\t\t$rv->{accepted} = 0;\n\t\t\t$rv->{filenames} = $svcdata{files};\n\t\t\t$rv->{total_size} = $svcdata{size};\n\t\t\t$rv->{file_count} = $svcdata{file_count};\n\t\t\t$rv->{using_proxy} = 0;\n\t\t\t$rv->{tried_proxy} = 0;\n\t\t\t$rv->{tried_listen} = 0;\n\t\t\t$rv->{tried_connect} = 0;\n\t\t} elsif($rv->{connection}) {\n\t\t\t$session->delconn($rv->{connection});\n\t\t\tdelete $rv->{connection};\n\t\t}\n\n\t\t$rv->{port} = $data{port};\n\t\t$rv->{external_ip} = $data{client_external_ip} ? inet_ntoa(pack(\"N\", $data{client_external_ip})) : \"\";\n\t\t$rv->{ip} = $data{client_1_ip} ? inet_ntoa(pack(\"N\", $data{client_1_ip})) : $rv->{external_ip};\n\t\t$rv->{ft_state} = \"unconnected\";\n\n\t\t$connection->log_printf(OSCAR_DBG_DEBUG, \"Got proposal %s for %s:%d (external %s)\", hexdump($rv->{cookie}), $rv->{ip}, $rv->{port}, $rv->{external_ip});\n\t} elsif($type eq \"sendlist\") {\n\t\tmy %svcdata = protoparse($session, \"buddy_list_transfer_rendezvous_data\")->unpack($data{svcdata});\n\t\tdelete $session->{rv_proposals}->{$data{cookie}};\n\n\t\tmy $list = bltie();\n\t\tforeach my $group (@{$svcdata{group}}) {\n\t\t\t$list->{$group->{name}} = [];\n\n\t\t\tmy $grouplist = $list->{$group->{name}};\n\t\t\tforeach my $buddy (@{$group->{buddies}}) {\n\t\t\t\tpush @$grouplist, Net::OSCAR::Screenname->new(\\$buddy->{name});\n\t\t\t}\n\t\t}\n\n\t\t$session->callback_buddylist_in($sender, $list);\n\t} else {\n\t\t$connection->log_print(OSCAR_DBG_INFO, \"Unsupported rendezvous type '$type'\");\n\t\t$session->rendezvous_reject($data{cookie});\n\t}\n}\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/4/incoming_IM.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$session->callback_im_ok($reqdata, $reqid);\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/4/IM_acknowledgement.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\nmy $screenname = $data{screenname};\nmy $user_info = $session->{userinfo}->{$screenname} ||= {};\n$user_info->{icon_checksum} = $data{checksum};\n$user_info->{icon} = $data{icon};\n$session->callback_buddy_icon_downloaded($user_info->{screenname}, $data{icon});\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/16/buddy_icon_downloaded.pm",
      "package" : "Net::OSCAR::Callbacks"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub {\n\n$session->callback_buddy_icon_uploaded();\n\n}",
      "file" : "/var/tmp/arv_5qWQN2/Net-OSCAR-1.928/lib/Net/OSCAR/Callbacks/16/buddy_icon_uploaded.pm",
      "package" : "Net::OSCAR::Callbacks"
   }
]
