[
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "method _generate_request (Str $path, HashRef $data) {\n  \n  $data->{$_} = $self->$_ for qw(api_user api_key);\n  \n  my $uri = URI->new('https:');\n\t$uri->query_form(%$data);\n\t\n\tmy $req = HTTP::Request->new;\n\t$req->method('POST');\n\t$req->uri('https://sendgrid.com' . $path);\n\t$req->content($uri->query);\n\treturn $req;\n\t\n}\n\nmethod _process_error (Object $res) {\n  croak 'Response is not an HTTP::Response object' if ref $res ne 'HTTP::Response';\n  \n  print Data::Dumper::Dumper($res);\n  \n}\n\nmethod _dispatch_test_request (Object $req) {\n  \n  my $content;\n  if ($req->uri->path eq '/api/profile.get.json') {\n    my %profile = (\n      username => 'jlloyd',\n      email => 'jlloyd@cpan.org',\n      website_access => 'true',\n      active => 'true',\n    );\n    $content = encode_json( [ \\%profile ]);\n  }\n  else {\n    $content = encode_json( { message => 'success' });\n  }\n  \n  my $res = HTTP::Response->new;\n  $res->code(200);\n  $res->content( $content );\n  return $res;\n}\n\nmethod _dispatch_request (Object $req) {\n  croak 'Request is not an HTTP::Request object' if ref $req ne 'HTTP::Request';\n  \n\treturn $self->_dispatch_test_request($req) if $self->test_mode == 1;\n\n\n  my $res = $self->user_agent->request($req);\n  return $res;\n\n}\n\n\n1",
      "file" : "/var/tmp/arv_htvTCF/WebService-SendGrid-1.02/lib/WebService/SendGrid.pm",
      "package" : "WebService::SendGrid"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "method send {\n  croak \"No content\" unless ( $self->text || $self->html );\n\n  my %data;\t\n\tfor my $attr ( $self->meta->get_all_attributes ) {\n\t  next unless __PACKAGE__ eq $attr->definition_context->{package};\n\t  my $name = $attr->name;\n\t  $data{$name} = $self->$name if $self->$name;\n\t}\n\t\n\tmy $req = $self->_generate_request('/api/mail.send.json', \\%data);\n  my $res = $self->_dispatch_request($req);\n\treturn $self->_process_error($res) if $res->code != 200;\n\tmy $content = decode_json $res->content;\n\t\n}\n\n1",
      "file" : "/var/tmp/arv_htvTCF/WebService-SendGrid-1.02/lib/WebService/SendGrid/Mail.pm",
      "package" : "WebService::SendGrid::Mail"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "method BUILD {\n  \n  my $req = $self->_generate_request('/api/profile.get.json', {});\n  my $res = $self->_dispatch_request($req);\n  return $self->_process_error($res) if $res->code != 200;\n\tmy $content = ${ decode_json $res->content }[0];\n\t\n\tfor my $attr ( $self->meta->get_all_attributes ) {\n\t  next unless __PACKAGE__ eq $attr->definition_context->{package};\n\t  my $name = $attr->name;\n\t  my $method = $attr->get_write_method;\n\t  $self->$method($content->{$name}) if defined $content->{$name};\n\t}\n\t\n\twarn 'This user is inactive' if $content->{active} ne 'true';\n  \n}\n\nmethod set {\n  \n  my %data;\t\n\tfor my $attr ( $self->meta->get_all_attributes ) {\n\t  next unless __PACKAGE__ eq $attr->definition_context->{package};\n\t  my $name = $attr->name;\n\t  $data{$name} = $self->$name if $self->$name;\n\t}\n  \n  my $req = $self->_generate_request('/api/profile.set.json', \\%data);\n  my $res = $self->_dispatch_request($req);\n\treturn $self->_process_error($res) if $res->code != 200;\n\tmy $content = decode_json $res->content;\n  \n}\n\nmethod setUsername (Str $username) {\n  croak 'Username too long' if length $username > 100;\n  \n  my $req = $self->_generate_request('/api/profile.setUsername.json', { username => $username });\n  my $res = $self->_dispatch_request($req);\n\treturn $self->_process_error($res) if $res->code != 200;\n\tmy $content = decode_json $res->content;\n  \n}\n\nmethod setPassword (Str $password) {\n  croak 'Password too short' if length $password < 6;\n  \n  my %data = (\n    password  => $password,\n    confirm_password => $password\n  );\n  \n  my $req = $self->_generate_request('/api/profile.setPassword.json', \\%data);\n  my $res = $self->_dispatch_request($req);\n\treturn $self->_process_error($res) if $res->code != 200;\n\tmy $content = decode_json $res->content;\n  \n}\n\nmethod setEmail (Str $email) {\n  croak 'Email too long' if length $email > 100;\n  croak 'Invalid email' if !valid($email);\n  \n  my $req = $self->_generate_request('/api/profile.setEmail.json', { email => $email });\n  my $res = $self->_dispatch_request($req);\n\treturn $self->_process_error($res) if $res->code != 200;\n\tmy $content = decode_json $res->content;\n  \n}\n\n1",
      "file" : "/var/tmp/arv_htvTCF/WebService-SendGrid-1.02/lib/WebService/SendGrid/Profile.pm",
      "package" : "WebService::SendGrid::Profile"
   }
]
