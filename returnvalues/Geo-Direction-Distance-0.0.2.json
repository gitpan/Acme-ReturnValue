[
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "sub v2p_pp{\n    my ($f,$a,$rd,$lat,$lng,$dir,$dis) = @_;\n    ($lat,$lng,$dir) = map{ $_ * $rd } ($lat,$lng,$dir);\t\t\t\t\t\t\n\n    my $r  = 1 - $f;\n    my $tu = $r * tan($lat);\n    my $sf = sin($dir);\n    my $cf = cos($dir);\n    my $b  = ($cf == 0) ? 0.0 : 2.0 * atan2($tu,$cf);\n\n    my $cu  = 1.0 / sqrt(1 + $tu**2);\n    my $su  = $tu * $cu;\n    my $sa  = $cu * $sf;\n    my $c2a = 1 - $sa**2;\n    my $x   = 1.0 + sqrt(1.0 + $c2a * (1.0/($r**2)-1.0));\n    $x      = ($x - 2.0) / $x;\n\n    my $c = 1.0 - $x;\n    $c    = ($x**2 / 4.0 + 1.0) / $c;\n    my $d = (0.375 * $x**2 - 1.0)* $x;\n    $tu   = $dis / ($r * $a * $c);\n    my $y = $tu;\n    $c    = $y + 1;\n\n    my ($sy,$cy,$cz,$e) = ();\n    while (abs($y - $c) > 0.00000000005) {\n        $sy = sin($y);\n        $cy = cos($y);\n        $cz = cos($b + $y);\n        $e  = 2.0 * $cz**2 -1.0;\n        $c  = $y;\n        $x  = $e * $cy;\n        $y  = $e + $e - 1;\n        $y  = ((($sy**2 * 4.0 - 3.0) * $y * $cz * $d / 6.0 + $x) * $d / 4.0 - $cz) * $sy * $d + $tu;\n    }\n\t\t\n    $b       = $cu * $cy * $cf - $su * $sy;\n    $c       = $r * sqrt($sa**2 + $b**2);\n    $d       = $su * $cy + $cu * $sy * $cf;\n    my $rlat = atan2($d,$c);\n\n    $c       = $cu * $cy - $su * $sy * $cf;\n    $x       = atan2($sy * $sf, $c); \n    $c       = ((-3.0 * $c2a + 4.0) * $f + 4.0) * $c2a * $f / 16.0;\n    $d       = (($e * $cy * $c + $cz) * $sy * $c + $y) * $sa;\n    my $rlon = $lng + $x - (1.0 - $c) * $d * $f;\n\n    return map { $_/$rd } ($rlat,$rlon);\n}\n\nsub p2v_pp {\n    my ($f,$a,$rd,$lat,$lng,$tlat,$tlng) = @_;\n\n    return (180,0) if (($lat == $tlat) && ($lng == $tlng));\n\n    my $e2 = 2*$f - $f*$f;   \t\t\t\t\t\t\t\t\n    my $r  = 1 - $f;\n\n    my $tu1 = $r * tan($lat);\n    my $tu2 = $r * tan($tlat);\n\n    my $cu1 = 1.0 / sqrt(1.0 + $tu1**2);\n    my $su1 = $cu1 * $tu1;\n    my $cu2 = 1.0 / sqrt(1.0 + $tu2**2); \n    my $s1  = $cu1 * $cu2;\n    my $b1  = $s1 * $tu2;\n    my $f1  = $b1 * $tu1;\n    my $x   = $tlng - $lng;\n    my $d   = $x + 1;\t\t\t\t\t\t\t\t\t\n\n    my $iter =1;\n    my ($sx,$cx,$sy,$cy,$y,$sa,$c2a,$cz,$e,$c)=();\n\n    while ((abs($d - $x) > 0.00000000005) && ($iter < 100)) {\n        $iter++;\n        $sx = sin($x);\n        $cx = cos($x);\n        $tu1 = $cu2 * $sx;\n        $tu2 = $b1 - $su1 * $cu2 * $cx;\n        $sy = sqrt($tu1**2 + $tu2**2);\n        $cy = $s1 * $cx + $f1;\n        $y = atan2($sy,$cy);\n        $sa = $s1 * $sx / $sy;\n        $c2a = 1 - $sa**2;\n        $cz = $f1 + $f1;\n\n        if ($c2a > 0.0) {\n            $cz = $cy - $cz / $c2a;\n        }\n\n        $e = $cz**2 * 2.0 - 1.0;\n        $c = ((-3.0 * $c2a + 4.0) * $f + 4.0) * $c2a * $f / 16.0;\n        $d = $x;\n        $x = (($e * $cy * $c + $cz) * $sy * $c + $y) * $sa;\n        $x = (1.0 - $c) * $x * $f + $tlng - $lng;\n    }\n\n    my $dir = atan2($tu1,$tu2) / $rd;\n    $x = sqrt((1 / ($r**2) -1) * $c2a +1);\n    $x += 1;\n    $x = ($x - 2.0) / $x;\n    $c = 1.0 - $x;\n    $c = ($x**2 / 4.0 + 1.0) / $c;\n    $d = (0.375 * $x**2 - 1.0) * $x;\n    $x = $e * $cy;\n    my $dis = (((($sy**2 * 4.0 - 3.0) * (1.0 - $e - $e) * $cz * $d / 6.0 - $x) * $d / 4.0 + $cz) * $sy * $d + $y) * $c * $a * $r;\n  \n    return ($dir,$dis);\n}\n\n1",
      "file" : "/var/tmp/arv_I1yBbT/Geo-Direction-Distance-0.0.2/lib/Geo/Direction/Distance.pm",
      "package" : "Geo::Direction::Distance"
   }
]
