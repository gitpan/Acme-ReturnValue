[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub import {\n\tmy ($cls,$symspecs,%opts) = @_;\n\treturn 1 unless $symspecs;\n\t\n\tmy $reqpkg = caller();\n\tmy $type = utype2const(_getopt(%opts, \"type\"));\n\t\n\t\n\tmy $mapname \t\t= _getopt(%opts, \"mapname\");\n\tmy $export_tag \t\t= _getopt(%opts, \"tag\");\n\tmy $prefix\t\t\t= _getopt(%opts, \"prefix\") || \"\";\n\tmy $display_prefix \t= _getopt(%opts, \"show_prefix\");\n\tmy $start \t\t\t= _getopt(%opts, \"start_at\") || 0;\n\tmy $stringy\t\t\t= _getopt(%opts, \"stringy_vars\")\n\t\t\t\t\t\t|| _getopt(%opts, \"dualvar\");\n\t\t\t\t\t\t\n\tmy $listname\t\t= _getopt(%opts, \"allvalues\");\n\tmy $symsname\t\t= _getopt(%opts, \"allsyms\");\n\t\n\tif((!$mapname) && $export_tag) {\n\t\t$mapname = $export_tag . \"_to_str\";\n\t}\t\n\t\n\tmy %symhash;\n\t\n\tref $symspecs eq 'HASH' ? %symhash = %$symspecs :\n\t\t$FN_CONST_TBL->{$type}->($symspecs, \\%symhash, $start);\n\t\n\t\n\twhile (my ($symname,$symval) = each %symhash) {\n\t\tif($stringy && looks_like_number($symval)) {\n\t\t\t\n\t\t\tmy $dv_name = $display_prefix ? $prefix . $symname : $symname;\n\t\t\t\n\t\t\t$symval = Constant::Generate::Dualvar::CG_dualvar(\n\t\t\t\t$symval, $dv_name);\n\t\t}\n\t\t_gen_constant($reqpkg, $prefix.$symname, $symval);\n\t}\n\t\n\tif($mapname) {\n\t\tmy $rhash = _gen_map_rhash(\\%symhash, $prefix, $display_prefix);\n\t\t$FN_RMAP_TBL->{$type}->($reqpkg.\"::$mapname\", $rhash);\n\t}\n\t\n\tif($prefix) {\n\t\tforeach my $usym (keys %symhash) {\n\t\t\tmy $v = delete $symhash{$usym};\n\t\t\t$symhash{$prefix.$usym} = $v;\n\t\t}\n\t}\n\t\n\tmy $auto_export = _getopt(%opts, \"export\");\n\tmy $auto_export_ok = _getopt(%opts, \"export_ok\");\n\tmy $h_etags = _getopt(%opts, \"export_tags\");\n\t\t\n\tmy @symlist = keys %symhash;\n\t\n\tif($listname) {\n\t\tmy %tmp = reverse %symhash;\n\t\t_gen_constant($reqpkg, $listname, keys %tmp);\n\t\tpush @symlist, $listname;\n\t}\n\tif($symsname) {\n\t\t_gen_constant($reqpkg, $symsname, keys %symhash);\n\t\tpush @symlist, $symsname;\n\t}\n\t\n\tpush @symlist, $mapname if $mapname;\n\t_mangle_exporter($reqpkg, \\@symlist,\n\t\t\t\t\t $export_tag,\n\t\t\t\t\t $auto_export, $auto_export_ok, $h_etags || $export_tag);\n\n\tif(%opts) {\n\t\tdie \"Unknown keys \" . join(\",\", keys %opts);\n\t}\n}",
      "file" : "/var/tmp/arv_xLhkfw/Constant-Generate-0.16/lib/Constant/Generate.pm",
      "package" : "Constant::Generate"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub import {\n    my ($cls,$symspec,%options) = @_;\n    if($symspec) {\n        require 'Constant/Generate.pm';\n        $options{dualvar} = 1;\n        @_ = ('Constant::Generate', $symspec, %options);\n        goto &Constant::Generate::import;\n    } else {\n        goto &Exporter::import;\n    }\n}",
      "file" : "/var/tmp/arv_xLhkfw/Constant-Generate-0.16/lib/Constant/Generate/Dualvar.pm",
      "package" : "Constant::Generate::Dualvar::_Overloaded"
   }
]
