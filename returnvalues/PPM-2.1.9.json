[
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "@okids  = qw( SOFTPKG )",
      "file" : "/var/tmp/arv_eR2TYl/PPM-2.1.9/lib/PPM/XML/RepositorySummary.pm",
      "package" : "PPM::XML::RepositorySummary"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub validate_required_kids\n{\n    my $self = shift;\n    my $func = shift;\n    my $kid;\n    my $type = ref $self;\n    my $success = 1;\n\n    my $elem = $type;\n    $elem =~ s/.*:://;\n\n    my $base = $type;\n    $base =~ s/::[^:]*?$//;\n\n    foreach $kid (@{\"$type\\::rkids\"})\n    {\n        my @kidlist = map( ref, @{$self->{Kids}} );\n\n        if (!grep( /^$base\\::$kid$/, @kidlist ))\n        {\n            &$func( \"Element '$elem' must contain a '$kid' element.\" );\n            $success = 0;\n        }\n    }\n\n    return $success;\n}",
      "file" : "/var/tmp/arv_eR2TYl/PPM-2.1.9/lib/PPM/XML/ValidatingElement.pm",
      "package" : "PPM::XML::ValidatingElement"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "@oattrs = qw( HREF EXEC )",
      "file" : "/var/tmp/arv_eR2TYl/PPM-2.1.9/lib/PPM/XML/PPD.pm",
      "package" : "PPM::XML::PPD"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "@okids = qw( SOFTPKG )",
      "file" : "/var/tmp/arv_eR2TYl/PPM-2.1.9/lib/PPM/XML/PPMConfig.pm",
      "package" : "PPM::XML::PPMConfig"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub as_text\n{\n    my $self = shift;\n    my $text;\n\n    my $type = ref $self;\n    $type =~ s/.*:://;\n\n    $text = \"\\n<\" . $type;\n    foreach (sort keys %{$self})\n    {\n        if ($_ !~ /Text|Kids/)\n            { $text .= \" $_=\\\"\" . $self->{$_} . '\"'; }\n    }\n\n    my $cont = $self->content();\n    if (defined $cont)\n        { $text .= '>' . $cont . '</' . $type . '>'; }\n    else\n        { $text .= ' />'; }\n\n    $text =~ s/\\n\\n/\\n/g;\n    return $text;\n}",
      "file" : "/var/tmp/arv_eR2TYl/PPM-2.1.9/lib/PPM/XML/Element.pm",
      "package" : "PPM::XML::Element"
   }
]
