[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub _text {\n        my $self = shift;\n        my $text = shift;\n\n        if (! $self->{'__active'}){\n                return 0;\n        }\n\n        if ($text =~ /Things that (.*):/){\n                $self->{'__capture'} = $1;\n                return 1;\n        }\n\n        if ($text =~ /XML is not valid/){\n                $self->{'__capture'} = 'invalid xml';\n                $self->{'__invalid'} = 1;\n                return 1;\n        }\n        \n        if (! $self->{'__capture'}){\n                return 0;\n        }\n            \n        if ($text !~ /\\w/){\n                return 0;\n        }\n\n        my $key = $self->{'__capture'};\n        $self->{'__report'}->{$key} ||= [];\n        \n        if ($self->{'__invalid'}){\n                $text = decode_entities($text);\n        }\n\n        push @{$self->{'__report'}->{$key}}, $text;\n        return 1;\n    }",
      "file" : "/var/tmp/arv_OYZKrG/Net-Moo-0.11/lib/Net/Moo/Validate.pm",
      "package" : "Net::Moo::Validate"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub text_collection_greetingcard {\n        my $self = shift;\n        my $data = shift;\n\n        $self->startTag(\"text_collection\");\n        $self->startTag('greetingcard');\n\n\n        my %possible = ('main' => ['string', 'align', 'font', 'colour'],\n                        'back' => ['id', 'string', 'bold', 'align', 'font', 'colour']);\n\n        foreach my $part ('main', 'back'){\n\n                if (! exists($data->{'text'}->{$part})){\n                        next;\n                }\n\n                $self->startTag($part);\n\n                foreach my $ln (@{$data->{'text'}->{$part}}){\n\n                        if ($part eq 'back'){\n                                $self->startTag('text_line');\n                        }\n\n                        foreach my $el (@{$possible{$part}}){\n\n                                if (exists($ln->{$el})){\n                                        $self->startTag($el);\n                                        $self->characters($ln->{$el});\n                                        $self->endTag($el);\n                                }\n                        }\n\n                        if ($part eq 'back'){\n                                $self->endTag('text_line');\n                        }\n                }\n\n                $self->endTag($part);\n        }\n\n        $self->endTag('greetingcard');\n        $self->endTag(\"text_collection\");\n}",
      "file" : "/var/tmp/arv_OYZKrG/Net-Moo-0.11/lib/Net/Moo/Document.pm",
      "package" : "Net::Moo::Document"
   }
]
