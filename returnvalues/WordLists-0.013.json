[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub get_wordlist\n{\n\tmy ($self, $sUntagged, $args) = @_;\n\t\n\tmy $wl;\n\tif (defined $args->{'wl'} and ref $args->{'wl'} eq 'WordLists::WordList')\n\t{\n\t\t$wl=$args->{'wl'};\n\t}\n\telse\n\t{\n\t\t$wl = WordLists::WordList->new;\n\t}\n\tforeach my $sSentence (@{$self->{tagger}->get_sentences($sUntagged)})\n\t{\n\t\tmy $taggedMS;\n\t\t$taggedMS = $self->{tagger}->add_tags( $sSentence );\n\t\twhile ($taggedMS =~ m`<([a-z]+)>([^<]+)</\\1>`g)\n\t\t{\n\t\t\tmy $sHW = _norm_word($2);\n\t\t\tmy $sPosCode = $1;\n\t\t\tmy $bNext;\n\t\t\tforeach (@ignore_pos_codes) \n\t\t\t{\n\t\t\t\tif ($sPosCode eq $_)\n\t\t\t\t{\n\t\t\t\t\t$bNext++;\n\t\t\t\t\tlast;\n\t\t\t\t}\n\t\t\t}\n\t\t\tnext if $bNext;\n\t\t\tmy $sPos = human_pos($sPosCode);\n\t\t\tmy $sense = WordLists::Sense->new();\n\t\t\t$sense->set_hw($sHW);\n\t\t\t$sense->set_pos($sPos);\n\t\t\t$sense->set_eg($sSentence);\n\t\t\t$sense->set_poscode($sPosCode);\n\t\t\tif (defined $args->{'callback_on_make_sense'} and ref $args->{'callback_on_make_sense'} eq ref sub{})\n\t\t\t{\n\t\t\t\t&{$args->{'callback_on_make_sense'}}($sense);\n\t\t\t}\n\t\t\tmy @senses = $wl->get_senses_for($sense->get_hw, $sense->get_pos);\n\t\t\tif (@senses and !$args->{'keep_repeats'})\n\t\t\t{\n\t\t\t\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (defined $args->{'test_sense_before_add'} and ref $args->{'test_sense_before_add'} eq ref sub {} and !&{$args->{'test_sense_before_add'}}($sense))\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (defined $args->{'callback_on_add_sense'} and ref $args->{'callback_on_add_sense'} eq ref sub{})\n\t\t\t\t\t{\n\t\t\t\t\t\t&{$args->{'callback_on_add_sense'}}($sense);\n\t\t\t\t\t}\n\t\t\t\t\t$wl->add_sense($sense);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\treturn $wl;\n}",
      "file" : "/var/tmp/arv_xrjDQy/WordLists-0.013/lib/WordLists/Tag/Tagger.pm",
      "package" : "WordLists::Tag::Tagger"
   }
]
