[
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "AUTOLOAD\n{\n  use strict;\n  use vars qw($AUTOLOAD);\n  \n  \n  my $save = $@;\n  my @BAK = @_;\n  \n  my ($pkg, $subname) = do{\n    local($1, $2);\n    $AUTOLOAD =~ /^(.*)::(\\w+)$/\n  } or got_undefined_subroutine($AUTOLOAD);\n\n  $pkg->_loadsub($AUTOLOAD);\n\n  $@ = $save;\n  @_ = @BAK;\n  goto &$AUTOLOAD;\n}\n\nsub _loadsub\n{\n  my $pkg = shift;\n  my $fullsubname = shift;\n  use vars qw($AUTOLOAD);\n\n  local($1, $2);\n  my ($subpkg,$subname) = $fullsubname =~ /^(.*)::(\\w+)$/\n    or got_undefined_subroutine($fullsubname);\n\n  if(!defined($TABLE->{$subname}{offset}))\n    {\n      _init_table();\n      if( !defined($TABLE->{$subname}{offset}) )\n      {\n\tif( $subname eq 'DESTROY' )\n\t{\n\t  my $sub = sub{};\n\t  {\n\t    no strict 'refs';\n\t    *$fullsubname = $sub;\n\t  }\n\t  return $sub;\n\t}\n      \n        CORE::die \"Undefined subroutine \\&$fullsubname got called.\\n\";\n      }\n    }\n  if($TABLE->{$subname}{offset} == -1)\n    {\n      CORE::die \"\\&$fullsubname is getting loaded twice. There must be a problem in AUTOLOAD.\\n\";\n    }\n  \n  _check_and_update_fh();\n  seek($FH, $PROGLEN + $HEADLEN + $TABLE->{$subname}{offset}, 0)\n    or die \"Can't seek $subname. [$!]\\n\";\n  \n  my $sub;\n  read($FH, $sub, $TABLE->{$subname}{'length'})\n    or die \"Can't read $subname. [$!]\\n\";\n\n  if( $]>=5.008 )\n  {\n    $sub = 'use bytes;'.$sub;\n  }\n\n  CORE::eval(($sub=~/(.*)/s)[0]);\n  if ($@)\n    {\n      CORE::die $@;\n    }\n  $DB::sub = $fullsubname; \n  \n  $TABLE->{$subname}{offset} = -1;\n\n}\n\nsub new\n{\n  goto &Unicode::Japanese::new;\n}\n\nsub DESTROY\n{\n}\n\nsub gensym {\n  package Unicode::Japanese::Symbol;\n  no strict;\n  $genpkg = \"Unicode::Japanese::Symbol::\";\n  $genseq = 0;\n  my $name = \"GEN\" . $genseq++;\n  my $ref = \\*{$genpkg . $name};\n  delete $$genpkg{$name};\n  $ref;\n}\n\nsub _check_and_update_fh {\n  _open_fh() if not ($PID == $$);\n}\nsub _open_fh {\n  my $file = \"Unicode/Japanese.pm\";\n  $PID = $$;\n  OPEN:\n  {\n    if( $INC{$file} )\n    {\n      open($FH,$INC{$file}) || CORE::die(\"could not open file [$INC{$file}] for input : $!\");\n      last OPEN;\n    }\n    foreach my $path (@INC)\n      {\n        my $mypath = $path;\n        $mypath =~ s#/$##;\n        if (-f \"$mypath/$file\")\n          {\n            open($FH,\"$mypath/$file\") || CORE::die(\"could not open file [$INC{$file}] for input : $!\");\n            last OPEN;\n          }\n      }\n    CORE::die \"Can't find Japanese.pm in \\@INC\\n\";\n  }\n  binmode($FH);\n}\n\nsub _init_table {\n  \n  if(!defined($HEADLEN))\n    {\n      $FH = gensym;\n\n      _open_fh();\n      \n      local($/) = \"\\n\";\n      my $line;\n      while(defined($line = <$FH>))\n\t{\n\t  last if($line =~ m/^__DATA__/);\n\t}\n      $PROGLEN = tell($FH);\n      \n      read($FH, $HEADLEN, 4)\n\tor die \"Can't read the table. [$!]\\n\";\n      $HEADLEN = unpack('N', $HEADLEN);\n      read($FH, $TABLE, $HEADLEN)\n\tor die \"Can't seek the table. [$!]\\n\";\n      $TABLE =~ /(.*)/s;\n      $TABLE = eval(($TABLE=~/(.*)/s)[0]);\n      if($@)\n\t{\n\t  die \"Internal Error. [$@]\\n\";\n\t}\n      if(!defined($TABLE))\n\t{\n\t  die \"Internal Error.\\n\";\n\t}\n      $HEADLEN += 4;\n\n      Unicode::Japanese::load_xs();\n    }\n}\n\nsub _getFile {\n  my $this = shift;\n\n  my $file = shift;\n\n  exists($TABLE->{$file})\n    or die \"no such file [$file]\\n\";\n\n  _check_and_update_fh();\n  seek($FH, $PROGLEN + $HEADLEN + $TABLE->{$file}{offset}, 0)\n    or die \"Can't seek $file. [$!]\\n\";\n  \n  my $data;\n  read($FH, $data, $TABLE->{$file}{'length'})\n    or die \"Can't read $file. [$!]\\n\";\n  \n  $data;\n}\n\nsub use_I18N_Japanese\n{\n  shift;\n  if( @_ )\n  {\n    my $bits = 0;\n    foreach( @_ )\n    {\n      $bits |= 0x1000000 if $_ eq 're';\n      $bits |= 0x2000000 if $_ eq 'tr';\n      $bits |= 0x4000000 if $_ eq 'format';\n      $bits |= 0x8000000 if $_ eq 'string';\n    }\n    $^H |= $bits;\n  }else\n  {\n    $^H |= 0x0f00_0000;\n  }\n}\n\nsub no_I18N_Japanese\n{\n  shift;\n  if( @_ )\n  {\n    my $bits = 0;\n    foreach( @_ )\n    {\n      $bits |= 0x1000000 if $_ eq 're';\n      $bits |= 0x2000000 if $_ eq 'tr';\n      $bits |= 0x4000000 if $_ eq 'format';\n      $bits |= 0x8000000 if $_ eq 'string';\n    }\n    $^H &= ~$bits;\n  }else\n  {\n    $^H &= ~0x0f00_0000;\n  }\n}\n\n1",
      "file" : "/var/tmp/arv_7DfGYd/Unicode-Japanese-0.49/lib/Unicode/Japanese.pm",
      "package" : "Unicode::Japanese::PurePerl"
   }
]
