[
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "AUTOLOAD {\n    our $AUTOLOAD;\n    print STDERR \"SelfLoader::AUTOLOAD for $AUTOLOAD\\n\" if DEBUG;\n    my $SL_code = $Cache{$AUTOLOAD};\n    my $save = $@; \n    unless ($SL_code) {\n        $AUTOLOAD =~ m/^(.*)::/;\n        SelfLoader->_load_stubs($1) unless exists $Cache{\"${1}::<DATA\"};\n        $SL_code = $Cache{$AUTOLOAD};\n        $SL_code = \"sub $AUTOLOAD { }\"\n            if (!$SL_code and $AUTOLOAD =~ m/::DESTROY$/);\n        croak \"Undefined subroutine $AUTOLOAD\" unless $SL_code;\n    }\n    print STDERR \"SelfLoader::AUTOLOAD eval: $SL_code\\n\" if DEBUG;\n\n    {\n\tno strict;\n\teval $SL_code;\n    }\n    if ($@) {\n        $@ =~ s/ at .*\\n//;\n        croak $@;\n    }\n    $@ = $save;\n    defined(&$AUTOLOAD) || die \"SelfLoader inconsistency error\";\n    delete $Cache{$AUTOLOAD};\n    goto &$AUTOLOAD\n}\n\nsub load_stubs { shift->_load_stubs((caller)[0]) }\n\nsub _load_stubs {\n    my($self, $callpack, $endlines) = @_;\n    no strict \"refs\";\n    my $fh = \\*{\"${callpack}::DATA\"};\n    use strict;\n    my $currpack = $callpack;\n    my($line,$name,@lines, @stubs, $protoype);\n\n    print STDERR \"SelfLoader::load_stubs($callpack)\\n\" if DEBUG;\n    croak(\"$callpack doesn't contain an __DATA__ token\")\n        unless defined fileno($fh);\n    if(sysseek($fh, tell($fh), 0)) {\n      open my $nfh, '<&', $fh or croak \"reopen: $!\";\n      close $fh or die \"close: $!\";                 \n      open $fh, '<&', $nfh or croak \"reopen2: $!\";  \n      close $nfh or die \"close after reopen: $!\";   \n      $fh->untaint;\n    }\n    $Cache{\"${currpack}::<DATA\"} = 1;   \n\n    local($/) = \"\\n\";\n    while(defined($line = <$fh>) and $line !~ m/^__END__/) {\n\tif ($line =~ m/^\\s*sub\\s+([\\w:]+)\\s*((?:\\([\\\\\\$\\@\\%\\&\\*\\;]*\\))?(?:$AttrList)?)/) {\n            push(@stubs, $self->_add_to_cache($name, $currpack, \\@lines, $protoype));\n            $protoype = $2;\n            @lines = ($line);\n            if (index($1,'::') == -1) {         \n                $name = \"${currpack}::$1\";\n            } else {                            \n                $name = $1;\n                $name =~ m/^(.*)::/;\n                if (defined(&{\"${1}::AUTOLOAD\"})) {\n                    \\&{\"${1}::AUTOLOAD\"} == \\&SelfLoader::AUTOLOAD ||\n                        die 'SelfLoader Error: attempt to specify Selfloading',\n                            \" sub $name in non-selfloading module $1\";\n                } else {\n                    $self->export($1,'AUTOLOAD');\n                }\n            }\n        } elsif ($line =~ m/^package\\s+([\\w:]+)/) { \n            push(@stubs, $self->_add_to_cache($name, $currpack, \\@lines, $protoype));\n            $self->_package_defined($line);\n            $name = '';\n            @lines = ();\n            $currpack = $1;\n            $Cache{\"${currpack}::<DATA\"} = 1;   \n            if (defined(&{\"${1}::AUTOLOAD\"})) {\n                \\&{\"${1}::AUTOLOAD\"} == \\&SelfLoader::AUTOLOAD ||\n                    die 'SelfLoader Error: attempt to specify Selfloading',\n                        \" package $currpack which already has AUTOLOAD\";\n            } else {\n                $self->export($currpack,'AUTOLOAD');\n            }\n        } else {\n            push(@lines,$line);\n        }\n    }\n    if (defined($line) && $line =~ /^__END__/) { \n        unless ($line =~ /^__END__\\s*DATA/) {\n            if ($endlines) {\n                @$endlines = <$fh>;\n            }\n            close($fh);\n        }\n    }\n    push(@stubs, $self->_add_to_cache($name, $currpack, \\@lines, $protoype));\n    no strict;\n    eval join('', @stubs) if @stubs;\n}\n\n\nsub _add_to_cache {\n    my($self,$fullname,$pack,$lines, $protoype) = @_;\n    return () unless $fullname;\n    carp(\"Redefining sub $fullname\")\n      if exists $Cache{$fullname};\n    $Cache{$fullname} = join('', \"\\n\\#line 1 \\\"sub $fullname\\\"\\npackage $pack; \", @$lines);\n    print STDERR \"SelfLoader cached $fullname: $Cache{$fullname}\" if DEBUG;\n    defined($protoype) ? \"sub $fullname $protoype;\" : \"sub $fullname;\"\n}\n\nsub _package_defined {}\n\n1",
      "file" : "/var/tmp/arv_hFdpS9/SelfLoader-1.20/lib/SelfLoader.pm",
      "package" : "SelfLoader"
   }
]
