[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub generate {\n    my ($self, $schema) = @_;\n    my $doc = Document->new();\n\n    my $xsdschema = $doc->createElement(\"xsd:schema\");\n    $xsdschema->setAttribute('xmlns:xsd', 'http://www.w3.org/2001/XMLSchema');\n    $doc->appendChild($xsdschema);\n\n    foreach my $class ($schema->classes) {\n        $xsdschema->appendChild($self->complexType($class, $doc));\n    }\n\n    return $doc;\n}",
      "file" : "/var/tmp/arv_qRa_dD/Oryx-0.24/lib/Oryx/Schema/XSD.pm",
      "package" : "Oryx::Schema::XSD"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub _sequence_exists {\n    my ($self, $dbh, $table) = @_;\n    my $seq_name = $self->_seq_name($table);\n\n    $self->_create_oryx_sequence;\n\n    if (!$self->table_exists('oryx_sequences')) {\n        $self->table_create\n}\n\nsub _sequence_create {\n    my ($self, $dbh, $table) = @_;\n\n    $self->_create_oryx_sequence;\n\n    my $sql = \"INSERT INTO oryx_sequences VALUES ('\".$self->_seq_name($table).\"', 0)\";\n    my $sth = $dbh->prepare($sql);\n    $sth->execute();\n    $sth->finish;\n}\n\nsub _seq_name {\n    my ($self, $table) = @_;\n    return $table.\"_id_seq\";\n}\n\n1;\n\n__END__\n\n",
      "file" : "/var/tmp/arv_qRa_dD/Oryx-0.24/lib/Oryx/DBI/Util/Generic.pm",
      "package" : "Oryx::DBI::Util::Generic"
   }
]
