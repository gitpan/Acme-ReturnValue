[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub output {\n    my $self  = shift;\n    my $scope = shift || 1;\n\n    die \"Can not defined a build-in function.\"\n      if $self->is_buildin;\n\n    my $name      = $self->check_name;\n    my $indenting = $self->get_indenting($scope);\n    my $output    = '';\n\n    $output .= $indenting;\n    $output .= \"function $name ( \";\n\n    $self->parameters( [] ) unless defined $self->parameters;\n\n    $output .= join(\n        ', ',\n        map {\n            die \"Not a valid 'JavaScript::Code::Function' parameter name: '$_'\"\n              unless $self->is_valid_name($_);\n            $_\n          } @{ $self->parameters }\n    );\n\n    $output .= \" )\\n\";\n\n    if ( defined(my $block = $self->block) ) {\n        $output .= $block->output($scope);\n    }\n    else {\n        $output .= $indenting;\n        $output .= \"{\\n\";\n        $output .= $indenting;\n        $output .= \"}\\n\";\n    }\n\n    return $output;\n}",
      "file" : "/var/tmp/arv_lUNBeF/JavaScript-Code-0.08/lib/JavaScript/Code/Function.pm",
      "package" : "JavaScript::Code::Function"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub output {\n    my $self  = shift;\n    my $scope = shift || 1;\n\n    die \"At least one if-statement is needed.\"\n      unless defined $self->ifs;\n\n    my $indenting = $self->get_indenting($scope);\n    my $output    = '';\n\n    my $max = @{ $self->ifs };\n    for ( my $i = 0 ; $i < $max ; ++$i ) {\n        $output .= $indenting;\n        $output .= \"else \" if $i;\n\n        my $c = $self->ifs->[$i];\n        $output .= \"if ( \" . $c->{expression}->output($scope) . \" )\\n\";\n        $output .= $c->{block}->output($scope);\n    }\n\n    if ( defined $self->else ) {\n        $output .= $indenting;\n        $output .= \"else\\n\";\n        $output .= $self->else->output;\n    }\n\n    return $output;\n}",
      "file" : "/var/tmp/arv_lUNBeF/JavaScript-Code-0.08/lib/JavaScript/Code/Condition.pm",
      "package" : "JavaScript::Code::Condition"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub return {\n    my $obj   = shift;\n    my $class = ref $obj || $obj;\n\n    return $class->new( name => 'return' );\n}",
      "file" : "/var/tmp/arv_lUNBeF/JavaScript-Code-0.08/lib/JavaScript/Code/Function/BuildIn.pm",
      "package" : "JavaScript::Code::Function::BuildIn"
   }
]
