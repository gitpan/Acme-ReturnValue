[
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "run() unless caller",
      "file" : "/var/tmp/arv_PufSTg/Freecell-App-0.03/lib/Freecell/App.pm",
      "package" : "Freecell::App"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub heuristic {\n    my ($self) = @_;\n    my $score = 64;\n    my @z = map { scalar grep $_, @$_[ 1 .. 20 ] } @$self;\n    map $score -= rank( $self->[$_][0] ), 4 .. 7;    \n    $score -= grep !$self->[$_][1], 0 .. 7;          \n    $score -= grep !$self->[$_][0], 0 .. 3;          \n\n    my $seq = 0;\n    foreach my $c ( 0 .. 7 ) {    \n        next unless $z[$c] > 1;\n        foreach my $r ( 1 .. ( $z[$c] - 1 ) ) {\n            my $src0 = $self->[$c][$r];\n            my $src1 = $self->[$c][ $r + 1 ];\n            my $brk  = !opposite_colors( $src1, $src0 )\n              || rank($src1) + 1 != rank($src0);\n            if ($brk) {\n                $score += $brk;              \n                $seq   += $src1 >= $src0;    \n            }\n        }\n    }\n    [ $score, $score + $seq ];\n}",
      "file" : "/var/tmp/arv_PufSTg/Freecell-App-0.03/lib/Freecell/App/Tableau.pm",
      "package" : "Freecell::App::Tableau"
   }
]
