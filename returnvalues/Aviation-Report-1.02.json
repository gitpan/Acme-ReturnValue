[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub decode_METAR_TAF {\n   my ($s, $style) = @_;\n   $s = uc $s if $style;\n\n   $s =~ s/=//g;\n\n   my ($out) = '';\n\n   $out = $s . \"\\n\";\n\n   my $id = '';\n   my $token;\n\n   my @tokens = split /\\s+/, $s;\n\n   while ($token = shift @tokens) {\n         $out .= $token . \"\\t\" if $style;\n\n         my $intensity = substr($token, 0, 1);\n         if ($intensity eq '-') {\n            $intensity = 'light';\n         }\n         elsif ($intensity eq '+') {\n            $intensity = 'heavy';\n         }\n\n         if ($intensity eq 'light' or $intensity eq 'heavy') {\n            $out .= $intensity . ' ';\n            $token = substr($token,1);\n         }\n\n         if ($id eq '' and $token =~ /^[A-Z]{4}$/) {\n            $id = $token;\n            $out .= \"for airport \" . $token;\n         }\n         elsif ($token =~ /^(\\d{2})(\\d{2})(\\d{2})Z$/) {\n            $out .= \"issued day $1 at $2:$3 zulu\";\n         }\n         elsif ($token =~ /^(\\d{2})(\\d{2})(\\d{2})$/) {\n            $out .= \"valid from day $1 at $2:00 to $3:00 zulu\";\n         }\n         elsif ($token =~ /^00000KT$/) {\n            $out .= \"wind light and variable\";\n         }\n         elsif ($token =~ /^VRB(\\d{2})KT$/) {\n            $out .= \"variable wind direction at @{[int $1]} knots\";\n         }\n         elsif ($token =~ /^(\\d{3})V(\\d{3})$/) {\n            $out .= \"wind varies from $1 to $2\";\n         }\n         elsif ($token =~ /^(\\d{3})(\\d{2})(G?)(\\d+)?KT$/) {\n            $out .= \"wind from $1 true at @{[int $2]} knots\";\n            $out .= \" gusts to $4\" if $3 eq 'G';\n         }\n         elsif ($token =~ /^(\\d{1,2})$/) {\n            $out .= \"ground visibility $1\";\n            if ($token = shift @tokens) {\n               if ($token =~ /^(\\d+\\/\\d+)$/) {\n                  $out .= \" and $1 statute miles\";\n               }\n            }\n         }\n         elsif ($token =~ /^(P?)(\\d+)SM$/) {\n            $out .= \"ground visibility @{[$1 eq 'P'?'more than ':'']}$2 statute miles\";\n         }\n         elsif ($token =~ /^(\\d+)\\/(\\d+)SM$/) {\n            $out .= \"ground visibility $1/$2 statute miles\t\";\n         }\n         elsif ($token =~ /^R(\\d{2})(L|C|R)\\/(M|P)?(\\d+)FT$/) {\n            $out .= \"runway visibility for Rwy $1$2 is @{[$3 eq 'M'?'less than minimum of ':'']}@{[$3 eq 'M'?'more than maximum of ':'']}$4 feet\";\n         }\n         elsif ($token =~ /^HZ$/) {\n            $out .= \"weather hazard (or maybe just haze)\";\n         }\n         elsif ($token =~ /^(M?)(\\d{2,3})\\/(M?)(\\d{2,3})$/) {\n            $out .= \"temperature @{[$1?'-':'']}@{[int($2)]} Celsius, dew point @{[$3?'-':'']}@{[int($4)]} Celsius.\";\n         }\n         elsif ($token =~ /^A(\\d{2})(\\d{2})$/) {\n            $out .= \"altimeter setting $1.$2 inches mercury\";\n         }\n         elsif ($token =~ /^Q(\\d{3})(\\d)$/) {\n            $out .= \"altimeter setting $1.$2 hectopascals\";\n         }\n         elsif ($token =~ /^AO(1|2)$/) {\n            $out .= \"automated station type $1: @{[$1 eq '01'?'cannot detect precipitation':'has precipitation discriminator']}\";\n         }\n         elsif ($token =~ /^P(\\d{4})$/) {\n            $out .= \"precipitation @{[$1/100]} inches in last hour\";\n         }\n         elsif ($token =~ /^(\\d{3})(\\d{2})\\/(\\d{2})$/) {\n            $out .= \"wind from $1 at $2 knots starting at $3 after the hour\";\n         }\n         elsif ($token =~ /^1(0|1)(\\d{3})$/) {\n            $out .= \"max temp in last 6 hours @{[$1?'-':'']}@{[$2/10]} Celsius\";\n         }\n         elsif ($token =~ /^2(0|1)(\\d{3})$/) {\n            $out .= \"min temp in last 6 hours @{[$1?'-':'']}@{[$2/10]} Celsius\";\n         }\n         elsif ($token =~ /^4\\/(\\d{3})$/) {\n            $out .= \"snow depth on ground is @{[$1]} inches\";\n         }\n         elsif ($token =~ /^5(\\d)(\\d{3})$/) {\n            $out .= \"3 hour pressure tendency \";\n            if ($1 eq '4') {\n               $out .= \"stationary \";\n            }\n            elsif ($1 gt '4') {\n               $out .= \"decreased \";\n            }\n            else {\n               $out .= \"increased \";\n            }\n            $out .= $2/10 . \" millibars\";\n         }\n         elsif ($token =~ /^6(\\d{4})$/) {\n            $out .= \"3 and 6 hour precipitation @{[$1/100]} inches\";\n         }\n         elsif ($token =~ /^7(\\d{4})$/) {\n            $out .= \"24 hour total precipitation @{[$1/100]} inches\";\n         }\n         elsif ($token =~ /^8\\/(\\d)(\\d)(\\d)$/) {\n            $out .= \"WMO cloud types $low[$1], $middle[$2], $high[$3]\";\n         }\n         elsif ($token =~ /^98(\\d{3})$/) {\n            $out .= \"$1 minutes of sunshine during day\";\n         }\n         elsif ($token =~ /^933(\\d{3})$/) {\n            $out .= \"standing water equivalent of @{[$1/10]} inches\";\n         }\n         elsif ($token =~ /^SLP(\\d{3})$/) {\n            $out .= \"sea level Pressure @{[($1/10) + (($1<700)?1000:900)]} millibars\";\n         }\n         elsif ($token =~ /^FM(\\d{2})(\\d{2})$/) {\n            $out .= \"from $1:$2 zulu\";\n         }\n         elsif ($token =~ /^PROB(\\d{2})$/) {\n            $out .= \"probability $1%\";\n         }\n         elsif ($token =~ /^WS(\\d{3})\\/(\\d{3})(\\d{2,3})KT$/) { \n            $out .= \"wind shear at $1 feet from $2 degrees at $3 knots\";\n         }\n         elsif ($token =~ /^4(\\d)(\\d{3})(\\d)(\\d{3})$/) {\n            $out .= \"max 6 hour temperature @{[$1?'-':'']}@{[$2/10]} Celsius, min 6 hour temp @{[$3?'-':'']}@{[$4/10]} Celsius\";\n         }\n         elsif ($token =~ /^T(\\d)(\\d{3})(\\d)(\\d{3})$/) {\n            $out .= \"temperature @{[$1?'-':'']}@{[$2/10]} Celsius, dew point @{[$3?'-':'']}@{[$4/10]} Celsius\";\n         }\n         elsif ($token =~ /^([A-Z]{2})B(\\d{2})$/) {\n            if (exists $abb{$1}) {\n               $out .= $abb{$1} . \" began at $2 minutes after the hour\";\n            }\n            else {\n               $out .= $token . \"?\";\n            }\n         }\n         elsif ($token =~ /^(\\d{2})(\\d{2})$/) {\n            $out .= \"from $1:00 to $2:00\";\n         }\n         elsif (exists $abb{$token}) {\n            $out .= $abb{$token};\n         }\n         elsif ($token =~ /^([A-Z]{3})([0-9]+)(CB|TCU)?(VV)?(\\d{3})?$/) {\n            if ($1 eq 'FEW' or $1 eq 'SCT' or $1 eq 'BKN' or $1 eq 'OVC') {\n               $out .= $abb{$1} . \" clouds start at @{[$2 * 100]} feet AGL\";\n            }\n            elsif (exists $abb{$1}) {\n               $out .= $abb{$1} . $2;\n            }\n            else {\n               $out .= $token . \"?\";\n            }\n\n            if ($3 eq 'CB') {\n               $out .= \" with cumulonimbus (rain)\";\n            }\n            elsif ($3 eq 'TCU') {\n               $out .= \" with towering cumulus\";\n            }\n\n            if ($4 eq 'VV') {\n               $out .= \" vertical visibility (indefinite ceiling) $5 feet\";\n            }\n         }\n         elsif ($token =~ /^([A-Z]{2,})$/) {\n            my $i = 0;\n            my $x = '';\n\n            foreach (split //, $1) {\n                  $i++;\n                  $x .= $_;\n\n                  if ($i == 2) {\n                     if (exists $abb{$x}) {\n                        $out .= $abb{$x} . ' ';\n                     }\n                     else {\n                        $out .= $x . \"?\";\n                     }\n\n                     $i = 0;\n                     $x = '';\n                  }\n            }\n         }\n         else {\n            $out .= $token . \"?\";\n         }\n\n         $out .= \"\\n\";\n   } \n\n   $out;\n}",
      "file" : "/var/tmp/arv_y_qxE5/Aviation-Report-1.02/Report.pm",
      "package" : "Aviation::Report"
   }
]
