[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub BinaryOperatorChain\n{\n\n\n my ( $obj, @chain_list ) = @_;\n\n if(0)\n  {\n  print \"\\n\\n\\n DUMPING LIST \\n\\n\\n\";\n  foreach my $item (@chain_list)\n\t {\n\t if (ref($item))\n\t\t {\n\t\t $item->dump;\n\t\t }\n\t else\n\t\t { print \"operator is  $item \\n\"; }\n\t }\n  }\n\n my $i;\n my $binary_operator;\n my $current_priority;\n my $highest_operator_index;\n my $highest_priority_so_far;\n\n my $left;\n my $right;\n my $result;\n while( @chain_list > 1 )\n\t{\n \t$highest_operator_index = 0;\n \t$highest_priority_so_far = 0;\n\tfor($i=1; $i<@chain_list; $i=$i+2)\n\t\t{\n\t\t$binary_operator = $chain_list[$i];\n\t\t$current_priority = $binary_priority_hash{$binary_operator};\n\t\tif ($current_priority > $highest_priority_so_far)\n\t\t\t{\n\t\t\t$highest_operator_index = $i;\n\t\t\t}\n\t\t}\n\n\t$left            = $chain_list[$highest_operator_index - 1];\n\t$binary_operator = $chain_list[$highest_operator_index    ];\n\t$right           = $chain_list[$highest_operator_index + 1];\n\n\t$result = $left->binary_operator($binary_operator, $right);\n\n\tsplice(@chain_list, $highest_operator_index-1, 3, ($result));\n\t}\n\n\n return $chain_list[0];\n}",
      "file" : "/var/tmp/arv_81t0Wf/Hardware-Verilog-Parser-0.13/StdLogic.pm",
      "package" : "Hardware::Verilog::StdLogic"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub new\n{\n my ($pkg) = @_;\n\n my $r_hash = $pkg->SUPER::new;\n\n\n\n bless $r_hash, $pkg;\n return $r_hash;\n}",
      "file" : "/var/tmp/arv_81t0Wf/Hardware-Verilog-Parser-0.13/Hierarchy.pm",
      "package" : "Hardware::Verilog::Hierarchy"
   }
]
