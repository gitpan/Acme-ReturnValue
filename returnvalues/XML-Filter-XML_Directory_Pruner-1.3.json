[
   {
      "PPI" : "PPI::Statement::Compound",
      "bad" : "{\n\n\npackage XML::Filter::XML_Directory_Pruner;\nuse strict;\n\nuse Exporter;\nuse XML::SAX::Base;\nuse MIME::Types;\n\n$XML::Filter::XML_Directory_Pruner::VERSION   = '1.3';\n@XML::Filter::XML_Directory_Pruner::ISA       = qw (Exporter XML::SAX::Base);\n@XML::Filter::XML_Directory_Pruner::EXPORT    = qw ();\n@XML::Filter::XML_Directory_Pruner::EXPORT_OK = qw ();\n\nmy %__typeof = ();\nmy $__mtypes = undef;\n\n\nsub mtype {\n  my $pkg   = shift;\n  my $fname = shift;\n\n\n  $fname =~ /^(.*)\\.([^\\.]+)$/;\n  if (! $2) { return undef; }\n\n  if (exists($__typeof{$2})) {\n    return $__typeof{$2};\n  }\n\n  $__mtypes ||= MIME::Types->new()\n    || return undef;\n\n\n\n  my $mime = $__mtypes->mimeTypeOf($2);\n  \n  if (! $mime) {\n    $__typeof{$2} = undef;\n    return $__typeof{$2};\n  }\n  \n\n  $__typeof{$2} = $mime->mediaType();\n  return $__typeof{$2};\n}\n\n\nsub include {\n    my $self = shift;\n    my $args = { @_ };\n\n    if (ref($args->{'include'})  eq \"ARRAY\") {\n      push (@{$self->{__PACKAGE__.'__include'}},@{$args->{'include'}});\n    }\n\n    if ($args->{'matching'}) {\n      $self->{__PACKAGE__.'__include_matching'} = (ref($args->{'matching'} eq \"ARRAY\")) ? \n\t$args->{'matching'} : [$args->{'matching'}];\n    }\n\n    if (ref($args->{'starting'}) eq \"ARRAY\") {\n      push (@{$self->{__PACKAGE__.'__include_starting'}},@{$args->{'starting'}});\n    }\n\n    if (ref($args->{'ending'}) eq \"ARRAY\") {\n\tpush (@{$self->{__PACKAGE__.'__include_ending'}},@{$args->{'ending'}});\n    }\n\n    if ($args->{'directories'}) {\n      $self->{__PACKAGE__.'__include_subdirs'} = 1;\n    }\n\n    return 1;\n}\n\n\nsub exclude {\n    my $self = shift;\n    my $args  = { @_ };\n\n    if (ref($args->{'exclude'})  eq \"ARRAY\") {\n      push (@{$self->{__PACKAGE__.'__exclude'}},@{$args->{'exclude'}});\n    }\n\n    if ($args->{'matching'}) {\n      $self->{__PACKAGE__.'__exclude_matching'} = (ref($args->{'matching'}) eq \"ARRAY\") ? \n\t$args->{'matching'} : [ $args->{'matching'}];\n    }\n\n    if (ref($args->{'starting'}) eq \"ARRAY\") {\n      push (@{$self->{__PACKAGE__.'__exclude_starting'}},@{$args->{'starting'}});\n    }\n\n    if (ref($args->{'ending'})   eq \"ARRAY\") {\n      push (@{$self->{__PACKAGE__.'__exclude_ending'}},@{$args->{'ending'}});\n    }\n\n    $self->{__PACKAGE__.'__exclude_subdirs'} = $args->{'directories'};\n    $self->{__PACKAGE__.'__exclude_files'}   = $args->{'files'};\n    return 1;\n}\n\n\nsub ima {\n  my $self = shift;\n  my $what = shift;\n\n  if ($what) {\n    $self->{__PACKAGE__.'__ima'} = $what;\n  }\n\n  return $self->{__PACKAGE__.'__ima'};\n}\n\n\nsub current_level {\n  my $self = shift;\n  return $self->{__PACKAGE__.'__level'};\n}\n\n\nsub skip_level {\n  return $_[0]->{__PACKAGE__.'__skip'};\n}\n\n\nsub debug {\n  my $self = shift;\n  my $debug = shift;\n\n  if (defined($debug)) {\n    $self->{__PACKAGE__.'__debug'} = ($debug) ? (int($debug)) ? $debug : 1 : 0;\n  }\n\n  return $self->{__PACKAGE__.'__debug'};\n}\n\n\nsub start_element {\n  my $self  = shift;\n  my $data  = shift;\n\n  $self->on_enter_start_element($data);\n  $self->compare($data);\n\n  unless ($self->{__PACKAGE__.'__skip'}) {\n    $self->{__PACKAGE__.'__last'} = $data->{'Name'};\n    $self->SUPER::start_element($data);\n  }\n\n  return 1;\n}\n\nsub on_enter_start_element {\n  my $self = shift;\n  my $data = shift;\n\n  $self->{__PACKAGE__.'__level'} ++;\n\n\n  if ($self->debug() >= 2) {\n    map { print STDERR \" \"; } (0..$self->current_level);\n    print STDERR \"[\".$self->current_level.\"] $data->{Name} : \";\n    if (exists($data->{Attributes}->{'{}name'})) {\n      print STDERR $data->{Attributes}->{'{}name'}->{Value};\n    }\n\n    print STDERR \"\\n\";\n  }\n\n  return 1;\n}\n\n\nsub end_element {\n  my $self = shift;\n  my $data = shift;\n\n  unless ($self->{__PACKAGE__.'__skip'}) {\n    $self->SUPER::end_element($data);\n  }\n\n  $self->on_exit_end_element($data);\n  return 1;\n}\n\n\nsub on_exit_end_element {\n  my $self = shift;\n  my $data = shift;\n\n  if ($self->{__PACKAGE__.'__skip'} == $self->{__PACKAGE__.'__level'}) {\n    $self->{__PACKAGE__.'__skip'} = 0;\n  }\n\n  if ($data->{Name} =~ /^(directory|file)$/) {\n    $self->{__PACKAGE__.'__'.$1} --;\n  }\n\n  $self->{__PACKAGE__.'__level'} --;\n  return 1;\n}\n\n\nsub characters {\n  my $self = shift;\n  my $data = shift;\n\n  unless ($self->{__PACKAGE__.'__skip'}) {\n    $self->SUPER::characters($data);\n  }\n  \n  return 1;\n}\n\n\nsub compare {\n  my $self = shift;\n  my $data = shift;\n\n  if ($data->{'Name'} =~ /^(file|directory)$/) {\n\n    if (! $self->{__PACKAGE__.'__skip'}) {\n      $self->{__PACKAGE__.'__ima'} = $1;\n      $self->_compare($data->{Attributes}->{'{}name'}->{Value});\n    }\n  }\n\n  return 1;\n}\n\n\nsub _compare {\n  my $self = shift;\n  my $data = shift;\n\n  my $ok = 1;\n\n\n  if ($self->{__PACKAGE__.'__level'} == 2) { return 1; }\n\n\n  if ($self->{__PACKAGE__.'__ima'} eq \"directory\") {\n    if (($ok) && ($self->{__PACKAGE__.'__exclude_subdirs'})) {\n      print STDERR \"10 - EXCLUDING $data BECAUSE I AM A DIRECTORY\\n\"\n\tif ($self->debug() >= 3);\n      $ok = 0;\n    }\n  }\n\n  if (($ok) && ($self->{__PACKAGE__.'__ima'} eq \"file\" && $self->{__PACKAGE__.'__exclude_files'})) {\n    print STDERR \"20 - EXCLUDING $data BECAUSE I AM A FILE\\n\"\n      if ($self->debug() >= 3);\n    $ok = 0;\n  }\n\n\n  if (($ok) && ($self->{__PACKAGE__.'__include_matching'} eq \"ARRAY\")) {\n    foreach my $pattern (@{$self->{__PACKAGE__.'__include_matching'}}) {\n      $ok = ($data =~ /$pattern/) ? 1 : 0;\n\n      if ($ok) {\n\tprint STDERR \"20 - INCLUDING $data BECAUSE IT MATCHES PATTERN '$pattern'\\n\"\n\t  if ($self->debug() >= 3);\n\tlast;\n      }\n    }\n  }\n\n  if (($ok) && (ref($self->{__PACKAGE__.'__include'}) eq \"ARRAY\")) {\n    foreach my $match (@{$self->{__PACKAGE__.'__include'}}) {\n      $ok = ($data =~ /^($match)$/) ? 0 : 1;\n\n      if ($ok) {\n\tprint STDERR \"30 - INCLUDING $data BECAUSE IT MATCHES '$match'\\n\"\n\t  if ($self->debug() >= 3);\n\tlast;\n      }\n    }\n  }\n\n  if (($ok) && (ref($self->{__PACKAGE__.'__include_starting'}) eq \"ARRAY\")) {\n    foreach my $match (@{$self->{__PACKAGE__.'__include_starting'}}) {\n      $ok = ($data =~ /^($match)(.*)$/) ? 1 : 0;\n\n      if ($ok) {\n\tprint STDERR \"40 - INCLUDING $data BECAUSE IT STARTS WITH '$match'\\n\"\n\t  if ($self->debug() >= 3);\n\tlast;\n      }\n    }\n  }\n\n  if (($ok) && (ref($self->{__PACKAGE__.'__include_ending'}) eq \"ARRAY\")) {\n    foreach my $match (@{$self->{__PACKAGE__.'__include_ending'}}) {\n      $ok = ($data =~ /^(.*)($match)$/) ? 1 : 0;\n\n      if ($ok) {\n\tprint STDERR \"50 - INCLUDING $data BECAUSE IT ENDS WITH '$match'\\n\"\n\t  if ($self->debug() >= 3);\n\tlast;\n      }\n    }\n  }\n\n\n  if (($ok) &&(ref($self->{__PACKAGE__.'__exclude_matching'}) eq \"ARRAY\")) {\n\n    foreach  my $pattern (@{$self->{__PACKAGE__.'__exclude_matching'}}) {\n\n      print STDERR \"25 - COMPARING '$data' w/ '$pattern'\\n\"\n\tif ($self->debug() >= 4);\n\n      $ok = ($data =~ /$pattern/) ? 0 : 1;\n\n      if (! $ok) {\n\tprint STDERR \"30 - EXCLUDING $data BECAUSE IT MATCHES PATTERN '$pattern'\\n\"\n\t  if ($self->debug() >= 3);\n\n\tlast;\n      }\n    }\n  }\n\n  if (($ok) && (ref($self->{__PACKAGE__.'__exclude'}) eq \"ARRAY\")) {\n    foreach my $match (@{$self->{__PACKAGE__.'__exclude'}}) {\n      $ok = ($data =~ /^($match)$/) ? 0 : 1;\n\n      if (! $ok) {\n\tprint STDERR \"40 - EXCLUDING $data BECAUSE IT MATCHES '$match'\\n\"\n\t  if ($self->debug() >= 3);\n\tlast;\n      }\n    }\n  }\n\n  if (($ok) && (ref($self->{__PACKAGE__.'__exclude_starting'}) eq \"ARRAY\")) {\n    foreach my $match (@{$self->{__PACKAGE__.'__exclude_starting'}}) {\n      $ok = ($data =~ /^($match)(.*)$/) ? 0 : 1;\n\n      if (! $ok) {\n\tprint STDERR \"50 - EXCLUDING $data BECAUSE IT STARTS WITH '$match'\\n\"\n\t  if ($self->debug() >= 3);\n\tlast;\n      }\n    }\n  }\n\n  if (($ok) && (ref($self->{__PACKAGE__.'__exclude_ending'}) eq \"ARRAY\")) {\n    foreach my $match (@{$self->{__PACKAGE__.'__exclude_ending'}}) {\n      $ok = ($data =~ /^(.*)($match)$/) ? 0 : 1;\n\n      if (! $ok) {\n\tprint STDERR \"60 - EXCLUDING $data BECAUSE IT ENDS WITH '$match'\\n\"\n\t  if ($self->debug() >= 3);\n\tlast;\n      }\n    }\n  }\n\n\n  if (! $ok) {\n    print STDERR \"SKIPPING '$data' at $self->{__PACKAGE__.'__level'}\\n\"\n      if ($self->debug() >= 2);\n\n    $self->{__PACKAGE__.'__skip'} = $self->{__PACKAGE__.'__level'};\n  }\n\n  return 1;\n}\n\n\n\nreturn 1;\n\n}",
      "file" : "/var/tmp/arv_WZeRAc/XML-Filter-XML_Directory_Pruner-1.3/lib/XML/Filter/XML_Directory_Pruner.pm",
      "package" : "XML::Filter::XML_Directory_Pruner"
   }
]
