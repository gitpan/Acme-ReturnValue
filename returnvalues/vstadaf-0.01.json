[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub dump_records {\n  my $self    = shift;\n  my $DB      = $self->{DB};\n  unless ($DB) {\n    $self->ErrorMsgBox( \"Sorry!\\nOpen a database first...\"); \n    return;\n  }\n  \n  $self->{FH} = shift || 0;\n  \n  my %options   = ( 'rs' => \"\\n\", 'fs' => ':', 'undef' => '', 'ss' => ' ' );\n  my %inoptions = %{$self->{OPTS}};\n  for my $key (keys %inoptions) {\n    my $value = $inoptions{$key};\n    my $outkey = lc $key;\n    $outkey =~ s/[^a-z]//g;\n    $options{$outkey} = $value;\n  }\n  \n  my ($rs, $fs, $undef, $ss, $fields) = @options{ qw( rs fs undef ss fields ) };\n  my $qs  = $self->{OPTS}->{qs};\n  \n  my @fields = ();\n  \n  if (defined $fields && @$fields>0) {\n    @fields = @$fields;\n  } else {\n    @fields = $DB->field_names;\n  }\n  \n  my ($record,$value,$fn,$txt);\n  \n  foreach $value (@fields) {\n    \n    next unless $self->{OPTS}->{headers};\n    \n    $txt .= $qs.$value.$qs.$fs;\n  }\n  \n  $txt =~  s/$fs$//;\n  \n  my ($DBH,$cursor,$dir,$table);\n  \n  $self->Open_FH || return;\n  $self->output_line($txt.$rs) if $self->{OPTS}->{headers};\n  \n  my ($percent_done);\n  my $MSG = $self->{FH} ? 'to file...' : 'to screen...';\n  \n  my $wd = $self->{TW}->WaitBox(\n\t\t\t\t-title => $self->{TITLE},\n\t\t\t\t-txt1 => \"Exporting records\",\n\t\t\t\t-foreground => 'blue',\n\t\t\t\t-background => 'white',\n\t\t\t\t-cancelroutine => sub{$self->{MAX}=1}\n\t\t\t       );\n  \n  \n  my($u) = $wd->{SubWidget}->{uframe};\n  $u->pack(-expand => 1, -fill => 'both');\n  $u->Label(-textvariable => \\$MSG, -background => 'white')->pack(-expand => 1, -fill => 'both');\n  \n  my $progress = $u->ProgressBar(\n\t\t\t\t -width => 200,\n\t\t\t\t -height => 20,\n\t\t\t\t -from => 0,\n\t\t\t\t -to => $DB->last_record,\n\t\t\t\t -blocks => 10,\n\t\t\t\t -anchor => 'e',\n\t\t\t\t -colors => [0, 'blue'],\n\t\t\t\t -variable => \\$percent_done\n\t\t\t\t)->pack();\n  \n  \n  $wd->Show;\n  \n  $self->ShowMsg(\"dumping records...\");\n  \n  $DB->gotop;\n  \n  while (!$DB->EOF) {\n    $txt = '';\n    \n    $record = $DB->read_record;\n    \n    foreach (0..@fields-1) {\n      $fn    = $fields[$_];\n      $value = ref($record->{$fn}) ? join $ss, @{$record->{$fn}} : $record->{$fn} || '';\n      $value =~ s/\\n/\\\\r\\\\n/g;\n      $value = $qs.$value.$qs;\n      $txt  .= $value.$fs;\n    }\n    \n    $txt =~  s/$fs$//;\n    \n    $self->{MAX}=1 unless $self->output_line($txt.$rs);\n    $percent_done++;\n    $self->{TW}->update;\n    \n    last if ($self->{MAX}-- == 0);\n    \n  }\n  \n  $self->Close_FH;  \n  \n  $wd->unShow;\n  \n  if ($self->{MAX} == -1) {\n    $self->ErrorMsgBox( \"Dump not completed!\"); \n  } else {\n    $self->InfoMsgBox( \"Dump successful done!\"); \n  }\n  \n  $self->ShowMsg(\"Thank you!\");\n  $DB->gotop;\n  \n}",
      "file" : "/var/tmp/arv_8oBT92/vstadaf/Tk/Application/Stadaf.pm",
      "package" : "Tk::Application::Stadaf"
   }
]
