[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub activate {\n    my $self = shift;\n    my %args = @_;\n\n    my $flags;\n    if (exists $args{flags}) {\n\t$flags = $args{flags};\n\tif (exist $flags->{shlib}) {\n\t    Carp::croak (\"Shared library activation not supported for Perl\\n\");\n\t}\n\n\tdelete $args{flags};\n    } else {\n\t$flags = {};\n    }\n\n    my $params;\n    if (exists $args{params}) {\n\t$params = $args{params};\n\tdelete $args{params};\n    } else {\n\t$params = [];\n    }\n\n    my $server_id;\n    if (exists $args{id}) {\n\t$server_id = $args{id};\n\tdelete $args{id};\n    }\n\n    my $repo_id;\n    if (exists $args{repo_id}) {\n\t$repo_id = $args{repo_id};\n\tdelete $args{repo_id};\n    }\n\n    if (keys %args) {\n\tmy $arg = $args{(keys %args)[0]};\n\tCarp::croak (\"Unknown argument '$arg'\");\n    }\n    \n    defined $server_id or defined $repo_id or Carp::croak (\"Must specify 'id' or 'repo_id'\\n\");\n\n    my $server;\n    my $object;\n\n    if (!$flags->{new_only}) {\n\tmy $new_flags = { %$flags };\n\t$new_flags->{existing_only} = 1;\n\t\n\tfor $server (@{$self->{servers}}) {\n\t    \n\t    next if ($server->{type} eq 'shlib');\n\t    next if (defined $server_id && $server->{server_id} ne $server_id);\n\t    next if (defined $repo_id && $server->{repo_id} ne $repo_id);\n\n\t    $object = _activate($self, $server, $new_flags, $params);\n\t    if (defined $object) {\n\t\treturn $object;\n\t    }\n\t}\n    }\n\n    for $server (@{$self->{servers}}) {\n\t    \n\tnext if ($server->{type} eq 'shlib');\n\tnext if (defined $server_id && $server->{server_id} ne $server_id);\n\tnext if (defined $repo_id && $server->{repo_id} ne $repo_id);\n\t\n\t$object = _activate_($self, $server, $flags, $params);\n\tif (defined $object) {\n\t    return $object;\n\t}\n    }\n\n    return undef;\n}",
      "file" : "/var/tmp/arv_gZygov/GNOME-GNORBA-0.1.0/GOAD.pm",
      "package" : "GNOME::GOAD"
   }
]
