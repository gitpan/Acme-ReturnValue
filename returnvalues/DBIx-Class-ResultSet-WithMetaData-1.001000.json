[
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "method display () {\n  my $rs = $self->search({});\n  $rs->result_class('DBIx::Class::WithMetaData::Inflator');\n  my @rows;\n  foreach my $row_rep ($rs->all) {\n    my ($row, $row_obj) = @{$row_rep};\n    if (my $info = $self->row_info_for(id => $self->_mk_id(row => $row))) {\n      $row = { %{$row}, %{$info} };\n    }\n\n    foreach my $modifier (@{$rs->_hash_modifiers}) {\n      my $row_hash = $modifier->($row);\n      if (ref $row_hash ne 'HASH') {\n        die 'modifier subref (added via build_metadata) did not return hashref';\n      }\n\n      $row->{$_} = $row_hash->{$_} for keys %{$row_hash};\n    }\n\n    foreach my $modifier (@{$rs->_object_hash_modifiers}) {\n      my $row_hash = $modifier->($row, $row_obj);\n      if (ref $row_hash ne 'HASH') {\n        die 'modifier subref (added via build_metadata) did not return hashref';\n      }\n\n      $row->{$_} = $row_hash->{$_} for keys %{$row_hash};\n    }\n\n    foreach my $params (@{$rs->_key_modifiers}) {\n      my $modifier = $params->{modifier};\n      my $key = $params->{key};\n\n      if (my $val = $modifier->($row)) {\n        $row->{$key} = $val;\n      }\n    }\n\n    foreach my $params (@{$rs->_object_key_modifiers}) {\n      my $modifier = $params->{modifier};\n      my $key = $params->{key};\n\n      if (my $val = $modifier->($row, $row_obj)) {\n        $row->{$key} = $val;\n      }\n    }\n    push(@rows, $row);\n  }\n\n  return ($self->was_row) ? $rows[0] : \\@rows;\n}\n\n\nmethod _with_meta_key ($key, $modifier) {\n  my $rs = $self->search({});\n  unless ($key) {\n    die 'build_metadata called without key';\n  }\n\n  unless ($modifier && (ref $modifier eq 'CODE')) {\n    die 'build_metadata called without modifier param';\n  }\n\n  push( @{$rs->_key_modifiers}, { key => $key, modifier => $modifier });\n  return $rs;\n}\n\n\nmethod _with_object_meta_key ($key, $modifier) {\n  my $rs = $self->search({});\n  unless ($key) {\n    die '_with_object_meta_key called without key';\n  }\n\n  unless ($modifier && (ref $modifier eq 'CODE')) {\n    die '_with_object_meta_key called without modifier param';\n  }\n\n  push( @{$rs->_object_key_modifiers}, { key => $key, modifier => $modifier });\n  return $rs;\n}\n\n\nmethod _with_meta_hash ($modifier) {\n  my $rs = $self->search({});\n  unless ($modifier && (ref $modifier eq 'CODE')) {\n    die 'build_metadata called without modifier param';\n  }\n\n  push( @{$rs->_hash_modifiers}, $modifier );\n  return $rs;\n}\n\n\nmethod _with_object_meta_hash ($modifier) {\n  my $rs = $self->search({});\n  unless ($modifier && (ref $modifier eq 'CODE')) {\n    die 'build_metadata called without modifier param';\n  }\n\n  push( @{$rs->_object_hash_modifiers}, $modifier );\n  return $rs;\n}\n\n\nmethod add_row_info (%opts) {\n  my ($row, $id, $info) = map { $opts{$_} } qw/row id info/;\n\n  warn 'DEPRECATED - add_row_info is deprecated in favour of build_metadata';\n  if ($row) {\n    $id = $self->_mk_id(row => { $row->get_columns });\n  }\n\n  unless ($row || $self->find($id)) {\n    die 'invalid id passed to add_row_info';\n  }\n\n  if (my $existing = $self->_row_info->{$id}) {\n    $info = { %{$existing}, %{$info} };\n  }\n\n  $self->_row_info->{$id} = $info;  \n}\n\nmethod row_info_for (%opts) {\n  my $id = $opts{id};\n  return $self->_row_info->{$id};\n}\n\nmethod _mk_id (%opts) {\n  my $row = $opts{row};\n  return join('-', map { $row->{$_} } @{$self->id_cols});\n}\n\n\n1",
      "file" : "/var/tmp/arv_z7cYEs/DBIx-Class-ResultSet-WithMetaData-1.001000/lib/DBIx/Class/ResultSet/WithMetaData.pm",
      "package" : "DBIx::Class::ResultSet::WithMetaData"
   }
]
