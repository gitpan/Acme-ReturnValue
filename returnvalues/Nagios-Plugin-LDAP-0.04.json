[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub _ldap_check_repl {\n  my ($self, $dst_ldap) = @_;\n  my $opts = $self->opts;\n\n  my $master = $opts->get('master') or return 1;\n\n  my $warning  = $opts->get('repl-warning');\n  my $critical = $opts->get('repl-critical');\n  my $verbose  = $opts->get('verbose');\n\n  return 1 unless $warning or $critical;\n\n  my $src_ldap = $self->_ldap_connect($master) or return;\n\n  my $src_entry =\n    $self->_ldap_do_search($src_ldap, '(&(objectClass=*)(contextCSN=*))', 'contextCSN')\n    or return;\n  my $dst_entry =\n    $self->_ldap_do_search($dst_ldap, '(&(objectClass=*)(contextCSN=*))', 'contextCSN')\n    or return;\n\n  my $src_csn = $src_entry->get_value('contextCSN');\n  my $dst_csn = $dst_entry->get_value('contextCSN');\n\n  print \"Master CSN = $src_csn\\n\" if $verbose;\n  print \"Slave  CSN = $dst_csn\\n\" if $verbose;\n\n  my ($YYYY, $MM, $DD, $hh, $mm, $ss);\n  ($YYYY, $MM, $DD, $hh, $mm, $ss) = $src_csn =~ /^(\\d{4})(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)/;\n  my $src_dt = DateTime->new(\n    year   => $YYYY,\n    month  => $MM,\n    day    => $DD,\n    hour   => $hh,\n    minute => $mm,\n    second => $ss\n  );\n  ($YYYY, $MM, $DD, $hh, $mm, $ss) = $dst_csn =~ /^(\\d{4})(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)/;\n  my $dst_dt = DateTime->new(\n    year   => $YYYY,\n    month  => $MM,\n    day    => $DD,\n    hour   => $hh,\n    minute => $mm,\n    second => $ss\n  );\n\n  my $delta = abs($src_dt->epoch - $dst_dt->epoch);\n\n  $self->add_message(\n    $self->check_threshold(check => $delta, warning => $warning, critical => $critical),\n    sprintf(\"%d seconds replication delta\", $delta));\n\n  $self->add_perfdata(\n    label     => 'repl',\n    value     => $delta,\n    uom       => 's',\n    threshold => $self->threshold\n  );\n\n}",
      "file" : "/var/tmp/arv_jiNpS5/Nagios-Plugin-LDAP-0.04/lib/Nagios/Plugin/LDAP.pm",
      "package" : "Nagios::Plugin::LDAP"
   }
]
