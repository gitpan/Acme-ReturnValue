[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub _parse {\n    my ( $self, $content ) = @_;\n\n    $content =~ m|<TITLE>404 Not Found</TITLE>|\n        and $content !~ /<div>/\n        and return $self->_set_error('This paste does not seem to exist');\n\n    my $parser = HTML::TokeParser::Simple->new( \\$content );\n    \n    my ( %data, %nav );\n    @nav{ qw(level  start  get_name_date  get_lang  get_content) }\n    = (0) x 5;\n\n    while ( my $t = $parser->get_token ) {\n        if ( $t->is_start_tag('div')\n            and defined $t->get_attr('id')\n            and $t->get_attr('id') eq 'content'\n        ) {\n            @nav{ qw(level start) } = (1, 1);\n        }\n        elsif ( $nav{start} == 1 and $t->is_start_tag('h1') ) {\n            @nav{ qw(level get_name_date) } = (2, 1);\n        }\n        elsif ( $nav{get_name_date} == 1 and $t->is_text ) {\n            @data{ qw(name posted_on) } = $t->as_is\n            =~ /Posted by (.+) on (.+)/;\n\n            @nav{ qw(level get_name_date) } = (3, 0);\n        }\n        elsif ( $nav{start} == 1\n            and $t->is_start_tag('option')\n            and defined $t->get_attr('selected')\n        ) {\n            @nav{ qw(level get_lang) } = (4, 1);\n        }\n        elsif ( $nav{get_lang} == 1 and $t->is_text ) {\n            @nav{ qw(level get_lang) } = (5, 0);\n            $data{lang} = $t->as_is;\n        }\n        elsif ( $nav{start} == 1\n            and $t->is_start_tag('textarea')\n            and defined $t->get_attr('id')\n            and $t->get_attr('id') eq 'code'\n        ) {\n            @nav{ qw(level get_content) } = (6, 1);\n        }\n        elsif ( $nav{get_content} == 1 and $t->is_text ) {\n            $data{content} = $t->as_is;\n            $nav{is_success} = 1;\n            last;\n        }\n        elsif ( $nav{get_content} == 1 and $t->is_end_tag('textarea') ) {\n            return $self->_set_error('This paste does not seem to exist');\n        }\n    }\n\n    unless ( $nav{is_success} ) {\n        return $self->_set_error (\n            \"Parser error (level $nav{level}).\\n\"\n                . \"Failed on content:\\n$content\"\n        );\n    }\n\n    for ( values %data ) {\n        unless ( defined and length ) {\n            $_ = 'N/A';\n            next;\n        }\n        decode_entities $_;\n        s/\\240/ /g;\n    }\n\n    $self->content( $data{content} );\n    return \\%data;\n}",
      "file" : "/var/tmp/arv_wVhNm1/WWW-Pastebin-PastebinCom-Retrieve-0.002/lib/WWW/Pastebin/PastebinCom/Retrieve.pm",
      "package" : "WWW::Pastebin::PastebinCom::Retrieve"
   }
]
