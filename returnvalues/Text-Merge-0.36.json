[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub html_convert { return htmlconv(@_); }",
      "file" : "/var/tmp/arv_yYbfgU/Text-Merge-0.36/lib/Text/Merge.pm",
      "package" : "Text::Merge"
   },
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub handle_table_templates {\n\tmy ($self, $path, $list, $parent, $cache, $width) = @_;\n\tmy $text = '';\n\tmy $item = '';\n\tmy $header = list_style_template($path, $cache, 'header');\n\tmy $footer = list_style_template($path, $cache, 'footer');\n\tmy $filler = list_style_template($path, $cache, 'filler');\n\tif ($$parent{Data}) { $$parent{Data}{TableColumns} = $width; } else { $$parent{TableColumns} = $width; };\n\tif ($header) { $text .= $self->publish_text($header,$parent); }; \n\tmy $itemct = 0;\n\tforeach $item (@$list) {\n\t\tif ($item && ($_=$$item{ItemType} || 'default')) {\n\t\t\tmy $stylefile = list_style_template($path, $cache, ($$item{ItemType} || 'default'));\n\t\t\tif (!$stylefile) { $stylefile = list_style_template($path, $cache, 'default'); };\n\t\t\tif ($stylefile) { \n\t\t\t\tif (!($itemct % $width)) { $text .= ($itemct && '</TR>' || '').\"\\n<TR>\"; };\n\t\t\t\t$itemct++;\n\t\t\t\t$text .= $self->publish_text($stylefile,$item); \n\t\t\t};\n\t\t};\n\t};\n\tif ( $itemct ) {\n\t\tmy $fw = ($itemct % $width);\n\t\tif ($fw && ($fw=$width-$fw)) {\n\t\t\tif ($$parent{Data}) { $$parent{Data}{FillerColumns} = $fw; } \n\t\t\telse { $$parent{FillerColumns} = $fw; };\n\t\t\t$filler && ($text .= $self->publish_text($filler, $parent));\n\t\t};\n\t\t$text .= \"</TR>\\n\";\n\t};\n\tif ($footer) { $text .= $self->publish_text($footer,$parent); };\n\treturn $text;\n}",
      "file" : "/var/tmp/arv_yYbfgU/Text-Merge-0.36/lib/Text/Merge/Lists.pm",
      "package" : "Text::Merge::Lists"
   }
]
