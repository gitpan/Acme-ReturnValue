[
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "method insert_post ($post)\n{\n    $self->post_resultset->create_from_perlanet($post);\n}\n\n__PACKAGE__->meta->make_immutable",
      "file" : "/var/tmp/arv_5IC4Uq/Perlanet-DBIx-Class-0.02/lib/Perlanet/DBIx/Class.pm",
      "package" : "Perlanet::DBIx::Class"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "method fetch_feeds {\n    return [ map { $self->munge_feed_from_db($_) } $self->all ];\n}\n\nmethod munge_feed_from_db ($feed)\n{\n    return Perlanet::Feed->new(\n        id      => $feed->id,\n        url     => $feed->url  || $feed->link,\n        website => $feed->link || $feed->url,\n        title   => $feed->title,\n        author  => $feed->owner,\n    )\n}\n\n1",
      "file" : "/var/tmp/arv_5IC4Uq/Perlanet-DBIx-Class-0.02/lib/Perlanet/DBIx/Class/Role/FeedResultSet.pm",
      "package" : "Perlanet::DBIx::Class::Role::FeedResultSet"
   },
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "method create_from_perlanet ($post)\n{\n    $self->create($self->munge_from_perlanet($post));\n}\n\nmethod munge_from_perlanet ($post)\n{\n    return {\n        feed_id   => $post->feed->id,\n        author    => $post->_entry->author || $post->feed->title,\n        url       => $post->_entry->link,\n        title     => $post->_entry->title,\n        posted_on => $post->_entry->issued || DateTime->now,\n        summary   => $post->_entry->summary->body ||\n                     $post->_entry->content->body,\n        body      => $post->_entry->content->body,\n    }\n}\n\nmethod has_post ($post)\n{\n    return $self->search( { url => $post->link } )->count > 0;\n}\n\n1",
      "file" : "/var/tmp/arv_5IC4Uq/Perlanet-DBIx-Class-0.02/lib/Perlanet/DBIx/Class/Role/PostResultSet.pm",
      "package" : "Perlanet::DBIx::Class::Role::PostResultSet"
   }
]
