[
   {
      "PPI" : "PPI::Statement (but very likely crap)",
      "bad" : "DESTROY {\n  $dbh->disconnect;\n}\n\nsub get_guidm {\n\nmy $guidm = \"\";\nmy $value ='';\nfor (my $i=0; $i<8;$i++) {\n  $value = '0000'.sprintf \"%X\",int(rand((2**16)-1));\n  $value =~ s/^[0-9A-F]+([0-9A-F]{4})$/$1/;\n  $guidm .= \"-\".$value;\n}\n$guidm=~s/^\\-//;\nreturn $guidm;\n}\n\n\n\nsub slash {\nmy $data_staring=shift || '';\n\n$data_staring=~s/\\\\/\\\\\\\\/g;\n$data_staring=~s/'/\\\\'/g;\n\nreturn $data_staring;\n}\nsub get_time {\n my @dt = localtime(shift || time);\n my @months=('jan','feb','mar','apr','may','jun','jul','aug','sep','oct','nov','dec');\n return ($months[$dt[4]].' '.$dt[3].', '.($dt[5]+1900).' '.$dt[2].':'.$dt[1]);\n}\n\nsub _read_attributes {\n    my($order,@param) = @_;\n    return () unless @param;\n\n    if (ref($param[0]) eq 'HASH') {\n\t@param = %{$param[0]};\n    } else {\n        return @param unless (defined($param[0]) && substr($param[0],0,1) eq '-');\n    }\n\n    my ($i,%pos);\n    $i = 0;\n    foreach (@$order) {\n\tforeach (ref($_) eq 'ARRAY' ? @$_ : $_) {\n            $pos{lc($_)} = $i;\n        }\n\t$i++;\n    }\n\n    my (@result,%leftover);\n    $#result = $#$order;  \n    while (@param) {\n\tmy $key = lc(shift(@param));\n\t$key =~ s/^\\-//;\n        if (exists $pos{$key}) {\n\t    $result[$pos{$key}] = shift(@param);\n\t} else {\n\t    $leftover{$key} = shift(@param);\n\t}\n    }\n\n    push (@result,_make_attributes(\\%leftover,1)) if %leftover;\n    @result;\n}\n\nsub _make_attributes {\n    my $attr = shift;\n    return () unless $attr && ref($attr) && ref($attr) eq 'HASH';\n    my $escape = shift || 0;\n    my(@att);\n    foreach (keys %{$attr}) {\n\tmy($key) = $_;\n        $key=~s/^\\-//;\n\t($key=\"\\L$key\") =~ tr/_/-/; \n\tmy $value = $escape ? $attr->{$_} : $attr->{$_};\n\tpush(@att,defined($attr->{$_}) ? qq/$key=\"$value\"/ : qq/$key/);\n    }\n    return @att;\n}\n\n\n\n1",
      "file" : "/var/tmp/arv_cde0Sl/CGI-SessionM-2.00/SessionM.pm",
      "package" : "CGI::SessionM"
   }
]
