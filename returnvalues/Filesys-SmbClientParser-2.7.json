[
   {
      "PPI" : "PPI::Statement::Sub",
      "bad" : "sub command {\n  my ($self,$args,$command, $smbscript)=@_;\n  $command.=\" >&1\";\n  print \" ==> SmbClientParser::command $args\\n\"\n    if ($self->{\"DEBUG\"} > 0);\n  my $er;\n\n  my $pargs;\n  if ($args=~/^([^;]*)$/) { \n    $pargs=$1;\n  } elsif ($smbscript) { \n    if ($args=~/^([^;]* -c '[^']*'[^;]*)$/) {\n      $pargs=$1;\n    } else { \n      die(\"Why a ';' here ? => $args\");\n    }\n  } else { die(\"Why a ';' here ? => $args\"); }\n\n  my @var = `$pargs`;\n  my $var=join(' ',@var ) ;\n\n  return 1 if (!$var);\n  if ($var=~/ERRnoaccess/) {\n    $er=\"Cmd $command: permission denied\";\n  } elsif ($var=~/ERRbadfunc/) {\n    $er=\"Cmd $command: Invalid function.\";\n  } elsif ($var=~/ERRbadfile/) {\n    $er=\"Cmd $command: File not found.\";\n  } elsif ($var=~/ERRbadpath/) {\n    $er=\"Cmd $command: Directory invalid.\";\n  }  elsif ($var=~/ERRnofids/) {\n    $er=\"Cmd $command: No file descriptors available\";\n  } elsif ($var=~/ERRnoaccess/) {\n    $er=\"Cmd $command: Access denied.\";\n  } elsif ($var=~/ERRbadfid/) {\n    $er=\"Cmd $command: Invalid file handle.\";\n  } elsif ($var=~/ERRbadmcb/) {\n    $er=\"Cmd $command: Memory control blocks destroyed.\";\n  } elsif ($var=~/ERRnomem/) {\n    $er=\"Cmd $command: Insufficient server memory to perform the requested function.\";\n  } elsif ($var=~/ERRbadmem/) {\n    $er=\"Cmd $command: Invalid memory block address.\";\n  } elsif ($var=~/ERRbadenv/) {\n    $er=\"Cmd $command: Invalid environment.\";\n  } elsif ($var=~/ERRbadformat/) {\n    $er=\"Cmd $command: Invalid format.\";\n  } elsif ($var=~/ERRbadaccess/) {\n    $er=\"Cmd $command: Invalid open mode.\";\n  } elsif ($var=~/ERRbaddata/) {\n    $er=\"Cmd $command: Invalid data.\";\n  } elsif ($var=~/ERRbaddrive/)\n      {$er=\"Cmd $command: Invalid drive specified.\";}\n    elsif ($var=~/ERRremcd/)   \n      {$er=\"Cmd $command: A Delete Directory request attempted to remove the server's current directory.\";}\n    elsif ($var=~/ERRdiffdevice/)   \n      {$er=\"Cmd $command: Not same device.\";}\n    elsif ($var=~/ERRnofiles/)   \n      {$er=\"Cmd $command: A File Search command can find no more files matching the specified criteria.\";}\n    elsif ($var=~/ERRbadshare/)   \n      {$er=\"Cmd $command: The sharing mode specified for an Open conflicts with existing  FIDs  on the file.\";}\n    elsif ($var=~/ERRlock/)   \n      {$er=\"Cmd $command: A Lock request conflicted with an existing lock or specified an  invalid mode,  or an Unlock requested attempted to remove a lock held by another process.\";}\n    elsif ($var=~/ERRunsup/)   \n      {$er=\"Cmd $command: The operation is unsupported\";}\n    elsif ($var=~/ERRnosuchshare/)  \n      {$er=\"Cmd $command: You specified an invalid share name\";}\n    elsif ($var=~/ERRfilexists/)   \n      {$er=\"Error $command: The file named in a Create Directory, Make New File or Link request already exists.\";}\n    elsif ($var=~/ERRbadpipe/)   \n      {$er=\"Cmd $command: Pipe invalid.\";}\n    elsif ($var=~/ERRpipebusy/)   \n      {$er=\"Cmd $command: All instances of the requested pipe are busy.\";}\n    elsif ($var=~/ERRpipeclosing/)  \n      {$er=\"Cmd $command: Pipe close in progress.\";}\n    elsif ($var=~/ERRnotconnected/)  \n      {$er=\"Cmd $command: No process on other end of pipe.\";}\n    elsif ($var=~/ERRmoredata/)   \n      {$er=\"Cmd $command: There is more data to be returned.\";}\n    elsif ($var=~/ERRinvgroup/)   \n      {$er=\"Cmd $command: Invalid workgroup (try the -W option)\";}\n    elsif ($var=~/ERRerror/)   \n      {$er=\"Cmd $command: Non-specific error code.\";}\n    elsif ($var=~/ERRbadpw/) \n      {$er=\"Cmd $command: Bad password - name/password pair in a Tree Connect or Session Setup are invalid.\";}\n    elsif ($var=~/ERRbadtype/)  \n      {$er=\"Cmd $command: reserved.\";}\n    elsif ($var=~/ERRaccess/) \n      {$er=\"Cmd $command: The requester does not have  the  necessary  access  rights  within  the specified  context for the requested function. The context is defined by the TID or the UID.\";}\n    elsif ($var=~/ERRinvnid/)   \n      {$er=\"Cmd $command: The tree ID (TID) specified in a command was invalid.\";}\n    elsif ($var=~/ERRinvnetname/) \n      {$er=\"Cmd $command: Invalid network name in tree connect.\";}\n    elsif ($var=~/ERRinvdevice/)  \n      {$er=\"Cmd $command: Invalid device - printer request made to non-printer connection or  non-printer request made to printer connection.\";}\n    elsif ($var=~/ERRqfull/)  \n      {$er=\"Cmd $command: Print queue full (files) -- returned by open print file.\";}\n    elsif ($var=~/ERRqtoobig/)\n      {$er=\"Cmd $command: Print queue full -- no space.\";}\n    elsif ($var=~/ERRqeof/)  \n      {$er=\"Cmd $command: EOF on print queue dump.\";}\n    elsif ($var=~/ERRinvpfid/)  \n      {$er=\"Cmd $command: Invalid print file FID.\";}\n    elsif ($var=~/ERRsmbcmd/) \n      {$er=\"Cmd $command: The server did not recognize the command received.\";}\n    elsif ($var=~/ERRsrverror/)  \n      {$er=\"Cmd $command: The server encountered an internal error, e.g., system file unavailable.\";}\n    elsif ($var=~/ERRfilespecs/)  \n      {$er=\"Cmd $command: The file handle (FID) and pathname parameters contained an invalid  combination of values.\";}\n    elsif ($var=~/ERRreserved/)  \n      {$er=\"Cmd $command: reserved.\";}\n    elsif ($var=~/ERRbadpermits/)   \n      {$er=\"Cmd $command: The access permissions specified for a file or directory are not a valid combination.  The server cannot set the requested attribute.\";}\n    elsif ($var=~/ERRreserved/)   \n      {$er=\"Cmd $command: reserved.\";}\n    elsif ($var=~/ERRsetattrmode/)  \n      {$er=\"Cmd $command: The attribute mode in the Set File Attribute request is invalid.\";}\n    elsif ($var=~/ERRpaused/)   \n      {$er=\"Cmd $command: Server is paused.\";}\n    elsif ($var=~/ERRmsgoff/)   \n      {$er=\"Cmd $command: Not receiving messages.\";}\n    elsif ($var=~/ERRnoroom/)   \n      {$er=\"Cmd $command: No room to buffer message.\";}\n    elsif ($var=~/ERRrmuns/)  \n      {$er=\"Cmd $command: Too many remote user names.\";}\n    elsif ($var=~/ERRtimeout/)   \n      {$er=\"Cmd $command: Operation timed out.\";}\n    elsif ($var=~/ERRnoresource/)   \n      { $er=\"Cmd $command: No resources currently available for request.\";}\n    elsif ($var=~/ERRtoomanyuids/)  \n      {$er=\"Cmd $command: Too many UIDs active on this session.\";}\n    elsif ($var=~/ERRbaduid/)   \n      {\n\t$er=\"Cmd $command: The UID is not known as a valid ID on this session.\";\n\t}\n    elsif ($var=~/ERRusempx/)   \n      {$er=\"Cmd $command: Temp unable to support Raw, use MPX mode.\";\t}\n    elsif ($var=~/ERRusestd/)   \n      {$er=\"Cmd $command: Temp unable to support Raw, use standard read/write.\";}\n    elsif ($var=~/ERRcontmpx/)   \n      {$er=\"Cmd $command: Continue in MPX mode.\";}\n    elsif ($var=~/ERRreserved/)   \n      {$er=\"Cmd $command: reserved.\";}\n    elsif ($var=~/ERRreserved/)   \n      {$er=\"Cmd $command: reserved.\";}\n    elsif ($var=~/ERRnosupport/)   \n      {print \"Function not supported.\";}\n    elsif ($var=~/ERRnowrite/)   \n      {$er=\"Cmd $command: Attempt to write on write-protected diskette.\";}\n    elsif ($var=~/ERRbadunit/)   \n      {$er=\"Cmd $command: Unknown unit.\";}\n    elsif ($var=~/ERRnotready/)   \n      {$er=\"Cmd $command: Drive not ready.\";}\n    elsif ($var=~/ERRbadcmd/)   \n      {$er=\"Cmd $command: Unknown command.\";}\n    elsif ($var=~/ERRdata/)   \n      {$er=\"Cmd $command: Data error (CRC).\";}\n    elsif ($var=~/ERRbadreq/)   \n      {$er=\"Cmd $command: Bad request structure length.\";}\n    elsif ($var=~/ERRseek/)   \n      {$er=\"Cmd $command: Seek error.\";}\n    elsif ($var=~/ERRbadmedia/)  \n      {$er=\"Cmd $command: Unknown media type.\";}\n    elsif ($var=~/ERRbadsector/)\n      {$er=\"Cmd $command: Sector not found.\";}\n    elsif ($var=~/ERRnopaper/) \n      {$er=\"Cmd $command: Printer out of paper.\";}\n    elsif ($var=~/ERRwrite/) \n      {$er=\"Cmd $command: Write fault.\";}\n    elsif ($var=~/ERRread/) \n      {$er=\"Cmd $command: Read fault.\";}\n    elsif ($var=~/ERRgeneral/)\n      {$er=\"Cmd $command: General failure.\";}\n    elsif ($var=~/ERRbadshare/) \n      {$er=\"Cmd $command: An open conflicts with an existing open.\";}\n    elsif ($var=~/ERRlock/) \n      {$er=\"Cmd $command: A Lock request conflicted with an existing lock or specified an invalid mode, or an Unlock requested attempted to remove a lock held by another process.\";}\n    elsif ($var=~/ERRwrongdisk/) \n      {$er=\"Cmd $command: The wrong disk was found in a drive.\";}\n    elsif ($var=~/ERRFCBUnavail/)  \n      {$er=\"Cmd $command: No FCBs are available to process request.\";}\n    elsif ($var=~/ERRsharebufexc/)\n      {$er=\"Cmd $command: A sharing buffer has been exceeded.\";}\n    elsif ($var=~/ERRDOS - 183 renaming files/)\n      {$er=\"Cmd $command: File target already exist.\";}\n    elsif ($var=~/(NT_STATUS_[^ \\n]*)/ && $1 ne 'NT_STATUS_OK') {\n      $er = $1; }\n    $self->{LAST_REP} = \\@var;\n    $self->{LAST_ERR} = $er if ($er);\n  return (defined($er) ? undef : 1);\n  }",
      "file" : "/var/tmp/arv_XfU2MN/Filesys-SmbClientParser-2.7/SmbClientParser.pm",
      "package" : "Filesys::SmbClientParser"
   }
]
